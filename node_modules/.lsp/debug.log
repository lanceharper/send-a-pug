Hello - from /Users/lanceharper/.vscode/extensions/jaredly.reason-vscode-1.5.1/bin.native
Previous log location: /var/folders/y5/zmmdgynd3x30h9c84rwt93rr0000gn/T/lsp.log
Sending notification {"jsonrpc": "2.0", "method": "client/registerCapability", "params": {"registrations": [{"id": "watching", "method": "workspace/didChangeWatchedFiles", "registerOptions": {"watchers": [{"globPattern": "**/bsconfig.json", "globPattern": "**/.merlin"}]}}]}}
Sending response {"id": 0, "jsonrpc": "2.0", "result": {"capabilities": {"textDocumentSync": 1, "hoverProvider": true, "completionProvider": {"resolveProvider": true, "triggerCharacters": ["."]}, "signatureHelpProvider": {"triggerCharacters": ["("]}, "definitionProvider": true, "typeDefinitionProvider": true, "referencesProvider": true, "documentSymbolProvider": true, "codeActionProvider": true, "executeCommandProvider": {"commands": ["reason-language-server.add_to_interface_inner"]}, "codeLensProvider": {"resolveProvider": true}, "documentHighlightProvider": true, "documentRangeFormattingProvider": true, "documentFormattingProvider": true, "documentFormattingProvider": true, "renameProvider": true}}}
Read message 
{"jsonrpc":"2.0","method":"initialized","params":{}}
Read message 
{"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{"reason_language_server":{"location":"","build_system_override_by_root":{},"refmt":"","lispRefmt":"","format_width":"80","per_value_codelens":false,"dependencies_codelens":true,"opens_codelens":true,"show_module_path_on_hover":true,"reloadOnChange":false,"show_debug_errors":false,"autoRebuild":true}}}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re","languageId":"reason","version":100,"text":"/* App is the actual entry point for the application. It matches on the route prop to determine which\n   sub-component to render */\nopen BsReactNative;\nopen Twitch;\n\ntype item = {clickedInWave: bool};\n\ntype state = list(item);\n\ntype clicked = bool;\n\ntype action =\n  | Click(clicked)\n  | Reset;\nlet tempCounterStyle = Style.(style([color(String(\"lightblue\"))]));\n\nlet component = ReasonReact.reducerComponent(\"App\");\n\nlet styles =\n  StyleSheet.create(\n    Style.{\n      \"explodeHeart\":\n        style([left(Pt(0.)), top(Pt(0.)), position(Absolute)]),\n    },\n  );\n\nlet make = _children => {\n  ...component,\n  didMount: _ => onAuthorized(twitchAuth => Js.log(clientIdGet(twitchAuth))),\n\n  initialState: () => [],\n\n  reducer: (action, state) =>\n    switch (action) {\n    | Click(clicked) =>\n      clicked ?\n        ReasonReact.Update([{clickedInWave: true}, ...state]) :\n        ReasonReact.NoUpdate\n    | Reset => ReasonReact.Update([])\n    },\n\n  render: self =>\n     <ReasonApollo.Provider client=Client.instance>\n    <View>\n      <HeartContainer>\n        <Heart filled=true style={styles##explodeHeart} />\n        <Heart filled=true style={styles##explodeHeart} />\n      </HeartContainer>\n      {self.state |> List.length >= 5 ?\n         <Wave onFinish={_event => self.send(Reset)} /> : ReasonReact.null}\n      <TriggerContainer onPress={_event => self.send(Click(true))} />\n      <Text style=tempCounterStyle>\n        {ReasonReact.string(string_of_int(self.state |> List.length))}\n      </Text>\n    </View>\n    </ReasonApollo.Provider>,\n};\n\nlet default = ReasonReact.wrapReasonForJs(~component, _ => make([||]));"}}}
📣 📣 NEW BSB PACKAGE 📣 📣
- location: /Users/lanceharper/Repositories/jerk-twitch/client
- bsPlatform: /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform
- buildSystem: bsb version 4.0.18
- build command: /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsb.exe -make-world
>> Build system running: /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsb.exe -make-world
>>> stdout
ninja: no work to do.
[1/1] [34mBuilding[39m [2mBsReactNative.cmi[22m
ninja: no work to do.
ninja: no work to do.
ninja: no work to do.
>>> stderr

Affected files: 
Cleaning bsconfig.json
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/lanceharper/Repositories/jerk-twitch/client/bsconfig.json", "diagnostics": []}}
Deps reason-apollo, reason-react, bs-react-native
Dep loc /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/bsconfig.json
Compiled base: /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs
Source directories: /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/src - /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/src/graphql-types
Source files found: /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/src/ReasonApolloTypes.re : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/src/ApolloLinks.re : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/src/ApolloUtilities.re : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/src/ApolloConsumer.re : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/src/graphql-types/ReasonApolloMutation.re : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/src/graphql-types/ReasonApolloQuery.re : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/src/graphql-types/ReasonApolloSubscription.re : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/src/ApolloInMemoryCache.re : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/src/ReasonApollo.re : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/src/ReasonApolloUtils.re : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/src/ApolloProvider.re : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/src/ApolloClient.re
Dep loc /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/bsconfig.json
Compiled base: /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/lib/bs
Source directories: /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/src
Source files found: /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/src/ReactDOMRe.re : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/src/ReactEvent.re : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/src/ReactEventRe.rei : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/src/ReasonReact.re : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/src/ReasonReactOptimizedCreateClass.re : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/src/ReactDOMServerRe.re : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/src/ReactEventRe.re : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/src/ReactEvent.rei : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/src/ReasonReact.rei
Adding intf /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/src/ReactEventRe.rei
Adding intf /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/src/ReactEvent.rei
Adding intf /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/src/ReasonReact.rei
Bad source file (extension) /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/src/ReactEventRe.rei
Bad source file (extension) /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/src/ReactEvent.rei
Bad source file (extension) /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/src/ReasonReact.rei
Dep loc /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/bsconfig.json
Compiled base: /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs
Source directories: /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src - /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components - /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/private
Source files found: /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/alertIOS.rei : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/timePickerAndroid.rei : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/actionSheetIOS.re : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/netInfo.re : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/backHandler.re : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/alert.re : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/datePickerAndroid.rei : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/keyboard.re : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/timePickerAndroid.re : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/platform.rei : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/nativeEventEmitter.re : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/animatedRe.rei : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/toastAndroid.re : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/alert.rei : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/asyncStorage.rei : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/actionSheetIOS.rei : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/toastAndroid.rei : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/cameraRoll.rei : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/styleSheet.re : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/dimensions.rei : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/nativeEventEmitter.rei : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/clipboard.re : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/clipboard.rei : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/linking.re : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/share.re : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/keyboard.rei : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/asyncStorage.re : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/settings.rei : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/settings.re : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/backHandler.rei : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/RNEvent.re : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/platform.re : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/permissionsAndroid.re : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/activityIndicator.rei : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/image.re : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/progressBarAndroid.rei : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/webView.rei : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/touchableNativeFeedback.rei : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/flatList.re : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/touchableWithoutFeedback.rei : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/touchableHighlight.rei : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/webView.re : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/snapshotViewIOS.re : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/refreshControl.rei : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/datePickerIOS.rei : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/snapshotViewIOS.rei : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/progressBarAndroid.re : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/touchableOpacity.rei : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/safeAreaView.rei : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/text.re : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/imageBackground.rei : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/sectionList.rei : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/segmentedControllOS.re : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/modal.re : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/safeAreaView.re : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/scrollView.rei : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/slider.re : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/refreshControl.re : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/touchableOpacity.re : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/tabBarIOS.rei : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/sectionList.re : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/textInput.rei : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/scrollView.re : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/slider.rei : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/button.re : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/view.re : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/animatedComponents.rei : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/text.rei : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/image.rei : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/modal.rei : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/viewPagerAndroid.rei : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/activityIndicator.re : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/keyboardAvoidingView.rei : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/textInput.re : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/pickerIOS.re : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/button.rei : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/maskedViewIOS.re : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/switch.re : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/tabBarIOS.re : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/segmentedControllOS.rei : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/flatList.rei : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/touchableWithoutFeedback.re : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/keyboardAvoidingView.re : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/touchableNativeFeedback.re : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/datePickerIOS.re : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/imageBackground.re : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/progressViewIOS.rei : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/maskedViewIOS.rei : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/progressViewIOS.re : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/picker.rei : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/viewPagerAndroid.re : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/animatedComponents.re : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/view.rei : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/touchableHighlight.re : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/switch.rei : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/pickerIOS.rei : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/statusBar.rei : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/statusBar.re : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/picker.re : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/alertIOS.re : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/panResponder.re : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/private/utilsRN.re : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/private/props.re : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/private/responderUtils.re : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/private/encode.re : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/style.rei : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/styleSheet.rei : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/nativeModules.rei : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/cameraRoll.re : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/imageStore.rei : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/panResponder.rei : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/netInfo.rei : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/permissionsAndroid.rei : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/appRegistry.rei : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/types.rei : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/easing.re : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/packager.re : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/appState.re : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/appState.rei : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/appRegistry.re : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/easing.rei : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/animated.re : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/share.rei : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/dimensions.re : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/style.re : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/pixelRatio.re : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/imagePickerIOS.rei : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/vibration.re : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/geolocation.rei : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/datePickerAndroid.re : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/imagePickerIOS.re : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/animatedRe.re : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/pixelRatio.rei : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/linking.rei : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/geolocation.re : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/imageStore.re : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/nativeModules.re : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/RNEvent.rei : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/vibration.rei
Adding intf /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/alertIOS.rei
Adding intf /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/timePickerAndroid.rei
Adding intf /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/datePickerAndroid.rei
Adding intf /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/platform.rei
Adding intf /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/animatedRe.rei
Adding intf /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/alert.rei
Adding intf /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/asyncStorage.rei
Adding intf /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/actionSheetIOS.rei
Adding intf /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/toastAndroid.rei
Adding intf /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/cameraRoll.rei
Adding intf /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/dimensions.rei
Adding intf /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/nativeEventEmitter.rei
Adding intf /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/clipboard.rei
Adding intf /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/keyboard.rei
Adding intf /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/settings.rei
Adding intf /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/backHandler.rei
Adding intf /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/activityIndicator.rei
Adding intf /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/progressBarAndroid.rei
Adding intf /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/webView.rei
Adding intf /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/touchableNativeFeedback.rei
Adding intf /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/touchableWithoutFeedback.rei
Adding intf /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/touchableHighlight.rei
Adding intf /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/refreshControl.rei
Adding intf /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/datePickerIOS.rei
Adding intf /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/snapshotViewIOS.rei
Adding intf /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/touchableOpacity.rei
Adding intf /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/safeAreaView.rei
Adding intf /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/imageBackground.rei
Adding intf /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/sectionList.rei
Adding intf /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/scrollView.rei
Adding intf /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/tabBarIOS.rei
Adding intf /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/textInput.rei
Adding intf /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/slider.rei
Adding intf /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/animatedComponents.rei
Adding intf /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/text.rei
Adding intf /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/image.rei
Adding intf /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/modal.rei
Adding intf /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/viewPagerAndroid.rei
Adding intf /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/keyboardAvoidingView.rei
Adding intf /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/button.rei
Adding intf /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/segmentedControllOS.rei
Adding intf /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/flatList.rei
Adding intf /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/progressViewIOS.rei
Adding intf /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/maskedViewIOS.rei
Adding intf /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/picker.rei
Adding intf /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/view.rei
Adding intf /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/switch.rei
Adding intf /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/pickerIOS.rei
Adding intf /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/statusBar.rei
Adding intf /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/style.rei
Adding intf /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/styleSheet.rei
Adding intf /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/nativeModules.rei
Adding intf /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/imageStore.rei
Adding intf /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/panResponder.rei
Adding intf /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/netInfo.rei
Adding intf /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/permissionsAndroid.rei
Adding intf /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/appRegistry.rei
Adding intf /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/types.rei
Adding intf /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/appState.rei
Adding intf /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/easing.rei
Adding intf /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/share.rei
Adding intf /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/imagePickerIOS.rei
Adding intf /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/geolocation.rei
Adding intf /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/pixelRatio.rei
Adding intf /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/linking.rei
Adding intf /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/RNEvent.rei
Adding intf /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/vibration.rei
Bad source file (extension) /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/alertIOS.rei
Bad source file (extension) /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/timePickerAndroid.rei
Bad source file (extension) /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/datePickerAndroid.rei
Bad source file (extension) /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/platform.rei
Bad source file (extension) /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/animatedRe.rei
Bad source file (extension) /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/alert.rei
Bad source file (extension) /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/asyncStorage.rei
Bad source file (extension) /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/actionSheetIOS.rei
Bad source file (extension) /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/toastAndroid.rei
Bad source file (extension) /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/cameraRoll.rei
Bad source file (extension) /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/dimensions.rei
Bad source file (extension) /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/nativeEventEmitter.rei
Bad source file (extension) /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/clipboard.rei
Bad source file (extension) /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/keyboard.rei
Bad source file (extension) /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/settings.rei
Bad source file (extension) /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/backHandler.rei
Bad source file (extension) /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/activityIndicator.rei
Bad source file (extension) /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/progressBarAndroid.rei
Bad source file (extension) /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/webView.rei
Bad source file (extension) /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/touchableNativeFeedback.rei
Bad source file (extension) /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/touchableWithoutFeedback.rei
Bad source file (extension) /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/touchableHighlight.rei
Bad source file (extension) /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/refreshControl.rei
Bad source file (extension) /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/datePickerIOS.rei
Bad source file (extension) /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/snapshotViewIOS.rei
Bad source file (extension) /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/touchableOpacity.rei
Bad source file (extension) /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/safeAreaView.rei
Bad source file (extension) /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/imageBackground.rei
Bad source file (extension) /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/sectionList.rei
Bad source file (extension) /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/scrollView.rei
Bad source file (extension) /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/tabBarIOS.rei
Bad source file (extension) /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/textInput.rei
Bad source file (extension) /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/slider.rei
Bad source file (extension) /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/animatedComponents.rei
Bad source file (extension) /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/text.rei
Bad source file (extension) /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/image.rei
Bad source file (extension) /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/modal.rei
Bad source file (extension) /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/viewPagerAndroid.rei
Bad source file (extension) /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/keyboardAvoidingView.rei
Bad source file (extension) /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/button.rei
Bad source file (extension) /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/segmentedControllOS.rei
Bad source file (extension) /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/flatList.rei
Bad source file (extension) /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/progressViewIOS.rei
Bad source file (extension) /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/maskedViewIOS.rei
Bad source file (extension) /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/picker.rei
Bad source file (extension) /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/view.rei
Bad source file (extension) /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/switch.rei
Bad source file (extension) /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/pickerIOS.rei
Bad source file (extension) /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/statusBar.rei
Bad source file (extension) /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/style.rei
Bad source file (extension) /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/styleSheet.rei
Bad source file (extension) /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/nativeModules.rei
Bad source file (extension) /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/imageStore.rei
Bad source file (extension) /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/panResponder.rei
Bad source file (extension) /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/netInfo.rei
Bad source file (extension) /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/permissionsAndroid.rei
Bad source file (extension) /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/appRegistry.rei
Bad source file (extension) /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/types.rei
Bad source file (extension) /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/appState.rei
Bad source file (extension) /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/easing.rei
Bad source file (extension) /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/share.rei
Bad source file (extension) /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/imagePickerIOS.rei
Bad source file (extension) /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/geolocation.rei
Bad source file (extension) /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/pixelRatio.rei
Bad source file (extension) /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/linking.rei
Bad source file (extension) /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/RNEvent.rei
Bad source file (extension) /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/vibration.rei
Extra intf /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/types.rei
adding namespace BsReactNative : BsReactNative : /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/BsReactNative.cmt
Got source directories src/components/App
Source directories: /Users/lanceharper/Repositories/jerk-twitch/client/src/components/App
Source files found: /Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/Twitch.re : /Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/Trigger.re : /Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re : /Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/Client.re : /Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/Wave.re : /Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/Heart.re : /Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/HeartContainer.re : /Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/TriggerContainer.re
-- All local modules found: 8
Twitch
impl /Users/lanceharper/Repositories/jerk-twitch/client/lib/bs/src/components/App/Twitch.cmt
Trigger
impl /Users/lanceharper/Repositories/jerk-twitch/client/lib/bs/src/components/App/Trigger.cmt
App
impl /Users/lanceharper/Repositories/jerk-twitch/client/lib/bs/src/components/App/App.cmt
Client
impl /Users/lanceharper/Repositories/jerk-twitch/client/lib/bs/src/components/App/Client.cmt
Wave
impl /Users/lanceharper/Repositories/jerk-twitch/client/lib/bs/src/components/App/Wave.cmt
Heart
impl /Users/lanceharper/Repositories/jerk-twitch/client/lib/bs/src/components/App/Heart.cmt
HeartContainer
impl /Users/lanceharper/Repositories/jerk-twitch/client/lib/bs/src/components/App/HeartContainer.cmt
TriggerContainer
impl /Users/lanceharper/Repositories/jerk-twitch/client/lib/bs/src/components/App/TriggerContainer.cmt
Dependency dirs /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src/graphql-types /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/lib/bs/src /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/components /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/private
Read message 
{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/Wave.re","languageId":"reason","version":47,"text":"open BsReactNative;\n\ntype state =\n  | Calm\n  | Waxing\n  | Waning;\n\ntype action =\n  | Intensify\n  | Abate\n  | Stop;\n\nlet component = ReasonReact.reducerComponent(\"Wave\");\n\nlet animatedValue = Animated.Value.create(0.0);\n\nlet duration = 1500.0;\n\nlet maxHeight = 300.0;\n\nlet animatedHeight =\n  Animated.Value.interpolate(\n    animatedValue,\n    ~inputRange=[0.0, 1.0],\n    ~outputRange=`float([0.0, maxHeight]),\n    ~extrapolate=Animated.Interpolation.Clamp,\n    (),\n  );\n\nlet animation =\n  Animated.timing(\n    ~value=animatedValue,\n    ~toValue=`raw(1.0),\n    ~duration,\n    ~easing=Easing.sin,\n    (),\n  );\n\nlet containerStyle =\n  Style.(\n    style([\n      opacity(Animated(animatedValue)),\n      height(Animated(animatedHeight)),\n      flex(1.0),\n      backgroundColor(String(\"limegreen\")),\n    ])\n  );\n\nlet make = (~onFinish, _children) => {\n  ...component,\n  didMount: self => self.send(Intensify),\n\n  initialState: () => Calm,\n  reducer: (action, _state) =>\n    switch (action) {\n    | Intensify =>\n      ReasonReact.UpdateWithSideEffects(\n        Waxing,\n        self =>\n          Animated.start(\n            Animated.timing(\n              ~value=animatedValue,\n              ~toValue=`raw(1.0),\n              ~duration,\n              (),\n            ),\n            ~callback=_ => self.send(Abate),\n            (),\n          ),\n      )\n    | Abate =>\n      ReasonReact.UpdateWithSideEffects(\n        Waning,\n        self =>\n          Animated.start(\n            Animated.timing(\n              ~value=animatedValue,\n              ~toValue=`raw(0.0),\n              ~duration=1500.0,\n              (),\n            ),\n            ~callback=_ => self.send(Stop),\n            (),\n          ),\n      )\n    | Stop => ReasonReact.UpdateWithSideEffects(Calm, onFinish)\n    },\n  render: _self => <Animated.View style=containerStyle />,\n};"}}}
Running diagnostics for file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re
➡️ running bsc /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/lanceharper/Repositories/jerk-twitch/client/lib/bs/src/components/App' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src/graphql-types' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/components' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/private' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/graphql_ppx/ppx' -ppx ''\''/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/reactjs_jsx_ppx_2.exe'\''' -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/.lsp/App.ast with pwd /Users/lanceharper/Repositories/jerk-twitch/client
<< Replacing lastDefinitions for file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re", "diagnostics": []}}
Running diagnostics for file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/Wave.re
➡️ running bsc /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/lanceharper/Repositories/jerk-twitch/client/lib/bs/src/components/App' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src/graphql-types' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/components' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/private' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/graphql_ppx/ppx' -ppx ''\''/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/reactjs_jsx_ppx_2.exe'\''' -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/.lsp/Wave.ast with pwd /Users/lanceharper/Repositories/jerk-twitch/client
<< Replacing lastDefinitions for file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/Wave.re
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/Wave.re", "diagnostics": []}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/Client.re","languageId":"reason","version":21,"text":"open ApolloInMemoryCache;\n\nlet inMemoryCache = createInMemoryCache();\n\nlet headerContextLink =\n  ApolloLinks.createContextLink(() =>\n    {\n      \"headers\": {\n        \"x-api-key\": \"da2-xcepzyehbfemxg5qdjbyf6qsl4\",\n      },\n    }\n  );\n\nlet httpLink =\n  ApolloLinks.createHttpLink(\n    ~uri=\n      \"https://iej7kez7cjhr7emzp5kn76wt24.appsync-api.us-west-2.amazonaws.com/graphql\",\n    (),\n  );\n\nlet instance =\n  ReasonApollo.createApolloClient(\n    ~link=ApolloLinks.from([|headerContextLink, httpLink|]),\n    ~cache=inMemoryCache,\n    (),\n  );"}}}
Read message 
{"jsonrpc":"2.0","id":1,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":55,"character":28},"end":{"line":55,"character":28}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0100135803223ms
Sending response {"id": 1, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":2,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0100135803223ms
Sending response {"id": 2, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, HeartContainer, Pervasives, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 20, "character": 4}, "end": {"line": 20, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":3,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.00405311584473ms
Sending response {"id": 3, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, HeartContainer, Pervasives, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 20, "character": 4}, "end": {"line": 20, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":4,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":46,"character":24}}}
[server] Got a method textDocument/hover
[server] processing took 0.00500679016113ms
FINDING /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/js.cmi src /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/js.ml
Sending response {"id": 4, "jsonrpc": "2.0", "result": {"range": {"start": {"line": 46, "character": 17}, "end": {"line": 46, "character": 25}}, "contents": {"kind": "markdown", "value": "```\nmodule Internal = {\n  let method_run9: (\n  meth(\n    [ `Arity_9 of 'a0 * 'a1 * 'a2 * 'a3 * 'a4 * 'a5 * 'a6 * 'a7 * 'a8 ],\n    'a9\n  ),\n  'a0,\n  'a1,\n  'a2,\n  'a3,\n  'a4,\n  'a5,\n  'a6,\n  'a7,\n  'a8\n) => 'a9;\n  let method_run8: (\n  meth(\n    [ `Arity_8 of 'a00 * 'a10 * 'a20 * 'a30 * 'a40 * 'a50 * 'a60 * 'a70 ],\n    'a8\n  ),\n  'a0,\n  'a1,\n  'a2,\n  'a3,\n  'a4,\n  'a5,\n  'a6,\n  'a7\n) => 'a8;\n  let method_run7: (\n  meth(\n    [ `Arity_7 of 'a01 * 'a11 * 'a21 * 'a31 * 'a41 * 'a51 * 'a61 ],\n    'a7\n  ),\n  'a0,\n  'a1,\n  'a2,\n  'a3,\n  'a4,\n  'a5,\n  'a6\n) => 'a7;\n  let method_run6: (\n  meth(\n    [ `Arity_6 of 'a02 * 'a12 * 'a22 * 'a32 * 'a42 * 'a52 ],\n    'a6\n  ),\n  'a0,\n  'a1,\n  'a2,\n  'a3,\n  'a4,\n  'a5\n) => 'a6;\n  let method_run5: (\n  meth(\n    [ `Arity_5 of 'a03 * 'a13 * 'a23 * 'a33 * 'a43 ],\n    'a5\n  ),\n  'a0,\n  'a1,\n  'a2,\n  'a3,\n  'a4\n) => 'a5;\n  let method_run4: (\n  meth(\n    [ `Arity_4 of 'a04 * 'a14 * 'a24 * 'a34 ],\n    'a4\n  ),\n  'a0,\n  'a1,\n  'a2,\n  'a3\n) => 'a4;\n  let method_run3: (\n  meth(\n    [ `Arity_3 of 'a05 * 'a15 * 'a25 ],\n    'a3\n  ),\n  'a0,\n  'a1,\n  'a2\n) => 'a3;\n  let method_run2: (\n  meth(\n    [ `Arity_2 of 'a06 * 'a16 ],\n    'a2\n  ),\n  'a0,\n  'a1\n) => 'a2;\n  let method_run1: (\n  meth([ `Arity_1 of 'a07 ], 'a1),\n  'a0\n) => 'a1;\n  let method_run0: meth([ `Arity_0 ], 'a0) => 'a0;\n  let fn_run9: (\n  fn(\n    [ `Arity_9 of 'a08 * 'a17 * 'a26 * 'a35 * 'a44 * 'a53 * 'a62 * 'a71 * 'a80 ],\n    'a9\n  ),\n  'a0,\n  'a1,\n  'a2,\n  'a3,\n  'a4,\n  'a5,\n  'a6,\n  'a7,\n  'a8\n) => 'a9;\n  let fn_run8: (\n  fn(\n    [ `Arity_8 of 'a09 * 'a18 * 'a27 * 'a36 * 'a45 * 'a54 * 'a63 * 'a72 ],\n    'a8\n  ),\n  'a0,\n  'a1,\n  'a2,\n  'a3,\n  'a4,\n  'a5,\n  'a6,\n  'a7\n) => 'a8;\n  let fn_run7: (\n  fn(\n    [ `Arity_7 of 'a010 * 'a19 * 'a28 * 'a37 * 'a46 * 'a55 * 'a64 ],\n    'a7\n  ),\n  'a0,\n  'a1,\n  'a2,\n  'a3,\n  'a4,\n  'a5,\n  'a6\n) => 'a7;\n  let fn_run6: (\n  fn(\n    [ `Arity_6 of 'a011 * 'a110 * 'a29 * 'a38 * 'a47 * 'a56 ],\n    'a6\n  ),\n  'a0,\n  'a1,\n  'a2,\n  'a3,\n  'a4,\n  'a5\n) => 'a6;\n  let fn_run5: (\n  fn(\n    [ `Arity_5 of 'a012 * 'a111 * 'a210 * 'a39 * 'a48 ],\n    'a5\n  ),\n  'a0,\n  'a1,\n  'a2,\n  'a3,\n  'a4\n) => 'a5;\n  let fn_run4: (\n  fn(\n    [ `Arity_4 of 'a013 * 'a112 * 'a211 * 'a310 ],\n    'a4\n  ),\n  'a0,\n  'a1,\n  'a2,\n  'a3\n) => 'a4;\n  let fn_run3: (\n  fn(\n    [ `Arity_3 of 'a014 * 'a113 * 'a212 ],\n    'a3\n  ),\n  'a0,\n  'a1,\n  'a2\n) => 'a3;\n  let fn_run2: (\n  fn(\n    [ `Arity_2 of 'a015 * 'a114 ],\n    'a2\n  ),\n  'a0,\n  'a1\n) => 'a2;\n  let fn_run1: (\n  fn([ `Arity_1 of 'a016 ], 'a1),\n  'a0\n) => 'a1;\n  let fn_run0: fn([ `Arity_0 ], 'a0) => 'a0;\n  let fn_method10: (\n  'a0,\n  'a1,\n  'a2,\n  'a3,\n  'a4,\n  'a5,\n  'a6,\n  'a7,\n  'a8,\n  'a9\n) => 'a10 => meth_callback(\n  [ `Arity_10 of\n    'a017 * 'a115 * 'a213 * 'a311 * 'a49 * 'a57 * 'a65 * 'a73 * 'a81 * 'a9 ],\n  'a10\n);\n  let fn_method9: (\n  'a0,\n  'a1,\n  'a2,\n  'a3,\n  'a4,\n  'a5,\n  'a6,\n  'a7,\n  'a8\n) => 'a9 => meth_callback(\n  [ `Arity_9 of\n    'a018 * 'a116 * 'a214 * 'a312 * 'a410 * 'a58 * 'a66 * 'a74 * 'a82 ],\n  'a9\n);\n  let fn_method8: (\n  'a0,\n  'a1,\n  'a2,\n  'a3,\n  'a4,\n  'a5,\n  'a6,\n  'a7\n) => 'a8 => meth_callback(\n  [ `Arity_8 of 'a019 * 'a117 * 'a215 * 'a313 * 'a411 * 'a59 * 'a67 * 'a75 ],\n  'a8\n);\n  let fn_method7: (\n  'a0,\n  'a1,\n  'a2,\n  'a3,\n  'a4,\n  'a5,\n  'a6\n) => 'a7 => meth_callback(\n  [ `Arity_7 of 'a020 * 'a118 * 'a216 * 'a314 * 'a412 * 'a510 * 'a68 ],\n  'a7\n);\n  let fn_method6: (\n  'a0,\n  'a1,\n  'a2,\n  'a3,\n  'a4,\n  'a5\n) => 'a6 => meth_callback(\n  [ `Arity_6 of 'a021 * 'a119 * 'a217 * 'a315 * 'a413 * 'a511 ],\n  'a6\n);\n  let fn_method5: (\n  'a0,\n  'a1,\n  'a2,\n  'a3,\n  'a4\n) => 'a5 => meth_callback(\n  [ `Arity_5 of 'a022 * 'a120 * 'a218 * 'a316 * 'a414 ],\n  'a5\n);\n  let fn_method4: (\n  'a0,\n  'a1,\n  'a2,\n  'a3\n) => 'a4 => meth_callback(\n  [ `Arity_4 of 'a023 * 'a121 * 'a219 * 'a317 ],\n  'a4\n);\n  let fn_method3: ('a0, 'a1, 'a2) => 'a3 => meth_callback(\n  [ `Arity_3 of 'a024 * 'a122 * 'a220 ],\n  'a3\n);\n  let fn_method2: ('a0, 'a1) => 'a2 => meth_callback(\n  [ `Arity_2 of 'a025 * 'a123 ],\n  'a2\n);\n  let fn_method1: 'a0 => 'a1 => meth_callback(\n  [ `Arity_1 of 'a026 ],\n  'a1\n);\n  let fn_mk9: (\n  'a0,\n  'a1,\n  'a2,\n  'a3,\n  'a4,\n  'a5,\n  'a6,\n  'a7,\n  'a8\n) => 'a9 => fn(\n  [ `Arity_9 of\n    'a027 * 'a124 * 'a221 * 'a318 * 'a415 * 'a512 * 'a69 * 'a76 * 'a83 ],\n  'a9\n);\n  let fn_mk8: (\n  'a0,\n  'a1,\n  'a2,\n  'a3,\n  'a4,\n  'a5,\n  'a6,\n  'a7\n) => 'a8 => fn(\n  [ `Arity_8 of 'a028 * 'a125 * 'a222 * 'a319 * 'a416 * 'a513 * 'a610 * 'a77 ],\n  'a8\n);\n  let fn_mk7: (\n  'a0,\n  'a1,\n  'a2,\n  'a3,\n  'a4,\n  'a5,\n  'a6\n) => 'a7 => fn(\n  [ `Arity_7 of 'a029 * 'a126 * 'a223 * 'a320 * 'a417 * 'a514 * 'a611 ],\n  'a7\n);\n  let fn_mk6: (\n  'a0,\n  'a1,\n  'a2,\n  'a3,\n  'a4,\n  'a5\n) => 'a6 => fn(\n  [ `Arity_6 of 'a030 * 'a127 * 'a224 * 'a321 * 'a418 * 'a515 ],\n  'a6\n);\n  let fn_mk5: ('a0, 'a1, 'a2, 'a3, 'a4) => 'a5 => fn(\n  [ `Arity_5 of 'a031 * 'a128 * 'a225 * 'a322 * 'a419 ],\n  'a5\n);\n  let fn_mk4: ('a0, 'a1, 'a2, 'a3) => 'a4 => fn(\n  [ `Arity_4 of 'a032 * 'a129 * 'a226 * 'a323 ],\n  'a4\n);\n  let fn_mk3: ('a0, 'a1, 'a2) => 'a3 => fn(\n  [ `Arity_3 of 'a033 * 'a130 * 'a227 ],\n  'a3\n);\n  let fn_mk2: ('a0, 'a1) => 'a2 => fn(\n  [ `Arity_2 of 'a034 * 'a131 ],\n  'a2\n);\n  let fn_mk1: 'a0 => 'a1 => fn(\n  [ `Arity_1 of 'a035 ],\n  'a1\n);\n  let fn_mk0: unit => 'a0 => fn([ `Arity_0 ], 'a0);\n  let unsafe_downgrade: t('a) => 'a;\n  let raw_function: string => 'a;\n  let raw_stmt: string => 'a;\n  let raw_expr: string => 'a;\n  let debugger: unit => unit;\n  let !: t('a) => 'a;\n  type fn('arg, 'result)\n  type meth('arg, 'result)\n  type meth_callback('obj, 'a)\n}\n```"}}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":4}}
Running diagnostics for file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/Client.re
➡️ running bsc /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/lanceharper/Repositories/jerk-twitch/client/lib/bs/src/components/App' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src/graphql-types' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/components' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/private' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/graphql_ppx/ppx' -ppx ''\''/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/reactjs_jsx_ppx_2.exe'\''' -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/.lsp/Client.ast with pwd /Users/lanceharper/Repositories/jerk-twitch/client
<< Replacing lastDefinitions for file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/Client.re
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/Client.re", "diagnostics": []}}
Read message 
{"jsonrpc":"2.0","id":5,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":49,"character":26}}}
[server] Got a method textDocument/hover
[server] processing took 0.00905990600586ms
FINDING /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/lib/bs/src/ReasonReact.cmti src /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/src/ReasonReact.rei
Trying for declared Value 1030 in file file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re
Sending response {"id": 5, "jsonrpc": "2.0", "result": {"range": {"start": {"line": 49, "character": 25}, "end": {"line": 49, "character": 31}}, "contents": {"kind": "markdown", "value": "```\nReasonReact.self(\n  Wave.state,\n  ReasonReact.noRetainedProps,\n  Wave.action\n)\n```\n\n```\ntype self('state, 'retainedProps, 'action) = {\n  handle: 'payload.\n  ('payload -> ('state, 'retainedProps, 'action) self -> unit) ->\n  'payload -> unit,\n  state: 'state,\n  retainedProps: 'retainedProps,\n  send: 'action => unit,\n  onUnmount: unit => unit => unit\n}\n```\n\n<root>/client/src/components/App/App.re"}}}
Read message 
{"jsonrpc":"2.0","id":6,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":43,"character":10},"end":{"line":43,"character":10}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00810623168945ms
Sending response {"id": 6, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":7,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":44,"character":9}}}
[server] Got a method textDocument/hover
[server] processing took 0.0100135803223ms
FINDING /Users/lanceharper/Repositories/jerk-twitch/client/lib/bs/src/components/App/HeartContainer.cmt src /Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/HeartContainer.re
Sending response {"id": 7, "jsonrpc": "2.0", "result": {"range": {"start": {"line": 44, "character": 2}, "end": {"line": 44, "character": 16}}, "contents": {"kind": "markdown", "value": "```\nmodule HeartContainer = {\n  let styles: Js.t(\n  < heartContainer : BsReactNative.Style.t >\n);\n  let component: ReasonReact.componentSpec(\n  ReasonReact.stateless,\n  ReasonReact.stateless,\n  ReasonReact.noRetainedProps,\n  ReasonReact.noRetainedProps,\n  ReasonReact.actionless\n);\n  let make: array(\n  ReasonReact.reactElement\n) => ReasonReact.componentSpec(\n  ReasonReact.stateless,\n  ReasonReact.stateless,\n  ReasonReact.noRetainedProps,\n  ReasonReact.noRetainedProps,\n  ReasonReact.actionless\n);\n}\n```"}}}
Read message 
{"jsonrpc":"2.0","id":8,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":42,"character":11}}}
[server] Got a method textDocument/hover
[server] processing took 0.0159740447998ms
FINDING /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src/ReasonApollo.cmt src /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/src/ReasonApollo.re
Sending response {"id": 8, "jsonrpc": "2.0", "result": {"range": {"start": {"line": 42, "character": 1}, "end": {"line": 42, "character": 13}}, "contents": {"kind": "markdown", "value": "```\nmodule ReasonApollo = {\n  let createApolloClient: (\n  ~link: ReasonApolloTypes.apolloLink,\n  ~cache: ReasonApolloTypes.apolloCache,\n  ~?ssrMode: option(bool),\n  ~?ssrForceFetchDelay: option(int),\n  ~?connectToDevTools: option(bool),\n  ~?queryDeduplication: option(bool),\n  unit\n) => ApolloClient.generatedApolloClient;\n  module CreateQuery;\n  module CreateMutation;\n  module CreateSubscription;\n  module Provider;\n  module Consumer;\n}\n```"}}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re","version":101},"contentChanges":[{"text":"/* App is the actual entry point for the application. It matches on the route prop to determine which\n   sub-component to render */\nopen BsReactNative;\nopen Twitch;\n\ntype item = {clickedInWave: bool};\n\ntype state = list(item);\n\ntype clicked = bool;\n\ntype action =\n  | Click(clicked)\n  | Reset;\nlet tempCounterStyle = Style.(style([color(String(\"lightblue\"))]));\n\nlet component = ReasonReact.reducerComponent(\"App\");\n\nlet styles =\n  StyleSheet.create(\n    Style.{\n      \"explodeHeart\":\n        style([left(Pt(0.)), top(Pt(0.)), position(Absolute)]),\n    },\n  );\n\nlet make = _children => {\n  ...component,\n  didMount: _ => onAuthorized(twitchAuth => Js.log(clientIdGet(twitchAuth))),\n\n  initialState: () => [],\n\n  reducer: (action, state) =>\n    switch (action) {\n    | Click(clicked) =>\n      clicked ?\n        ReasonReact.Update([{clickedInWave: true}, ...state]) :\n        ReasonReact.NoUpdate\n    | Reset => ReasonReact.Update([])\n    },\n \n  render: self =>\n     <ReasonApollo.Provider client=Client.instance>\n    <View>\n      <HeartContainer>\n        <Heart filled=true style={styles##explodeHeart} />\n        <Heart filled=true style={styles##explodeHeart} />\n      </HeartContainer>\n      {self.state |> List.length >= 5 ?\n         <Wave onFinish={_event => self.send(Reset)} /> : ReasonReact.null}\n      <TriggerContainer onPress={_event => self.send(Click(true))} />\n      <Text style=tempCounterStyle>\n        {ReasonReact.string(string_of_int(self.state |> List.length))}\n      </Text>\n    </View>\n    </ReasonApollo.Provider>,\n};\n\nlet default = ReasonReact.wrapReasonForJs(~component, _ => make([||]));"}]}}
Read message 
{"jsonrpc":"2.0","id":9,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":42,"character":30}}}
[server] Got a method textDocument/hover
[server] processing took 0.0100135803223ms
➡️ running bsc /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/lanceharper/Repositories/jerk-twitch/client/lib/bs/src/components/App' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src/graphql-types' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/components' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/private' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/graphql_ppx/ppx' -ppx ''\''/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/reactjs_jsx_ppx_2.exe'\''' -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/.lsp/App.ast with pwd /Users/lanceharper/Repositories/jerk-twitch/client
<< Replacing lastDefinitions for file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re
Sending response {"id": 9, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":10,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.00500679016113ms
Sending response {"id": 10, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, HeartContainer, Pervasives, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 20, "character": 4}, "end": {"line": 20, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":11,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.00810623168945ms
Sending response {"id": 11, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, HeartContainer, Pervasives, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 20, "character": 4}, "end": {"line": 20, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":12,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":42,"character":31}}}
[server] Got a method textDocument/definition
[server] processing took 0.00596046447754ms
Sending response {"id": 12, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":13,"method":"textDocument/formatting","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"options":{"tabSize":2,"insertSpaces":true}}}
[server] Got a method textDocument/formatting
[server] processing took 0.0119209289551ms
Sending response {"id": 13, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 60, "character": 0}}, "newText": "/* App is the actual entry point for the application. It matches on the route prop to determine which\n   sub-component to render */\nopen BsReactNative;\nopen Twitch;\n\ntype item = {clickedInWave: bool};\n\ntype state = list(item);\n\ntype clicked = bool;\n\ntype action =\n  | Click(clicked)\n  | Reset;\nlet tempCounterStyle = Style.(style([color(String(\"lightblue\"))]));\n\nlet component = ReasonReact.reducerComponent(\"App\");\n\nlet styles =\n  StyleSheet.create(\n    Style.{\n      \"explodeHeart\":\n        style([left(Pt(0.)), top(Pt(0.)), position(Absolute)]),\n    },\n  );\n\nlet make = _children => {\n  ...component,\n  didMount: _ => onAuthorized(twitchAuth => Js.log(clientIdGet(twitchAuth))),\n\n  initialState: () => [],\n\n  reducer: (action, state) =>\n    switch (action) {\n    | Click(clicked) =>\n      clicked ?\n        ReasonReact.Update([{clickedInWave: true}, ...state]) :\n        ReasonReact.NoUpdate\n    | Reset => ReasonReact.Update([])\n    },\n\n  render: self =>\n    <ReasonApollo.Provider client=Client.instance>\n      <View>\n        <HeartContainer>\n          <Heart filled=true style={styles##explodeHeart} />\n          <Heart filled=true style={styles##explodeHeart} />\n        </HeartContainer>\n        {self.state |> List.length >= 5 ?\n           <Wave onFinish={_event => self.send(Reset)} /> : ReasonReact.null}\n        <TriggerContainer onPress={_event => self.send(Click(true))} />\n        <Text style=tempCounterStyle>\n          {ReasonReact.string(string_of_int(self.state |> List.length))}\n        </Text>\n      </View>\n    </ReasonApollo.Provider>,\n};\n\nlet default = ReasonReact.wrapReasonForJs(~component, _ => make([||]));"}]}
Running diagnostics for file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re", "diagnostics": []}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re","version":102},"contentChanges":[{"text":"/* App is the actual entry point for the application. It matches on the route prop to determine which\n   sub-component to render */\nopen BsReactNative;\nopen Twitch;\n\ntype item = {clickedInWave: bool};\n\ntype state = list(item);\n\ntype clicked = bool;\n\ntype action =\n  | Click(clicked)\n  | Reset;\nlet tempCounterStyle = Style.(style([color(String(\"lightblue\"))]));\n\nlet component = ReasonReact.reducerComponent(\"App\");\n\nlet styles =\n  StyleSheet.create(\n    Style.{\n      \"explodeHeart\":\n        style([left(Pt(0.)), top(Pt(0.)), position(Absolute)]),\n    },\n  );\n\nlet make = _children => {\n  ...component,\n  didMount: _ => onAuthorized(twitchAuth => Js.log(clientIdGet(twitchAuth))),\n\n  initialState: () => [],\n\n  reducer: (action, state) =>\n    switch (action) {\n    | Click(clicked) =>\n      clicked ?\n        ReasonReact.Update([{clickedInWave: true}, ...state]) :\n        ReasonReact.NoUpdate\n    | Reset => ReasonReact.Update([])\n    },\n\n  render: self =>\n    <ReasonApollo.Provider client=Client.instance>\n      <View>\n        <HeartContainer>\n          <Heart filled=true style={styles##explodeHeart} />\n          <Heart filled=true style={styles##explodeHeart} />\n        </HeartContainer>\n        {self.state |> List.length >= 5 ?\n           <Wave onFinish={_event => self.send(Reset)} /> : ReasonReact.null}\n        <TriggerContainer onPress={_event => self.send(Click(true))} />\n        <Text style=tempCounterStyle>\n          {ReasonReact.string(string_of_int(self.state |> List.length))}\n        </Text>\n      </View>\n    </ReasonApollo.Provider>,\n};\n\nlet default = ReasonReact.wrapReasonForJs(~component, _ => make([||]));"}]}}
Read message 
{"jsonrpc":"2.0","id":14,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.00905990600586ms
➡️ running bsc /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/lanceharper/Repositories/jerk-twitch/client/lib/bs/src/components/App' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src/graphql-types' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/components' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/private' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/graphql_ppx/ppx' -ppx ''\''/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/reactjs_jsx_ppx_2.exe'\''' -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/.lsp/App.ast with pwd /Users/lanceharper/Repositories/jerk-twitch/client
<< Replacing lastDefinitions for file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re
Sending response {"id": 14, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, HeartContainer, Pervasives, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 20, "character": 4}, "end": {"line": 20, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":15,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.00500679016113ms
Sending response {"id": 15, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, HeartContainer, Pervasives, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 20, "character": 4}, "end": {"line": 20, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Running diagnostics for file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re", "diagnostics": []}}
Read message 
{"jsonrpc":"2.0","id":16,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":53,"character":15},"end":{"line":53,"character":15}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0338554382324ms
Sending response {"id": 16, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":17,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":46,"character":18}}}
[server] Got a method textDocument/hover
[server] processing took 0.0159740447998ms
FINDING /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/js.cmi src /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/js.ml
Sending response {"id": 17, "jsonrpc": "2.0", "result": {"range": {"start": {"line": 46, "character": 16}, "end": {"line": 46, "character": 18}}, "contents": {"kind": "markdown", "value": "```\nmodule Js = {\n  module Console;\n  module Vector;\n  module List;\n  module Result;\n  module Option;\n  module Int;\n  module Float;\n  module Types;\n  module Typed_array;\n  module Obj;\n  module Math;\n  module Json;\n  module Global;\n  module Dict;\n  module Date;\n  module Promise;\n  module Re;\n  module String;\n  module Array;\n  module Exn;\n  module Null_undefined;\n  module Nullable;\n  module Undefined;\n  module Null;\n  let unsafe_ge: ('a, 'a) => bool;\n  let unsafe_gt: ('a, 'a) => bool;\n  let unsafe_le: ('a, 'a) => bool;\n  let unsafe_lt: ('a, 'a) => bool;\n  let eqNullable: ('a, nullable('a)) => bool;\n  let eqUndefined: ('a, undefined('a)) => bool;\n  let eqNull: ('a, null('a)) => bool;\n  let logMany: array('a) => unit;\n  let log4: ('a, 'b, 'c, 'd) => unit;\n  let log3: ('a, 'b, 'c) => unit;\n  let log2: ('a, 'b) => unit;\n  let log: 'a => unit;\n  let typeof: 'a => string;\n  let undefined: undefined('a);\n  let null: null('a);\n  type promise('a, 'e)\n  let testAny: 'a => bool;\n  let isNullable: nullable('a) => bool;\n  let test: nullable('a) => bool;\n  let nullToOption: null('a) => option('a);\n  let undefinedToOption: undefined('a) => option('a);\n  let toOption: nullable('a) => option('a);\n  type null_undefined('a) = nullable('a)\n  type nullable('a)\n  type undefined('a)\n  type null('a)\n  module Internal;\n  module MapperRt;\n  type t('a)\n}\n```"}}}
Read message 
{"jsonrpc":"2.0","id":18,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":48,"character":34}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.0100135803223ms
Got a loc for pos
Sending response {"id": 18, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 52, "character": 63}, "end": {"line": 52, "character": 69}}, "kind": 2}, {"range": {"start": {"line": 48, "character": 28}, "end": {"line": 48, "character": 34}}, "kind": 2}]}
Read message 
{"jsonrpc":"2.0","id":19,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":48,"character":34},"end":{"line":48,"character":34}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0171661376953ms
Sending response {"id": 19, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":20,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":48,"character":34}}}
[server] Got a method textDocument/definition
[server] processing took 0.014066696167ms
Got a loc for pos
Global defn List length : Value
FINDING /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/list.cmti src /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/list.mli
Got stamp 1008
Inner uri file:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/list.mli
Sending response {"id": 20, "jsonrpc": "2.0", "result": {"uri": "file:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/list.mli", "range": {"start": {"line": 26, "character": 4}, "end": {"line": 26, "character": 10}}}}
Read message 
{"jsonrpc":"2.0","id":21,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0100135803223ms
Sending response {"id": 21, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":22,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":48,"character":34}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.0150203704834ms
Got a loc for pos
Sending response {"id": 22, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 52, "character": 63}, "end": {"line": 52, "character": 69}}, "kind": 2}, {"range": {"start": {"line": 48, "character": 28}, "end": {"line": 48, "character": 34}}, "kind": 2}]}
Read message 
{"jsonrpc":"2.0","id":23,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0109672546387ms
Sending response {"id": 23, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, HeartContainer, Pervasives, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 20, "character": 4}, "end": {"line": 20, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":24,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":48,"character":34},"end":{"line":48,"character":34}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0159740447998ms
Sending response {"id": 24, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":25,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0109672546387ms
Sending response {"id": 25, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, HeartContainer, Pervasives, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 20, "character": 4}, "end": {"line": 20, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":26,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":26,"character":23}}}
[server] Got a method textDocument/hover
[server] processing took 0.0250339508057ms
Sending response {"id": 26, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":27,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":16,"character":52},"end":{"line":16,"character":52}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0100135803223ms
Sending response {"id": 27, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re","version":103},"contentChanges":[{"text":"/* App is the actual entry point for the application. It matches on the route prop to determine which\n   sub-component to render */\nopen BsReactNative;\nopen Twitch;\n\ntype item = {clickedInWave: bool};\n\ntype state = list(item);\n\ntype clicked = bool;\n\ntype action =\n  | Click(clicked)\n  | Reset;\nlet tempCounterStyle = Style.(style([color(String(\"lightblue\"))]));\n\nlet component = ReasonReact.reducerComponent(\"App\");\n\n\nlet styles =\n  StyleSheet.create(\n    Style.{\n      \"explodeHeart\":\n        style([left(Pt(0.)), top(Pt(0.)), position(Absolute)]),\n    },\n  );\n\nlet make = _children => {\n  ...component,\n  didMount: _ => onAuthorized(twitchAuth => Js.log(clientIdGet(twitchAuth))),\n\n  initialState: () => [],\n\n  reducer: (action, state) =>\n    switch (action) {\n    | Click(clicked) =>\n      clicked ?\n        ReasonReact.Update([{clickedInWave: true}, ...state]) :\n        ReasonReact.NoUpdate\n    | Reset => ReasonReact.Update([])\n    },\n\n  render: self =>\n    <ReasonApollo.Provider client=Client.instance>\n      <View>\n        <HeartContainer>\n          <Heart filled=true style={styles##explodeHeart} />\n          <Heart filled=true style={styles##explodeHeart} />\n        </HeartContainer>\n        {self.state |> List.length >= 5 ?\n           <Wave onFinish={_event => self.send(Reset)} /> : ReasonReact.null}\n        <TriggerContainer onPress={_event => self.send(Click(true))} />\n        <Text style=tempCounterStyle>\n          {ReasonReact.string(string_of_int(self.state |> List.length))}\n        </Text>\n      </View>\n    </ReasonApollo.Provider>,\n};\n\nlet default = ReasonReact.wrapReasonForJs(~component, _ => make([||]));"}]}}
Read message 
{"jsonrpc":"2.0","id":28,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0228881835938ms
➡️ running bsc /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/lanceharper/Repositories/jerk-twitch/client/lib/bs/src/components/App' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src/graphql-types' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/components' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/private' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/graphql_ppx/ppx' -ppx ''\''/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/reactjs_jsx_ppx_2.exe'\''' -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/.lsp/App.ast with pwd /Users/lanceharper/Repositories/jerk-twitch/client
<< Replacing lastDefinitions for file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re
Sending response {"id": 28, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, HeartContainer, Pervasives, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 21, "character": 4}, "end": {"line": 21, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":29,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.00810623168945ms
Sending response {"id": 29, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, HeartContainer, Pervasives, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 21, "character": 4}, "end": {"line": 21, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re","version":104},"contentChanges":[{"text":"/* App is the actual entry point for the application. It matches on the route prop to determine which\n   sub-component to render */\nopen BsReactNative;\nopen Twitch;\n\ntype item = {clickedInWave: bool};\n\ntype state = list(item);\n\ntype clicked = bool;\n\ntype action =\n  | Click(clicked)\n  | Reset;\nlet tempCounterStyle = Style.(style([color(String(\"lightblue\"))]));\n\nlet component = ReasonReact.reducerComponent(\"App\");\n\n\n\nlet styles =\n  StyleSheet.create(\n    Style.{\n      \"explodeHeart\":\n        style([left(Pt(0.)), top(Pt(0.)), position(Absolute)]),\n    },\n  );\n\nlet make = _children => {\n  ...component,\n  didMount: _ => onAuthorized(twitchAuth => Js.log(clientIdGet(twitchAuth))),\n\n  initialState: () => [],\n\n  reducer: (action, state) =>\n    switch (action) {\n    | Click(clicked) =>\n      clicked ?\n        ReasonReact.Update([{clickedInWave: true}, ...state]) :\n        ReasonReact.NoUpdate\n    | Reset => ReasonReact.Update([])\n    },\n\n  render: self =>\n    <ReasonApollo.Provider client=Client.instance>\n      <View>\n        <HeartContainer>\n          <Heart filled=true style={styles##explodeHeart} />\n          <Heart filled=true style={styles##explodeHeart} />\n        </HeartContainer>\n        {self.state |> List.length >= 5 ?\n           <Wave onFinish={_event => self.send(Reset)} /> : ReasonReact.null}\n        <TriggerContainer onPress={_event => self.send(Click(true))} />\n        <Text style=tempCounterStyle>\n          {ReasonReact.string(string_of_int(self.state |> List.length))}\n        </Text>\n      </View>\n    </ReasonApollo.Provider>,\n};\n\nlet default = ReasonReact.wrapReasonForJs(~component, _ => make([||]));"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re","version":105},"contentChanges":[{"text":"/* App is the actual entry point for the application. It matches on the route prop to determine which\n   sub-component to render */\nopen BsReactNative;\nopen Twitch;\n\ntype item = {clickedInWave: bool};\n\ntype state = list(item);\n\ntype clicked = bool;\n\ntype action =\n  | Click(clicked)\n  | Reset;\nlet tempCounterStyle = Style.(style([color(String(\"lightblue\"))]));\n\nlet component = ReasonReact.reducerComponent(\"App\");\n\nmodule GetAllMessages = [%graphql {|\n  {\n    messages {\n      id\n      text\n      author {\n        id\n        name\n      }\n    }\n  }\n|}];\n\nlet styles =\n  StyleSheet.create(\n    Style.{\n      \"explodeHeart\":\n        style([left(Pt(0.)), top(Pt(0.)), position(Absolute)]),\n    },\n  );\n\nlet make = _children => {\n  ...component,\n  didMount: _ => onAuthorized(twitchAuth => Js.log(clientIdGet(twitchAuth))),\n\n  initialState: () => [],\n\n  reducer: (action, state) =>\n    switch (action) {\n    | Click(clicked) =>\n      clicked ?\n        ReasonReact.Update([{clickedInWave: true}, ...state]) :\n        ReasonReact.NoUpdate\n    | Reset => ReasonReact.Update([])\n    },\n\n  render: self =>\n    <ReasonApollo.Provider client=Client.instance>\n      <View>\n        <HeartContainer>\n          <Heart filled=true style={styles##explodeHeart} />\n          <Heart filled=true style={styles##explodeHeart} />\n        </HeartContainer>\n        {self.state |> List.length >= 5 ?\n           <Wave onFinish={_event => self.send(Reset)} /> : ReasonReact.null}\n        <TriggerContainer onPress={_event => self.send(Click(true))} />\n        <Text style=tempCounterStyle>\n          {ReasonReact.string(string_of_int(self.state |> List.length))}\n        </Text>\n      </View>\n    </ReasonApollo.Provider>,\n};\n\nlet default = ReasonReact.wrapReasonForJs(~component, _ => make([||]));"}]}}
Read message 
{"jsonrpc":"2.0","id":30,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0169277191162ms
➡️ running bsc /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/lanceharper/Repositories/jerk-twitch/client/lib/bs/src/components/App' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src/graphql-types' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/components' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/private' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/graphql_ppx/ppx' -ppx ''\''/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/reactjs_jsx_ppx_2.exe'\''' -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/.lsp/App.ast with pwd /Users/lanceharper/Repositories/jerk-twitch/client
Sending response {"id": 30, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, HeartContainer, Pervasives, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 21, "character": 4}, "end": {"line": 21, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":31,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":29,"character":4},"end":{"line":29,"character":4}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00786781311035ms
Sending response {"id": 31, "jsonrpc": "2.0", "result": null}
Running diagnostics for file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re
type error here Read_schema.Schema_file_not_found
[1mFile "[1m", line 1[0m[0m:
[1;31mError[0m: Error while running external preprocessor
Command line: /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/graphql_ppx/ppx '/var/folders/y5/zmmdgynd3x30h9c84rwt93rr0000gn/T/camlppxcae4ab' '/var/folders/y5/zmmdgynd3x30h9c84rwt93rr0000gn/T/camlppx7c5cfa'

Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re", "diagnostics": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "message": "Read_schema.Schema_file_not_found\nFile \"\", line 1:\nError: Error while running external preprocessor\nCommand line: /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/graphql_ppx/ppx '/var/folders/y5/zmmdgynd3x30h9c84rwt93rr0000gn/T/camlppxcae4ab' '/var/folders/y5/zmmdgynd3x30h9c84rwt93rr0000gn/T/camlppx7c5cfa'", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","id":32,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0360012054443ms
Sending response {"id": 32, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, HeartContainer, Pervasives, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 21, "character": 4}, "end": {"line": 21, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":33,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":29,"character":4},"end":{"line":29,"character":4}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0209808349609ms
Sending response {"id": 33, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":34,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":18,"character":10}}}
[server] Got a method textDocument/hover
[server] processing took 0.0309944152832ms
Sending response {"id": 34, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":35,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":18,"character":14}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.0109672546387ms
Sending response {"id": 35, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":36,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":18,"character":14},"end":{"line":18,"character":14}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0309944152832ms
Sending response {"id": 36, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":37,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":18,"character":14},"end":{"line":18,"character":24}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0228881835938ms
Sending response {"id": 37, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":38,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":18,"character":21}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.0209808349609ms
Sending response {"id": 38, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":39,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":18,"character":14},"end":{"line":18,"character":21}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0100135803223ms
Sending response {"id": 39, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re","version":106},"contentChanges":[{"text":"/* App is the actual entry point for the application. It matches on the route prop to determine which\n   sub-component to render */\nopen BsReactNative;\nopen Twitch;\n\ntype item = {clickedInWave: bool};\n\ntype state = list(item);\n\ntype clicked = bool;\n\ntype action =\n  | Click(clicked)\n  | Reset;\nlet tempCounterStyle = Style.(style([color(String(\"lightblue\"))]));\n\nlet component = ReasonReact.reducerComponent(\"App\");\n\nmodule GetAllMJ = [%graphql {|\n  {\n    messages {\n      id\n      text\n      author {\n        id\n        name\n      }\n    }\n  }\n|}];\n\nlet styles =\n  StyleSheet.create(\n    Style.{\n      \"explodeHeart\":\n        style([left(Pt(0.)), top(Pt(0.)), position(Absolute)]),\n    },\n  );\n\nlet make = _children => {\n  ...component,\n  didMount: _ => onAuthorized(twitchAuth => Js.log(clientIdGet(twitchAuth))),\n\n  initialState: () => [],\n\n  reducer: (action, state) =>\n    switch (action) {\n    | Click(clicked) =>\n      clicked ?\n        ReasonReact.Update([{clickedInWave: true}, ...state]) :\n        ReasonReact.NoUpdate\n    | Reset => ReasonReact.Update([])\n    },\n\n  render: self =>\n    <ReasonApollo.Provider client=Client.instance>\n      <View>\n        <HeartContainer>\n          <Heart filled=true style={styles##explodeHeart} />\n          <Heart filled=true style={styles##explodeHeart} />\n        </HeartContainer>\n        {self.state |> List.length >= 5 ?\n           <Wave onFinish={_event => self.send(Reset)} /> : ReasonReact.null}\n        <TriggerContainer onPress={_event => self.send(Click(true))} />\n        <Text style=tempCounterStyle>\n          {ReasonReact.string(string_of_int(self.state |> List.length))}\n        </Text>\n      </View>\n    </ReasonApollo.Provider>,\n};\n\nlet default = ReasonReact.wrapReasonForJs(~component, _ => make([||]));"}]}}
Read message 
{"jsonrpc":"2.0","id":40,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":18,"character":15},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.00905990600586ms
Opens folkz > 2 BsReactNative ... Twitch
Package opens Pervasives
Package opens Pervasives
FINDING /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/pervasives.cmti src /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/pervasives.mli
resolving open BsReactNative.place holder
Not local
FINDING /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/BsReactNative.cmt src 
resolving open Twitch.place holder
Not local
FINDING /Users/lanceharper/Repositories/jerk-twitch/client/lib/bs/src/components/App/Twitch.cmt src /Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/Twitch.re
Opens nows 3 file:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/pervasives.mli file:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/BsReactNative.cmt file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/Twitch.re
---------------- LOCAL VAL
 - Completing in file:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/pervasives.mli
 - Completing in file:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/BsReactNative.cmt
 - Completing in file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/Twitch.re
Sending response {"id": 40, "jsonrpc": "2.0", "result": []}
Read message 
{"jsonrpc":"2.0","id":41,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0181198120117ms
➡️ running bsc /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/lanceharper/Repositories/jerk-twitch/client/lib/bs/src/components/App' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src/graphql-types' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/components' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/private' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/graphql_ppx/ppx' -ppx ''\''/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/reactjs_jsx_ppx_2.exe'\''' -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/.lsp/App.ast with pwd /Users/lanceharper/Repositories/jerk-twitch/client
Sending response {"id": 41, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, HeartContainer, Pervasives, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 21, "character": 4}, "end": {"line": 21, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":42,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":18,"character":15},"end":{"line":18,"character":15}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0131130218506ms
Sending response {"id": 42, "jsonrpc": "2.0", "result": null}
Running diagnostics for file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re
type error here Read_schema.Schema_file_not_found
[1mFile "[1m", line 1[0m[0m:
[1;31mError[0m: Error while running external preprocessor
Command line: /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/graphql_ppx/ppx '/var/folders/y5/zmmdgynd3x30h9c84rwt93rr0000gn/T/camlppx2da9dc' '/var/folders/y5/zmmdgynd3x30h9c84rwt93rr0000gn/T/camlppx36572d'

Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re", "diagnostics": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "message": "Read_schema.Schema_file_not_found\nFile \"\", line 1:\nError: Error while running external preprocessor\nCommand line: /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/graphql_ppx/ppx '/var/folders/y5/zmmdgynd3x30h9c84rwt93rr0000gn/T/camlppx2da9dc' '/var/folders/y5/zmmdgynd3x30h9c84rwt93rr0000gn/T/camlppx36572d'", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","id":43,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0171661376953ms
Sending response {"id": 43, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, HeartContainer, Pervasives, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 21, "character": 4}, "end": {"line": 21, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":44,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":18,"character":15},"end":{"line":18,"character":15}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0138282775879ms
Sending response {"id": 44, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re","version":109},"contentChanges":[{"text":"/* App is the actual entry point for the application. It matches on the route prop to determine which\n   sub-component to render */\nopen BsReactNative;\nopen Twitch;\n\ntype item = {clickedInWave: bool};\n\ntype state = list(item);\n\ntype clicked = bool;\n\ntype action =\n  | Click(clicked)\n  | Reset;\nlet tempCounterStyle = Style.(style([color(String(\"lightblue\"))]));\n\nlet component = ReasonReact.reducerComponent(\"App\");\n\nmodule GetAllJ = [%graphql {|\n  {\n    messages {\n      id\n      text\n      author {\n        id\n        name\n      }\n    }\n  }\n|}];\n\nlet styles =\n  StyleSheet.create(\n    Style.{\n      \"explodeHeart\":\n        style([left(Pt(0.)), top(Pt(0.)), position(Absolute)]),\n    },\n  );\n\nlet make = _children => {\n  ...component,\n  didMount: _ => onAuthorized(twitchAuth => Js.log(clientIdGet(twitchAuth))),\n\n  initialState: () => [],\n\n  reducer: (action, state) =>\n    switch (action) {\n    | Click(clicked) =>\n      clicked ?\n        ReasonReact.Update([{clickedInWave: true}, ...state]) :\n        ReasonReact.NoUpdate\n    | Reset => ReasonReact.Update([])\n    },\n\n  render: self =>\n    <ReasonApollo.Provider client=Client.instance>\n      <View>\n        <HeartContainer>\n          <Heart filled=true style={styles##explodeHeart} />\n          <Heart filled=true style={styles##explodeHeart} />\n        </HeartContainer>\n        {self.state |> List.length >= 5 ?\n           <Wave onFinish={_event => self.send(Reset)} /> : ReasonReact.null}\n        <TriggerContainer onPress={_event => self.send(Click(true))} />\n        <Text style=tempCounterStyle>\n          {ReasonReact.string(string_of_int(self.state |> List.length))}\n        </Text>\n      </View>\n    </ReasonApollo.Provider>,\n};\n\nlet default = ReasonReact.wrapReasonForJs(~component, _ => make([||]));"}]}}
Read message 
{"jsonrpc":"2.0","id":45,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":18,"character":14},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.00905990600586ms
Opens folkz > 2 BsReactNative ... Twitch
Package opens Pervasives
Package opens Pervasives
FINDING /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/pervasives.cmti src /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/pervasives.mli
resolving open BsReactNative.place holder
Not local
FINDING /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/BsReactNative.cmt src 
resolving open Twitch.place holder
Not local
FINDING /Users/lanceharper/Repositories/jerk-twitch/client/lib/bs/src/components/App/Twitch.cmt src /Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/Twitch.re
Opens nows 3 file:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/pervasives.mli file:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/BsReactNative.cmt file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/Twitch.re
---------------- LOCAL VAL
 - Completing in file:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/pervasives.mli
 - Completing in file:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/BsReactNative.cmt
 - Completing in file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/Twitch.re
Sending response {"id": 45, "jsonrpc": "2.0", "result": []}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re","version":110},"contentChanges":[{"text":"/* App is the actual entry point for the application. It matches on the route prop to determine which\n   sub-component to render */\nopen BsReactNative;\nopen Twitch;\n\ntype item = {clickedInWave: bool};\n\ntype state = list(item);\n\ntype clicked = bool;\n\ntype action =\n  | Click(clicked)\n  | Reset;\nlet tempCounterStyle = Style.(style([color(String(\"lightblue\"))]));\n\nlet component = ReasonReact.reducerComponent(\"App\");\n\nmodule GetAllJe = [%graphql {|\n  {\n    messages {\n      id\n      text\n      author {\n        id\n        name\n      }\n    }\n  }\n|}];\n\nlet styles =\n  StyleSheet.create(\n    Style.{\n      \"explodeHeart\":\n        style([left(Pt(0.)), top(Pt(0.)), position(Absolute)]),\n    },\n  );\n\nlet make = _children => {\n  ...component,\n  didMount: _ => onAuthorized(twitchAuth => Js.log(clientIdGet(twitchAuth))),\n\n  initialState: () => [],\n\n  reducer: (action, state) =>\n    switch (action) {\n    | Click(clicked) =>\n      clicked ?\n        ReasonReact.Update([{clickedInWave: true}, ...state]) :\n        ReasonReact.NoUpdate\n    | Reset => ReasonReact.Update([])\n    },\n\n  render: self =>\n    <ReasonApollo.Provider client=Client.instance>\n      <View>\n        <HeartContainer>\n          <Heart filled=true style={styles##explodeHeart} />\n          <Heart filled=true style={styles##explodeHeart} />\n        </HeartContainer>\n        {self.state |> List.length >= 5 ?\n           <Wave onFinish={_event => self.send(Reset)} /> : ReasonReact.null}\n        <TriggerContainer onPress={_event => self.send(Click(true))} />\n        <Text style=tempCounterStyle>\n          {ReasonReact.string(string_of_int(self.state |> List.length))}\n        </Text>\n      </View>\n    </ReasonApollo.Provider>,\n};\n\nlet default = ReasonReact.wrapReasonForJs(~component, _ => make([||]));"}]}}
Read message 
{"jsonrpc":"2.0","id":46,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":18,"character":15},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.0181198120117ms
Opens folkz > 2 BsReactNative ... Twitch
Package opens Pervasives
Package opens Pervasives
FINDING /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/pervasives.cmti src /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/pervasives.mli
resolving open BsReactNative.place holder
Not local
FINDING /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/BsReactNative.cmt src 
resolving open Twitch.place holder
Not local
FINDING /Users/lanceharper/Repositories/jerk-twitch/client/lib/bs/src/components/App/Twitch.cmt src /Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/Twitch.re
Opens nows 3 file:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/pervasives.mli file:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/BsReactNative.cmt file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/Twitch.re
---------------- LOCAL VAL
 - Completing in file:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/pervasives.mli
 - Completing in file:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/BsReactNative.cmt
 - Completing in file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/Twitch.re
Sending response {"id": 46, "jsonrpc": "2.0", "result": []}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re","version":111},"contentChanges":[{"text":"/* App is the actual entry point for the application. It matches on the route prop to determine which\n   sub-component to render */\nopen BsReactNative;\nopen Twitch;\n\ntype item = {clickedInWave: bool};\n\ntype state = list(item);\n\ntype clicked = bool;\n\ntype action =\n  | Click(clicked)\n  | Reset;\nlet tempCounterStyle = Style.(style([color(String(\"lightblue\"))]));\n\nlet component = ReasonReact.reducerComponent(\"App\");\n\nmodule GetAllJer = [%graphql {|\n  {\n    messages {\n      id\n      text\n      author {\n        id\n        name\n      }\n    }\n  }\n|}];\n\nlet styles =\n  StyleSheet.create(\n    Style.{\n      \"explodeHeart\":\n        style([left(Pt(0.)), top(Pt(0.)), position(Absolute)]),\n    },\n  );\n\nlet make = _children => {\n  ...component,\n  didMount: _ => onAuthorized(twitchAuth => Js.log(clientIdGet(twitchAuth))),\n\n  initialState: () => [],\n\n  reducer: (action, state) =>\n    switch (action) {\n    | Click(clicked) =>\n      clicked ?\n        ReasonReact.Update([{clickedInWave: true}, ...state]) :\n        ReasonReact.NoUpdate\n    | Reset => ReasonReact.Update([])\n    },\n\n  render: self =>\n    <ReasonApollo.Provider client=Client.instance>\n      <View>\n        <HeartContainer>\n          <Heart filled=true style={styles##explodeHeart} />\n          <Heart filled=true style={styles##explodeHeart} />\n        </HeartContainer>\n        {self.state |> List.length >= 5 ?\n           <Wave onFinish={_event => self.send(Reset)} /> : ReasonReact.null}\n        <TriggerContainer onPress={_event => self.send(Click(true))} />\n        <Text style=tempCounterStyle>\n          {ReasonReact.string(string_of_int(self.state |> List.length))}\n        </Text>\n      </View>\n    </ReasonApollo.Provider>,\n};\n\nlet default = ReasonReact.wrapReasonForJs(~component, _ => make([||]));"}]}}
Read message 
{"jsonrpc":"2.0","id":47,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":18,"character":16},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.0109672546387ms
Opens folkz > 2 BsReactNative ... Twitch
Package opens Pervasives
Package opens Pervasives
FINDING /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/pervasives.cmti src /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/pervasives.mli
resolving open BsReactNative.place holder
Not local
FINDING /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/BsReactNative.cmt src 
resolving open Twitch.place holder
Not local
FINDING /Users/lanceharper/Repositories/jerk-twitch/client/lib/bs/src/components/App/Twitch.cmt src /Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/Twitch.re
Opens nows 3 file:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/pervasives.mli file:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/BsReactNative.cmt file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/Twitch.re
---------------- LOCAL VAL
 - Completing in file:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/pervasives.mli
 - Completing in file:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/BsReactNative.cmt
 - Completing in file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/Twitch.re
Sending response {"id": 47, "jsonrpc": "2.0", "result": []}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re","version":112},"contentChanges":[{"text":"/* App is the actual entry point for the application. It matches on the route prop to determine which\n   sub-component to render */\nopen BsReactNative;\nopen Twitch;\n\ntype item = {clickedInWave: bool};\n\ntype state = list(item);\n\ntype clicked = bool;\n\ntype action =\n  | Click(clicked)\n  | Reset;\nlet tempCounterStyle = Style.(style([color(String(\"lightblue\"))]));\n\nlet component = ReasonReact.reducerComponent(\"App\");\n\nmodule GetAllJerk = [%graphql {|\n  {\n    messages {\n      id\n      text\n      author {\n        id\n        name\n      }\n    }\n  }\n|}];\n\nlet styles =\n  StyleSheet.create(\n    Style.{\n      \"explodeHeart\":\n        style([left(Pt(0.)), top(Pt(0.)), position(Absolute)]),\n    },\n  );\n\nlet make = _children => {\n  ...component,\n  didMount: _ => onAuthorized(twitchAuth => Js.log(clientIdGet(twitchAuth))),\n\n  initialState: () => [],\n\n  reducer: (action, state) =>\n    switch (action) {\n    | Click(clicked) =>\n      clicked ?\n        ReasonReact.Update([{clickedInWave: true}, ...state]) :\n        ReasonReact.NoUpdate\n    | Reset => ReasonReact.Update([])\n    },\n\n  render: self =>\n    <ReasonApollo.Provider client=Client.instance>\n      <View>\n        <HeartContainer>\n          <Heart filled=true style={styles##explodeHeart} />\n          <Heart filled=true style={styles##explodeHeart} />\n        </HeartContainer>\n        {self.state |> List.length >= 5 ?\n           <Wave onFinish={_event => self.send(Reset)} /> : ReasonReact.null}\n        <TriggerContainer onPress={_event => self.send(Click(true))} />\n        <Text style=tempCounterStyle>\n          {ReasonReact.string(string_of_int(self.state |> List.length))}\n        </Text>\n      </View>\n    </ReasonApollo.Provider>,\n};\n\nlet default = ReasonReact.wrapReasonForJs(~component, _ => make([||]));"}]}}
Read message 
{"jsonrpc":"2.0","id":48,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":18,"character":17},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.00500679016113ms
Opens folkz > 2 BsReactNative ... Twitch
Package opens Pervasives
Package opens Pervasives
FINDING /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/pervasives.cmti src /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/pervasives.mli
resolving open BsReactNative.place holder
Not local
FINDING /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/BsReactNative.cmt src 
resolving open Twitch.place holder
Not local
FINDING /Users/lanceharper/Repositories/jerk-twitch/client/lib/bs/src/components/App/Twitch.cmt src /Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/Twitch.re
Opens nows 3 file:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/pervasives.mli file:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/BsReactNative.cmt file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/Twitch.re
---------------- LOCAL VAL
 - Completing in file:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/pervasives.mli
 - Completing in file:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/BsReactNative.cmt
 - Completing in file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/Twitch.re
Sending response {"id": 48, "jsonrpc": "2.0", "result": []}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re","version":113},"contentChanges":[{"text":"/* App is the actual entry point for the application. It matches on the route prop to determine which\n   sub-component to render */\nopen BsReactNative;\nopen Twitch;\n\ntype item = {clickedInWave: bool};\n\ntype state = list(item);\n\ntype clicked = bool;\n\ntype action =\n  | Click(clicked)\n  | Reset;\nlet tempCounterStyle = Style.(style([color(String(\"lightblue\"))]));\n\nlet component = ReasonReact.reducerComponent(\"App\");\n\nmodule GetAllJerks = [%graphql {|\n  {\n    messages {\n      id\n      text\n      author {\n        id\n        name\n      }\n    }\n  }\n|}];\n\nlet styles =\n  StyleSheet.create(\n    Style.{\n      \"explodeHeart\":\n        style([left(Pt(0.)), top(Pt(0.)), position(Absolute)]),\n    },\n  );\n\nlet make = _children => {\n  ...component,\n  didMount: _ => onAuthorized(twitchAuth => Js.log(clientIdGet(twitchAuth))),\n\n  initialState: () => [],\n\n  reducer: (action, state) =>\n    switch (action) {\n    | Click(clicked) =>\n      clicked ?\n        ReasonReact.Update([{clickedInWave: true}, ...state]) :\n        ReasonReact.NoUpdate\n    | Reset => ReasonReact.Update([])\n    },\n\n  render: self =>\n    <ReasonApollo.Provider client=Client.instance>\n      <View>\n        <HeartContainer>\n          <Heart filled=true style={styles##explodeHeart} />\n          <Heart filled=true style={styles##explodeHeart} />\n        </HeartContainer>\n        {self.state |> List.length >= 5 ?\n           <Wave onFinish={_event => self.send(Reset)} /> : ReasonReact.null}\n        <TriggerContainer onPress={_event => self.send(Click(true))} />\n        <Text style=tempCounterStyle>\n          {ReasonReact.string(string_of_int(self.state |> List.length))}\n        </Text>\n      </View>\n    </ReasonApollo.Provider>,\n};\n\nlet default = ReasonReact.wrapReasonForJs(~component, _ => make([||]));"}]}}
Read message 
{"jsonrpc":"2.0","id":49,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":18,"character":18},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.00596046447754ms
Opens folkz > 2 BsReactNative ... Twitch
Package opens Pervasives
Package opens Pervasives
FINDING /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/pervasives.cmti src /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/pervasives.mli
resolving open BsReactNative.place holder
Not local
FINDING /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/BsReactNative.cmt src 
resolving open Twitch.place holder
Not local
FINDING /Users/lanceharper/Repositories/jerk-twitch/client/lib/bs/src/components/App/Twitch.cmt src /Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/Twitch.re
Opens nows 3 file:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/pervasives.mli file:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/BsReactNative.cmt file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/Twitch.re
---------------- LOCAL VAL
 - Completing in file:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/pervasives.mli
 - Completing in file:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/BsReactNative.cmt
 - Completing in file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/Twitch.re
Sending response {"id": 49, "jsonrpc": "2.0", "result": []}
Read message 
{"jsonrpc":"2.0","id":50,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0171661376953ms
➡️ running bsc /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/lanceharper/Repositories/jerk-twitch/client/lib/bs/src/components/App' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src/graphql-types' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/components' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/private' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/graphql_ppx/ppx' -ppx ''\''/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/reactjs_jsx_ppx_2.exe'\''' -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/.lsp/App.ast with pwd /Users/lanceharper/Repositories/jerk-twitch/client
Sending response {"id": 50, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, HeartContainer, Pervasives, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 21, "character": 4}, "end": {"line": 21, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":51,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":18,"character":18},"end":{"line":18,"character":18}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00500679016113ms
Sending response {"id": 51, "jsonrpc": "2.0", "result": null}
Running diagnostics for file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re
type error here Read_schema.Schema_file_not_found
[1mFile "[1m", line 1[0m[0m:
[1;31mError[0m: Error while running external preprocessor
Command line: /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/graphql_ppx/ppx '/var/folders/y5/zmmdgynd3x30h9c84rwt93rr0000gn/T/camlppx3ddb0b' '/var/folders/y5/zmmdgynd3x30h9c84rwt93rr0000gn/T/camlppxdebbb0'

Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re", "diagnostics": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "message": "Read_schema.Schema_file_not_found\nFile \"\", line 1:\nError: Error while running external preprocessor\nCommand line: /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/graphql_ppx/ppx '/var/folders/y5/zmmdgynd3x30h9c84rwt93rr0000gn/T/camlppx3ddb0b' '/var/folders/y5/zmmdgynd3x30h9c84rwt93rr0000gn/T/camlppxdebbb0'", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","id":52,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.00691413879395ms
Sending response {"id": 52, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, HeartContainer, Pervasives, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 21, "character": 4}, "end": {"line": 21, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":53,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":20,"character":7}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00596046447754ms
Got a loc for pos
Sending response {"id": 53, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 20, "character": 2}, "end": {"line": 20, "character": 12}}, "kind": 2}]}
Read message 
{"jsonrpc":"2.0","id":54,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":20,"character":4},"end":{"line":20,"character":12}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0121593475342ms
Sending response {"id": 54, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":55,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":20,"character":7}}}
[server] Got a method textDocument/hover
[server] processing took 0.0119209289551ms
FINDING /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/BsReactNative.cmt src 
FINDING /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/styleSheet-BsReactNative.cmti src /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/styleSheet.rei
Sending response {"id": 55, "jsonrpc": "2.0", "result": {"range": {"start": {"line": 20, "character": 2}, "end": {"line": 20, "character": 12}}, "contents": {"kind": "markdown", "value": "```\nmodule StyleSheet-BsReactNative = {\n  type t\n  let t: t;\n  let create: Js.t('a) => Js.t('a);\n  let hairlineWidth: float;\n  let absoluteFill: BsReactNative.Style.t;\n  let absoluteFillObject: BsReactNative.Style.t;\n  let flatten: list(\n  BsReactNative.Style.t\n) => BsReactNative.Style.t;\n  let processColor: [ `Number of int | `String of string ] => string;\n}\n```"}}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re","version":113},"contentChanges":[{"text":"/* App is the actual entry point for the application. It matches on the route prop to determine which\n   sub-component to render */\nopen BsReactNative;\nopen Twitch;\n\ntype item = {clickedInWave: bool};\n\ntype state = list(item);\n\ntype clicked = bool;\n\ntype action =\n  | Click(clicked)\n  | Reset;\nlet tempCounterStyle = Style.(style([color(String(\"lightblue\"))]));\n\nlet component = ReasonReact.reducerComponent(\"App\");\n\nmodule GetAllJerks = [%graphql {|\n  {\n    messages {\n      id\n      text\n      author {\n        id\n        name\n      }\n    }\n  }\n|}];\n\nlet styles =\n  StyleSheet.create(\n    Style.{\n      \"explodeHeart\":\n        style([left(Pt(0.)), top(Pt(0.)), position(Absolute)]),\n    },\n  );\n\nlet make = _children => {\n  ...component,\n  didMount: _ => onAuthorized(twitchAuth => Js.log(clientIdGet(twitchAuth))),\n\n  initialState: () => [],\n\n  reducer: (action, state) =>\n    switch (action) {\n    | Click(clicked) =>\n      clicked ?\n        ReasonReact.Update([{clickedInWave: true}, ...state]) :\n        ReasonReact.NoUpdate\n    | Reset => ReasonReact.Update([])\n    },\n\n  render: self =>\n    <ReasonApollo.Provider client=Client.instance>\n      <View>\n        <HeartContainer>\n          <Heart filled=true style={styles##explodeHeart} />\n          <Heart filled=true style={styles##explodeHeart} />\n        </HeartContainer>\n        {self.state |> List.length >= 5 ?\n           <Wave onFinish={_event => self.send(Reset)} /> : ReasonReact.null}\n        <TriggerContainer onPress={_event => self.send(Click(true))} />\n        <Text style=tempCounterStyle>\n          {ReasonReact.string(string_of_int(self.state |> List.length))}\n        </Text>\n      </View>\n    </ReasonApollo.Provider>,\n};\n\nlet default = ReasonReact.wrapReasonForJs(~component, _ => make([||]));"}]}}
Read message 
{"jsonrpc":"2.0","id":56,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"message":"Read_schema.Schema_file_not_found\nFile \"\", line 1:\nError: Error while running external preprocessor\nCommand line: /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/graphql_ppx/ppx '/var/folders/y5/zmmdgynd3x30h9c84rwt93rr0000gn/T/camlppx3ddb0b' '/var/folders/y5/zmmdgynd3x30h9c84rwt93rr0000gn/T/camlppxdebbb0'","severity":1}]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0169277191162ms
➡️ running bsc /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/lanceharper/Repositories/jerk-twitch/client/lib/bs/src/components/App' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src/graphql-types' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/components' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/private' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/graphql_ppx/ppx' -ppx ''\''/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/reactjs_jsx_ppx_2.exe'\''' -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/.lsp/App.ast with pwd /Users/lanceharper/Repositories/jerk-twitch/client
Sending response {"id": 56, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":57,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":20,"character":12}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00500679016113ms
Got a loc for pos
Sending response {"id": 57, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 20, "character": 2}, "end": {"line": 20, "character": 12}}, "kind": 2}]}
Read message 
{"jsonrpc":"2.0","id":58,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.00715255737305ms
Sending response {"id": 58, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, HeartContainer, Pervasives, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 21, "character": 4}, "end": {"line": 21, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":59,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":20,"character":4},"end":{"line":20,"character":12}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00715255737305ms
Sending response {"id": 59, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":60,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0109672546387ms
Sending response {"id": 60, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, HeartContainer, Pervasives, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 21, "character": 4}, "end": {"line": 21, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}]}
Running diagnostics for file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re
type error here Read_schema.Schema_file_not_found
[1mFile "[1m", line 1[0m[0m:
[1;31mError[0m: Error while running external preprocessor
Command line: /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/graphql_ppx/ppx '/var/folders/y5/zmmdgynd3x30h9c84rwt93rr0000gn/T/camlppxd953bb' '/var/folders/y5/zmmdgynd3x30h9c84rwt93rr0000gn/T/camlppx0726a4'

Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re", "diagnostics": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "message": "Read_schema.Schema_file_not_found\nFile \"\", line 1:\nError: Error while running external preprocessor\nCommand line: /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/graphql_ppx/ppx '/var/folders/y5/zmmdgynd3x30h9c84rwt93rr0000gn/T/camlppxd953bb' '/var/folders/y5/zmmdgynd3x30h9c84rwt93rr0000gn/T/camlppx0726a4'", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","id":61,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":20,"character":7}}}
[server] Got a method textDocument/hover
[server] processing took 0.0119209289551ms
FINDING /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/BsReactNative.cmt src 
FINDING /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/styleSheet-BsReactNative.cmti src /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/styleSheet.rei
Sending response {"id": 61, "jsonrpc": "2.0", "result": {"range": {"start": {"line": 20, "character": 2}, "end": {"line": 20, "character": 12}}, "contents": {"kind": "markdown", "value": "```\nmodule StyleSheet-BsReactNative = {\n  type t\n  let t: t;\n  let create: Js.t('a) => Js.t('a);\n  let hairlineWidth: float;\n  let absoluteFill: BsReactNative.Style.t;\n  let absoluteFillObject: BsReactNative.Style.t;\n  let flatten: list(\n  BsReactNative.Style.t\n) => BsReactNative.Style.t;\n  let processColor: [ `Number of int | `String of string ] => string;\n}\n```"}}}
Read message 
{"jsonrpc":"2.0","id":62,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":20,"character":4},"end":{"line":20,"character":12}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0100135803223ms
Sending response {"id": 62, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":63,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":23,"character":10}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.0190734863281ms
Got a loc for pos
Sending response {"id": 63, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 23, "character": 8}, "end": {"line": 23, "character": 13}}, "kind": 2}, {"range": {"start": {"line": 14, "character": 30}, "end": {"line": 14, "character": 35}}, "kind": 2}]}
Read message 
{"jsonrpc":"2.0","id":64,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":23,"character":10},"end":{"line":23,"character":10}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0100135803223ms
Sending response {"id": 64, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":65,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":23,"character":10}}}
[server] Got a method textDocument/hover
[server] processing took 0.0181198120117ms
Getting global BsReactNative
FINDING /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/BsReactNative.cmt src 
FINDING /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/style-BsReactNative.cmti src /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/style.rei
Getting for 1032 in style
Trying for declared Value 1032 in file file:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/style.rei
Yes!! got it
Sending response {"id": 65, "jsonrpc": "2.0", "result": {"range": {"start": {"line": 23, "character": 8}, "end": {"line": 23, "character": 13}}, "contents": {"kind": "markdown", "value": "```\nlist(\n  BsReactNative.Style.styleElement\n) => BsReactNative.Style.t\n```\n\n<root>/client/node_modules/bs-react-native/src/style.rei"}}}
Read message 
{"jsonrpc":"2.0","id":66,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":20,"character":8}}}
[server] Got a method textDocument/hover
[server] processing took 0.0119209289551ms
FINDING /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/BsReactNative.cmt src 
FINDING /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/styleSheet-BsReactNative.cmti src /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/styleSheet.rei
Sending response {"id": 66, "jsonrpc": "2.0", "result": {"range": {"start": {"line": 20, "character": 2}, "end": {"line": 20, "character": 12}}, "contents": {"kind": "markdown", "value": "```\nmodule StyleSheet-BsReactNative = {\n  type t\n  let t: t;\n  let create: Js.t('a) => Js.t('a);\n  let hairlineWidth: float;\n  let absoluteFill: BsReactNative.Style.t;\n  let absoluteFillObject: BsReactNative.Style.t;\n  let flatten: list(\n  BsReactNative.Style.t\n) => BsReactNative.Style.t;\n  let processColor: [ `Number of int | `String of string ] => string;\n}\n```"}}}
Read message 
{"jsonrpc":"2.0","id":67,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":20,"character":8}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00786781311035ms
Got a loc for pos
Sending response {"id": 67, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 20, "character": 2}, "end": {"line": 20, "character": 12}}, "kind": 2}]}
Read message 
{"jsonrpc":"2.0","id":68,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":20,"character":4},"end":{"line":20,"character":12}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0121593475342ms
Sending response {"id": 68, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re","version":114},"contentChanges":[{"text":"/* App is the actual entry point for the application. It matches on the route prop to determine which\n   sub-component to render */\nopen BsReactNative;\nopen Twitch;\n\ntype item = {clickedInWave: bool};\n\ntype state = list(item);\n\ntype clicked = bool;\n\ntype action =\n  | Click(clicked)\n  | Reset;\nlet tempCounterStyle = Style.(style([color(String(\"lightblue\"))]));\n\nlet component = ReasonReact.reducerComponent(\"App\");\n\nmodule GetAllJerks = [%graphql {|\n  {\n    getJerks {\n      id\n      text\n      author {\n        id\n        name\n      }\n    }\n  }\n|}];\n\nlet styles =\n  StyleSheet.create(\n    Style.{\n      \"explodeHeart\":\n        style([left(Pt(0.)), top(Pt(0.)), position(Absolute)]),\n    },\n  );\n\nlet make = _children => {\n  ...component,\n  didMount: _ => onAuthorized(twitchAuth => Js.log(clientIdGet(twitchAuth))),\n\n  initialState: () => [],\n\n  reducer: (action, state) =>\n    switch (action) {\n    | Click(clicked) =>\n      clicked ?\n        ReasonReact.Update([{clickedInWave: true}, ...state]) :\n        ReasonReact.NoUpdate\n    | Reset => ReasonReact.Update([])\n    },\n\n  render: self =>\n    <ReasonApollo.Provider client=Client.instance>\n      <View>\n        <HeartContainer>\n          <Heart filled=true style={styles##explodeHeart} />\n          <Heart filled=true style={styles##explodeHeart} />\n        </HeartContainer>\n        {self.state |> List.length >= 5 ?\n           <Wave onFinish={_event => self.send(Reset)} /> : ReasonReact.null}\n        <TriggerContainer onPress={_event => self.send(Click(true))} />\n        <Text style=tempCounterStyle>\n          {ReasonReact.string(string_of_int(self.state |> List.length))}\n        </Text>\n      </View>\n    </ReasonApollo.Provider>,\n};\n\nlet default = ReasonReact.wrapReasonForJs(~component, _ => make([||]));"}]}}
Read message 
{"jsonrpc":"2.0","id":69,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0309944152832ms
➡️ running bsc /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/lanceharper/Repositories/jerk-twitch/client/lib/bs/src/components/App' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src/graphql-types' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/components' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/private' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/graphql_ppx/ppx' -ppx ''\''/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/reactjs_jsx_ppx_2.exe'\''' -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/.lsp/App.ast with pwd /Users/lanceharper/Repositories/jerk-twitch/client
Sending response {"id": 69, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, HeartContainer, Pervasives, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 21, "character": 4}, "end": {"line": 21, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":70,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.00500679016113ms
Sending response {"id": 70, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, HeartContainer, Pervasives, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 21, "character": 4}, "end": {"line": 21, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}]}
Running diagnostics for file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re
type error here Read_schema.Schema_file_not_found
[1mFile "[1m", line 1[0m[0m:
[1;31mError[0m: Error while running external preprocessor
Command line: /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/graphql_ppx/ppx '/var/folders/y5/zmmdgynd3x30h9c84rwt93rr0000gn/T/camlppxed52f6' '/var/folders/y5/zmmdgynd3x30h9c84rwt93rr0000gn/T/camlppx5185d3'

Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re", "diagnostics": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "message": "Read_schema.Schema_file_not_found\nFile \"\", line 1:\nError: Error while running external preprocessor\nCommand line: /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/graphql_ppx/ppx '/var/folders/y5/zmmdgynd3x30h9c84rwt93rr0000gn/T/camlppxed52f6' '/var/folders/y5/zmmdgynd3x30h9c84rwt93rr0000gn/T/camlppx5185d3'", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","id":71,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":20,"character":12},"end":{"line":20,"character":12}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0209808349609ms
Sending response {"id": 71, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":72,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":20,"character":12},"end":{"line":20,"character":12}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0371932983398ms
Sending response {"id": 72, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":71}}
Read message 
{"jsonrpc":"2.0","id":73,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":21,"character":6}}}
[server] Got a method textDocument/hover
[server] processing took 0.0109672546387ms
Sending response {"id": 73, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":74,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":21,"character":6}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00715255737305ms
Sending response {"id": 74, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":75,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":21,"character":6},"end":{"line":26,"character":7}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00786781311035ms
Sending response {"id": 75, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re","version":114},"contentChanges":[{"text":"/* App is the actual entry point for the application. It matches on the route prop to determine which\n   sub-component to render */\nopen BsReactNative;\nopen Twitch;\n\ntype item = {clickedInWave: bool};\n\ntype state = list(item);\n\ntype clicked = bool;\n\ntype action =\n  | Click(clicked)\n  | Reset;\nlet tempCounterStyle = Style.(style([color(String(\"lightblue\"))]));\n\nlet component = ReasonReact.reducerComponent(\"App\");\n\nmodule GetAllJerks = [%graphql {|\n  {\n    getJerks {\n      id\n      text\n      author {\n        id\n        name\n      }\n    }\n  }\n|}];\n\nlet styles =\n  StyleSheet.create(\n    Style.{\n      \"explodeHeart\":\n        style([left(Pt(0.)), top(Pt(0.)), position(Absolute)]),\n    },\n  );\n\nlet make = _children => {\n  ...component,\n  didMount: _ => onAuthorized(twitchAuth => Js.log(clientIdGet(twitchAuth))),\n\n  initialState: () => [],\n\n  reducer: (action, state) =>\n    switch (action) {\n    | Click(clicked) =>\n      clicked ?\n        ReasonReact.Update([{clickedInWave: true}, ...state]) :\n        ReasonReact.NoUpdate\n    | Reset => ReasonReact.Update([])\n    },\n\n  render: self =>\n    <ReasonApollo.Provider client=Client.instance>\n      <View>\n        <HeartContainer>\n          <Heart filled=true style={styles##explodeHeart} />\n          <Heart filled=true style={styles##explodeHeart} />\n        </HeartContainer>\n        {self.state |> List.length >= 5 ?\n           <Wave onFinish={_event => self.send(Reset)} /> : ReasonReact.null}\n        <TriggerContainer onPress={_event => self.send(Click(true))} />\n        <Text style=tempCounterStyle>\n          {ReasonReact.string(string_of_int(self.state |> List.length))}\n        </Text>\n      </View>\n    </ReasonApollo.Provider>,\n};\n\nlet default = ReasonReact.wrapReasonForJs(~component, _ => make([||]));"}]}}
Read message 
{"jsonrpc":"2.0","id":76,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"message":"Read_schema.Schema_file_not_found\nFile \"\", line 1:\nError: Error while running external preprocessor\nCommand line: /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/graphql_ppx/ppx '/var/folders/y5/zmmdgynd3x30h9c84rwt93rr0000gn/T/camlppxed52f6' '/var/folders/y5/zmmdgynd3x30h9c84rwt93rr0000gn/T/camlppx5185d3'","severity":1}]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00691413879395ms
➡️ running bsc /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/lanceharper/Repositories/jerk-twitch/client/lib/bs/src/components/App' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src/graphql-types' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/components' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/private' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/graphql_ppx/ppx' -ppx ''\''/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/reactjs_jsx_ppx_2.exe'\''' -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/.lsp/App.ast with pwd /Users/lanceharper/Repositories/jerk-twitch/client
Sending response {"id": 76, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":77,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.00691413879395ms
Sending response {"id": 77, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, HeartContainer, Pervasives, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 21, "character": 4}, "end": {"line": 21, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":78,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":21,"character":6},"end":{"line":26,"character":7}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0119209289551ms
Sending response {"id": 78, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":79,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.00715255737305ms
Sending response {"id": 79, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, HeartContainer, Pervasives, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 21, "character": 4}, "end": {"line": 21, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":80,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":23,"character":13}}}
[server] Got a method textDocument/hover
[server] processing took 0.0190734863281ms
Getting global BsReactNative
FINDING /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/BsReactNative.cmt src 
FINDING /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/style-BsReactNative.cmti src /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/style.rei
Getting for 1032 in style
Trying for declared Value 1032 in file file:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/style.rei
Yes!! got it
Sending response {"id": 80, "jsonrpc": "2.0", "result": {"range": {"start": {"line": 23, "character": 8}, "end": {"line": 23, "character": 13}}, "contents": {"kind": "markdown", "value": "```\nlist(\n  BsReactNative.Style.styleElement\n) => BsReactNative.Style.t\n```\n\n<root>/client/node_modules/bs-react-native/src/style.rei"}}}
Running diagnostics for file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re
type error here Read_schema.Schema_file_not_found
[1mFile "[1m", line 1[0m[0m:
[1;31mError[0m: Error while running external preprocessor
Command line: /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/graphql_ppx/ppx '/var/folders/y5/zmmdgynd3x30h9c84rwt93rr0000gn/T/camlppx41572d' '/var/folders/y5/zmmdgynd3x30h9c84rwt93rr0000gn/T/camlppxd57627'

Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re", "diagnostics": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "message": "Read_schema.Schema_file_not_found\nFile \"\", line 1:\nError: Error while running external preprocessor\nCommand line: /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/graphql_ppx/ppx '/var/folders/y5/zmmdgynd3x30h9c84rwt93rr0000gn/T/camlppx41572d' '/var/folders/y5/zmmdgynd3x30h9c84rwt93rr0000gn/T/camlppxd57627'", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","id":81,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":21,"character":6},"end":{"line":26,"character":7}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0150203704834ms
Sending response {"id": 81, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":82,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":20,"character":11}}}
[server] Got a method textDocument/hover
[server] processing took 0.032901763916ms
FINDING /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/BsReactNative.cmt src 
FINDING /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/styleSheet-BsReactNative.cmti src /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/styleSheet.rei
Sending response {"id": 82, "jsonrpc": "2.0", "result": {"range": {"start": {"line": 20, "character": 2}, "end": {"line": 20, "character": 12}}, "contents": {"kind": "markdown", "value": "```\nmodule StyleSheet-BsReactNative = {\n  type t\n  let t: t;\n  let create: Js.t('a) => Js.t('a);\n  let hairlineWidth: float;\n  let absoluteFill: BsReactNative.Style.t;\n  let absoluteFillObject: BsReactNative.Style.t;\n  let flatten: list(\n  BsReactNative.Style.t\n) => BsReactNative.Style.t;\n  let processColor: [ `Number of int | `String of string ] => string;\n}\n```"}}}
Read message 
{"jsonrpc":"2.0","id":83,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":20,"character":12}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.014066696167ms
Got a loc for pos
Sending response {"id": 83, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 20, "character": 2}, "end": {"line": 20, "character": 12}}, "kind": 2}]}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":82}}
Read message 
{"jsonrpc":"2.0","id":84,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":20,"character":12},"end":{"line":27,"character":5}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0169277191162ms
Sending response {"id": 84, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":85,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":27,"character":5}}}
[server] Got a method textDocument/hover
[server] processing took 0.0169277191162ms
Trying for declared Value 1024 in file file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re
Sending response {"id": 85, "jsonrpc": "2.0", "result": {"range": {"start": {"line": 27, "character": 4}, "end": {"line": 27, "character": 8}}, "contents": {"kind": "markdown", "value": "```\n'b => ReasonReact.componentSpec(\n  list(item),\n  list('a),\n  ReasonReact.noRetainedProps,\n  ReasonReact.noRetainedProps,\n  action\n)\n```\n\n<root>/client/src/components/App/App.re"}}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re","version":116},"contentChanges":[{"text":"/* App is the actual entry point for the application. It matches on the route prop to determine which\n   sub-component to render */\nopen BsReactNative;\nopen Twitch;\n\ntype item = {clickedInWave: bool};\n\ntype state = list(item);\n\ntype clicked = bool;\n\ntype action =\n  | Click(clicked)\n  | Reset;\nlet tempCounterStyle = Style.(style([color(String(\"lightblue\"))]));\n\nlet component = ReasonReact.reducerComponent(\"App\");\n\nmodule GetAllJerks = [%graphql {|\n  {\n    getJerks\n  }\n|}];\n\nlet styles =\n  StyleSheet.create(\n    Style.{\n      \"explodeHeart\":\n        style([left(Pt(0.)), top(Pt(0.)), position(Absolute)]),\n    },\n  );\n\nlet make = _children => {\n  ...component,\n  didMount: _ => onAuthorized(twitchAuth => Js.log(clientIdGet(twitchAuth))),\n\n  initialState: () => [],\n\n  reducer: (action, state) =>\n    switch (action) {\n    | Click(clicked) =>\n      clicked ?\n        ReasonReact.Update([{clickedInWave: true}, ...state]) :\n        ReasonReact.NoUpdate\n    | Reset => ReasonReact.Update([])\n    },\n\n  render: self =>\n    <ReasonApollo.Provider client=Client.instance>\n      <View>\n        <HeartContainer>\n          <Heart filled=true style={styles##explodeHeart} />\n          <Heart filled=true style={styles##explodeHeart} />\n        </HeartContainer>\n        {self.state |> List.length >= 5 ?\n           <Wave onFinish={_event => self.send(Reset)} /> : ReasonReact.null}\n        <TriggerContainer onPress={_event => self.send(Click(true))} />\n        <Text style=tempCounterStyle>\n          {ReasonReact.string(string_of_int(self.state |> List.length))}\n        </Text>\n      </View>\n    </ReasonApollo.Provider>,\n};\n\nlet default = ReasonReact.wrapReasonForJs(~component, _ => make([||]));"}]}}
Read message 
{"jsonrpc":"2.0","id":86,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0190734863281ms
➡️ running bsc /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/lanceharper/Repositories/jerk-twitch/client/lib/bs/src/components/App' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src/graphql-types' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/components' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/private' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/graphql_ppx/ppx' -ppx ''\''/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/reactjs_jsx_ppx_2.exe'\''' -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/.lsp/App.ast with pwd /Users/lanceharper/Repositories/jerk-twitch/client
Sending response {"id": 86, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, HeartContainer, Pervasives, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 21, "character": 4}, "end": {"line": 21, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":87,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":20,"character":12},"end":{"line":20,"character":12}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00810623168945ms
Sending response {"id": 87, "jsonrpc": "2.0", "result": null}
Running diagnostics for file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re
type error here Read_schema.Schema_file_not_found
[1mFile "[1m", line 1[0m[0m:
[1;31mError[0m: Error while running external preprocessor
Command line: /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/graphql_ppx/ppx '/var/folders/y5/zmmdgynd3x30h9c84rwt93rr0000gn/T/camlppx18bbc1' '/var/folders/y5/zmmdgynd3x30h9c84rwt93rr0000gn/T/camlppxf7675e'

Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re", "diagnostics": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "message": "Read_schema.Schema_file_not_found\nFile \"\", line 1:\nError: Error while running external preprocessor\nCommand line: /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/graphql_ppx/ppx '/var/folders/y5/zmmdgynd3x30h9c84rwt93rr0000gn/T/camlppx18bbc1' '/var/folders/y5/zmmdgynd3x30h9c84rwt93rr0000gn/T/camlppxf7675e'", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","id":88,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0309944152832ms
Sending response {"id": 88, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, HeartContainer, Pervasives, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 21, "character": 4}, "end": {"line": 21, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":89,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":20,"character":12},"end":{"line":20,"character":12}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0150203704834ms
Sending response {"id": 89, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":90,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":27,"character":5}}}
[server] Got a method textDocument/hover
[server] processing took 0.0200271606445ms
Trying for declared Value 1024 in file file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re
Sending response {"id": 90, "jsonrpc": "2.0", "result": {"range": {"start": {"line": 27, "character": 4}, "end": {"line": 27, "character": 8}}, "contents": {"kind": "markdown", "value": "```\n'b => ReasonReact.componentSpec(\n  list(item),\n  list('a),\n  ReasonReact.noRetainedProps,\n  ReasonReact.noRetainedProps,\n  action\n)\n```\n\n<root>/client/src/components/App/App.re"}}}
Read message 
{"jsonrpc":"2.0","id":91,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":28,"character":8}}}
[server] Got a method textDocument/definition
[server] processing took 0.0119209289551ms
Got a loc for pos
Local defn Value
Inner uri file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re
Sending response {"id": 91, "jsonrpc": "2.0", "result": {"uri": "file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re", "range": {"start": {"line": 16, "character": 4}, "end": {"line": 16, "character": 13}}}}
Read message 
{"jsonrpc":"2.0","id":92,"method":"textDocument/formatting","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"options":{"tabSize":2,"insertSpaces":true}}}
[server] Got a method textDocument/formatting
[server] processing took 0.018835067749ms
Sending response {"id": 92, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":93,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":27,"character":14}}}
[server] Got a method textDocument/definition
[server] processing took 0.0109672546387ms
Got a loc for pos
Trying to find a defintion for a definition
Declared
Sending response {"id": 93, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re","version":116},"contentChanges":[{"text":"/* App is the actual entry point for the application. It matches on the route prop to determine which\n   sub-component to render */\nopen BsReactNative;\nopen Twitch;\n\ntype item = {clickedInWave: bool};\n\ntype state = list(item);\n\ntype clicked = bool;\n\ntype action =\n  | Click(clicked)\n  | Reset;\nlet tempCounterStyle = Style.(style([color(String(\"lightblue\"))]));\n\nlet component = ReasonReact.reducerComponent(\"App\");\n\nmodule GetAllJerks = [%graphql {|\n  {\n    getJerks\n  }\n|}];\n\nlet styles =\n  StyleSheet.create(\n    Style.{\n      \"explodeHeart\":\n        style([left(Pt(0.)), top(Pt(0.)), position(Absolute)]),\n    },\n  );\n\nlet make = _children => {\n  ...component,\n  didMount: _ => onAuthorized(twitchAuth => Js.log(clientIdGet(twitchAuth))),\n\n  initialState: () => [],\n\n  reducer: (action, state) =>\n    switch (action) {\n    | Click(clicked) =>\n      clicked ?\n        ReasonReact.Update([{clickedInWave: true}, ...state]) :\n        ReasonReact.NoUpdate\n    | Reset => ReasonReact.Update([])\n    },\n\n  render: self =>\n    <ReasonApollo.Provider client=Client.instance>\n      <View>\n        <HeartContainer>\n          <Heart filled=true style={styles##explodeHeart} />\n          <Heart filled=true style={styles##explodeHeart} />\n        </HeartContainer>\n        {self.state |> List.length >= 5 ?\n           <Wave onFinish={_event => self.send(Reset)} /> : ReasonReact.null}\n        <TriggerContainer onPress={_event => self.send(Click(true))} />\n        <Text style=tempCounterStyle>\n          {ReasonReact.string(string_of_int(self.state |> List.length))}\n        </Text>\n      </View>\n    </ReasonApollo.Provider>,\n};\n\nlet default = ReasonReact.wrapReasonForJs(~component, _ => make([||]));"}]}}
Read message 
{"jsonrpc":"2.0","id":94,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":27,"character":13}}}
[server] Got a method textDocument/hover
[server] processing took 0.00715255737305ms
➡️ running bsc /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/lanceharper/Repositories/jerk-twitch/client/lib/bs/src/components/App' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src/graphql-types' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/components' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/private' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/graphql_ppx/ppx' -ppx ''\''/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/reactjs_jsx_ppx_2.exe'\''' -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/.lsp/App.ast with pwd /Users/lanceharper/Repositories/jerk-twitch/client
Trying for declared Value 1025 in file file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re
Sending response {"id": 94, "jsonrpc": "2.0", "result": {"range": {"start": {"line": 27, "character": 11}, "end": {"line": 27, "character": 20}}, "contents": {"kind": "markdown", "value": "```\n'a\n```\n\n<root>/client/src/components/App/App.re"}}}
Running diagnostics for file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re
type error here Read_schema.Schema_file_not_found
[1mFile "[1m", line 1[0m[0m:
[1;31mError[0m: Error while running external preprocessor
Command line: /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/graphql_ppx/ppx '/var/folders/y5/zmmdgynd3x30h9c84rwt93rr0000gn/T/camlppxbfcac4' '/var/folders/y5/zmmdgynd3x30h9c84rwt93rr0000gn/T/camlppxf446a1'

Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re", "diagnostics": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "message": "Read_schema.Schema_file_not_found\nFile \"\", line 1:\nError: Error while running external preprocessor\nCommand line: /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/graphql_ppx/ppx '/var/folders/y5/zmmdgynd3x30h9c84rwt93rr0000gn/T/camlppxbfcac4' '/var/folders/y5/zmmdgynd3x30h9c84rwt93rr0000gn/T/camlppxf446a1'", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","id":95,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":25,"character":15}}}
[server] Got a method textDocument/definition
[server] processing took 0.00905990600586ms
Sending response {"id": 95, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":96,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":20,"character":12},"end":{"line":20,"character":12}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0109672546387ms
Sending response {"id": 96, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":97,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":24,"character":12},"end":{"line":24,"character":12}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0131130218506ms
Sending response {"id": 97, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":98,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":20,"character":10}}}
[server] Got a method textDocument/hover
[server] processing took 0.00905990600586ms
FINDING /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/BsReactNative.cmt src 
FINDING /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/styleSheet-BsReactNative.cmti src /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/styleSheet.rei
Sending response {"id": 98, "jsonrpc": "2.0", "result": {"range": {"start": {"line": 20, "character": 2}, "end": {"line": 20, "character": 12}}, "contents": {"kind": "markdown", "value": "```\nmodule StyleSheet-BsReactNative = {\n  type t\n  let t: t;\n  let create: Js.t('a) => Js.t('a);\n  let hairlineWidth: float;\n  let absoluteFill: BsReactNative.Style.t;\n  let absoluteFillObject: BsReactNative.Style.t;\n  let flatten: list(\n  BsReactNative.Style.t\n) => BsReactNative.Style.t;\n  let processColor: [ `Number of int | `String of string ] => string;\n}\n```"}}}
Read message 
{"jsonrpc":"2.0","id":99,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":17,"character":0},"end":{"line":22,"character":4}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0450611114502ms
Sending response {"id": 99, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re","version":117},"contentChanges":[{"text":"/* App is the actual entry point for the application. It matches on the route prop to determine which\n   sub-component to render */\nopen BsReactNative;\nopen Twitch;\n\ntype item = {clickedInWave: bool};\n\ntype state = list(item);\n\ntype clicked = bool;\n\ntype action =\n  | Click(clicked)\n  | Reset;\nlet tempCounterStyle = Style.(style([color(String(\"lightblue\"))]));\n\nlet component = ReasonReact.reducerComponent(\"App\");\n/* \nmodule GetAllJerks = [%graphql {|\n  {\n    getJerks\n  }\n|}]; */\n\nlet styles =\n  StyleSheet.create(\n    Style.{\n      \"explodeHeart\":\n        style([left(Pt(0.)), top(Pt(0.)), position(Absolute)]),\n    },\n  );\n\nlet make = _children => {\n  ...component,\n  didMount: _ => onAuthorized(twitchAuth => Js.log(clientIdGet(twitchAuth))),\n\n  initialState: () => [],\n\n  reducer: (action, state) =>\n    switch (action) {\n    | Click(clicked) =>\n      clicked ?\n        ReasonReact.Update([{clickedInWave: true}, ...state]) :\n        ReasonReact.NoUpdate\n    | Reset => ReasonReact.Update([])\n    },\n\n  render: self =>\n    <ReasonApollo.Provider client=Client.instance>\n      <View>\n        <HeartContainer>\n          <Heart filled=true style={styles##explodeHeart} />\n          <Heart filled=true style={styles##explodeHeart} />\n        </HeartContainer>\n        {self.state |> List.length >= 5 ?\n           <Wave onFinish={_event => self.send(Reset)} /> : ReasonReact.null}\n        <TriggerContainer onPress={_event => self.send(Click(true))} />\n        <Text style=tempCounterStyle>\n          {ReasonReact.string(string_of_int(self.state |> List.length))}\n        </Text>\n      </View>\n    </ReasonApollo.Provider>,\n};\n\nlet default = ReasonReact.wrapReasonForJs(~component, _ => make([||]));"}]}}
Read message 
{"jsonrpc":"2.0","id":100,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0231266021729ms
➡️ running bsc /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/lanceharper/Repositories/jerk-twitch/client/lib/bs/src/components/App' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src/graphql-types' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/components' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/private' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/graphql_ppx/ppx' -ppx ''\''/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/reactjs_jsx_ppx_2.exe'\''' -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/.lsp/App.ast with pwd /Users/lanceharper/Repositories/jerk-twitch/client
<< Replacing lastDefinitions for file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re
Sending response {"id": 100, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, HeartContainer, Pervasives, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 26, "character": 4}, "end": {"line": 26, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":101,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":17,"character":3},"end":{"line":22,"character":4}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0231266021729ms
Sending response {"id": 101, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":102,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.00810623168945ms
Sending response {"id": 102, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, HeartContainer, Pervasives, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 26, "character": 4}, "end": {"line": 26, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":103,"method":"textDocument/formatting","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"options":{"tabSize":2,"insertSpaces":true}}}
[server] Got a method textDocument/formatting
[server] processing took 0.00715255737305ms
Sending response {"id": 103, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 66, "character": 0}}, "newText": "/* App is the actual entry point for the application. It matches on the route prop to determine which\n   sub-component to render */\nopen BsReactNative;\nopen Twitch;\n\ntype item = {clickedInWave: bool};\n\ntype state = list(item);\n\ntype clicked = bool;\n\ntype action =\n  | Click(clicked)\n  | Reset;\nlet tempCounterStyle = Style.(style([color(String(\"lightblue\"))]));\n\nlet component = ReasonReact.reducerComponent(\"App\");\n/*\n module GetAllJerks = [%graphql {|\n   {\n     getJerks\n   }\n |}]; */\n\nlet styles =\n  StyleSheet.create(\n    Style.{\n      \"explodeHeart\":\n        style([left(Pt(0.)), top(Pt(0.)), position(Absolute)]),\n    },\n  );\n\nlet make = _children => {\n  ...component,\n  didMount: _ => onAuthorized(twitchAuth => Js.log(clientIdGet(twitchAuth))),\n\n  initialState: () => [],\n\n  reducer: (action, state) =>\n    switch (action) {\n    | Click(clicked) =>\n      clicked ?\n        ReasonReact.Update([{clickedInWave: true}, ...state]) :\n        ReasonReact.NoUpdate\n    | Reset => ReasonReact.Update([])\n    },\n\n  render: self =>\n    <ReasonApollo.Provider client=Client.instance>\n      <View>\n        <HeartContainer>\n          <Heart filled=true style={styles##explodeHeart} />\n          <Heart filled=true style={styles##explodeHeart} />\n        </HeartContainer>\n        {self.state |> List.length >= 5 ?\n           <Wave onFinish={_event => self.send(Reset)} /> : ReasonReact.null}\n        <TriggerContainer onPress={_event => self.send(Click(true))} />\n        <Text style=tempCounterStyle>\n          {ReasonReact.string(string_of_int(self.state |> List.length))}\n        </Text>\n      </View>\n    </ReasonApollo.Provider>,\n};\n\nlet default = ReasonReact.wrapReasonForJs(~component, _ => make([||]));"}]}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re","version":118},"contentChanges":[{"text":"/* App is the actual entry point for the application. It matches on the route prop to determine which\n   sub-component to render */\nopen BsReactNative;\nopen Twitch;\n\ntype item = {clickedInWave: bool};\n\ntype state = list(item);\n\ntype clicked = bool;\n\ntype action =\n  | Click(clicked)\n  | Reset;\nlet tempCounterStyle = Style.(style([color(String(\"lightblue\"))]));\n\nlet component = ReasonReact.reducerComponent(\"App\");\n/*\n module GetAllJerks = [%graphql {|\n   {\n     getJerks\n   }\n |}]; */\n\nlet styles =\n  StyleSheet.create(\n    Style.{\n      \"explodeHeart\":\n        style([left(Pt(0.)), top(Pt(0.)), position(Absolute)]),\n    },\n  );\n\nlet make = _children => {\n  ...component,\n  didMount: _ => onAuthorized(twitchAuth => Js.log(clientIdGet(twitchAuth))),\n\n  initialState: () => [],\n\n  reducer: (action, state) =>\n    switch (action) {\n    | Click(clicked) =>\n      clicked ?\n        ReasonReact.Update([{clickedInWave: true}, ...state]) :\n        ReasonReact.NoUpdate\n    | Reset => ReasonReact.Update([])\n    },\n\n  render: self =>\n    <ReasonApollo.Provider client=Client.instance>\n      <View>\n        <HeartContainer>\n          <Heart filled=true style={styles##explodeHeart} />\n          <Heart filled=true style={styles##explodeHeart} />\n        </HeartContainer>\n        {self.state |> List.length >= 5 ?\n           <Wave onFinish={_event => self.send(Reset)} /> : ReasonReact.null}\n        <TriggerContainer onPress={_event => self.send(Click(true))} />\n        <Text style=tempCounterStyle>\n          {ReasonReact.string(string_of_int(self.state |> List.length))}\n        </Text>\n      </View>\n    </ReasonApollo.Provider>,\n};\n\nlet default = ReasonReact.wrapReasonForJs(~component, _ => make([||]));"}]}}
Read message 
{"jsonrpc":"2.0","id":104,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0100135803223ms
➡️ running bsc /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/lanceharper/Repositories/jerk-twitch/client/lib/bs/src/components/App' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src/graphql-types' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/components' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/private' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/graphql_ppx/ppx' -ppx ''\''/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/reactjs_jsx_ppx_2.exe'\''' -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/.lsp/App.ast with pwd /Users/lanceharper/Repositories/jerk-twitch/client
<< Replacing lastDefinitions for file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re
Sending response {"id": 104, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, HeartContainer, Pervasives, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 26, "character": 4}, "end": {"line": 26, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":105,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":17,"character":2},"end":{"line":22,"character":5}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00619888305664ms
Sending response {"id": 105, "jsonrpc": "2.0", "result": null}
Running diagnostics for file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re", "diagnostics": []}}
Read message 
{"jsonrpc":"2.0","id":106,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0150203704834ms
Sending response {"id": 106, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, HeartContainer, Pervasives, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 26, "character": 4}, "end": {"line": 26, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":107,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":17,"character":2},"end":{"line":22,"character":5}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00500679016113ms
Sending response {"id": 107, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":108,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":18,"character":1},"end":{"line":22,"character":8}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0100135803223ms
Sending response {"id": 108, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":109,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":17,"character":0},"end":{"line":22,"character":8}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0128746032715ms
Sending response {"id": 109, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":110,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":21,"character":4},"end":{"line":21,"character":4}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0121593475342ms
Sending response {"id": 110, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":111,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":17,"character":1}}}
[server] Got a method textDocument/hover
[server] processing took 0.00905990600586ms
Sending response {"id": 111, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":112,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0150203704834ms
Sending response {"id": 112, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":113,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":17,"character":0}}}
[server] Got a method textDocument/hover
[server] processing took 0.0100135803223ms
Sending response {"id": 113, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re","version":119},"contentChanges":[{"text":"/* App is the actual entry point for the application. It matches on the route prop to determine which\n   sub-component to render */\nopen BsReactNative;\nopen Twitch;\n\ntype item = {clickedInWave: bool};\n\ntype state = list(item);\n\ntype clicked = bool;\n\ntype action =\n  | Click(clicked)\n  | Reset;\nlet tempCounterStyle = Style.(style([color(String(\"lightblue\"))]));\n\nlet component = ReasonReact.reducerComponent(\"App\");\n\n/*\n module GetAllJerks = [%graphql {|\n   {\n     getJerks\n   }\n |}]; */\n\nlet styles =\n  StyleSheet.create(\n    Style.{\n      \"explodeHeart\":\n        style([left(Pt(0.)), top(Pt(0.)), position(Absolute)]),\n    },\n  );\n\nlet make = _children => {\n  ...component,\n  didMount: _ => onAuthorized(twitchAuth => Js.log(clientIdGet(twitchAuth))),\n\n  initialState: () => [],\n\n  reducer: (action, state) =>\n    switch (action) {\n    | Click(clicked) =>\n      clicked ?\n        ReasonReact.Update([{clickedInWave: true}, ...state]) :\n        ReasonReact.NoUpdate\n    | Reset => ReasonReact.Update([])\n    },\n\n  render: self =>\n    <ReasonApollo.Provider client=Client.instance>\n      <View>\n        <HeartContainer>\n          <Heart filled=true style={styles##explodeHeart} />\n          <Heart filled=true style={styles##explodeHeart} />\n        </HeartContainer>\n        {self.state |> List.length >= 5 ?\n           <Wave onFinish={_event => self.send(Reset)} /> : ReasonReact.null}\n        <TriggerContainer onPress={_event => self.send(Click(true))} />\n        <Text style=tempCounterStyle>\n          {ReasonReact.string(string_of_int(self.state |> List.length))}\n        </Text>\n      </View>\n    </ReasonApollo.Provider>,\n};\n\nlet default = ReasonReact.wrapReasonForJs(~component, _ => make([||]));"}]}}
Read message 
{"jsonrpc":"2.0","id":114,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0200271606445ms
➡️ running bsc /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/lanceharper/Repositories/jerk-twitch/client/lib/bs/src/components/App' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src/graphql-types' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/components' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/private' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/graphql_ppx/ppx' -ppx ''\''/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/reactjs_jsx_ppx_2.exe'\''' -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/.lsp/App.ast with pwd /Users/lanceharper/Repositories/jerk-twitch/client
<< Replacing lastDefinitions for file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re
Sending response {"id": 114, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, HeartContainer, Pervasives, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 27, "character": 4}, "end": {"line": 27, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":115,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0109672546387ms
Sending response {"id": 115, "jsonrpc": "2.0", "result": null}
Running diagnostics for file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re", "diagnostics": []}}
Read message 
{"jsonrpc":"2.0","id":116,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0181198120117ms
Sending response {"id": 116, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, HeartContainer, Pervasives, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 27, "character": 4}, "end": {"line": 27, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":117,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":19,"character":0},"end":{"line":23,"character":8}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00905990600586ms
Sending response {"id": 117, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":118,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":18,"character":0},"end":{"line":23,"character":8}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0209808349609ms
Sending response {"id": 118, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re","version":120},"contentChanges":[{"text":"/* App is the actual entry point for the application. It matches on the route prop to determine which\n   sub-component to render */\nopen BsReactNative;\nopen Twitch;\n\ntype item = {clickedInWave: bool};\n\ntype state = list(item);\n\ntype clicked = bool;\n\ntype action =\n  | Click(clicked)\n  | Reset;\nlet tempCounterStyle = Style.(style([color(String(\"lightblue\"))]));\n\nlet component = ReasonReact.reducerComponent(\"App\");\n\n\n module GetAllJerks = [%graphql {|\n   {\n     getJerks\n   }\n |}];\n\nlet styles =\n  StyleSheet.create(\n    Style.{\n      \"explodeHeart\":\n        style([left(Pt(0.)), top(Pt(0.)), position(Absolute)]),\n    },\n  );\n\nlet make = _children => {\n  ...component,\n  didMount: _ => onAuthorized(twitchAuth => Js.log(clientIdGet(twitchAuth))),\n\n  initialState: () => [],\n\n  reducer: (action, state) =>\n    switch (action) {\n    | Click(clicked) =>\n      clicked ?\n        ReasonReact.Update([{clickedInWave: true}, ...state]) :\n        ReasonReact.NoUpdate\n    | Reset => ReasonReact.Update([])\n    },\n\n  render: self =>\n    <ReasonApollo.Provider client=Client.instance>\n      <View>\n        <HeartContainer>\n          <Heart filled=true style={styles##explodeHeart} />\n          <Heart filled=true style={styles##explodeHeart} />\n        </HeartContainer>\n        {self.state |> List.length >= 5 ?\n           <Wave onFinish={_event => self.send(Reset)} /> : ReasonReact.null}\n        <TriggerContainer onPress={_event => self.send(Click(true))} />\n        <Text style=tempCounterStyle>\n          {ReasonReact.string(string_of_int(self.state |> List.length))}\n        </Text>\n      </View>\n    </ReasonApollo.Provider>,\n};\n\nlet default = ReasonReact.wrapReasonForJs(~component, _ => make([||]));"}]}}
Read message 
{"jsonrpc":"2.0","id":119,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0159740447998ms
➡️ running bsc /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/lanceharper/Repositories/jerk-twitch/client/lib/bs/src/components/App' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src/graphql-types' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/components' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/private' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/graphql_ppx/ppx' -ppx ''\''/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/reactjs_jsx_ppx_2.exe'\''' -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/.lsp/App.ast with pwd /Users/lanceharper/Repositories/jerk-twitch/client
Sending response {"id": 119, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, HeartContainer, Pervasives, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 27, "character": 4}, "end": {"line": 27, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":120,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":18,"character":0},"end":{"line":23,"character":5}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00905990600586ms
Sending response {"id": 120, "jsonrpc": "2.0", "result": null}
Running diagnostics for file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re
type error here Read_schema.Schema_file_not_found
[1mFile "[1m", line 1[0m[0m:
[1;31mError[0m: Error while running external preprocessor
Command line: /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/graphql_ppx/ppx '/var/folders/y5/zmmdgynd3x30h9c84rwt93rr0000gn/T/camlppxf734b4' '/var/folders/y5/zmmdgynd3x30h9c84rwt93rr0000gn/T/camlppxb30d0a'

Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re", "diagnostics": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "message": "Read_schema.Schema_file_not_found\nFile \"\", line 1:\nError: Error while running external preprocessor\nCommand line: /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/graphql_ppx/ppx '/var/folders/y5/zmmdgynd3x30h9c84rwt93rr0000gn/T/camlppxf734b4' '/var/folders/y5/zmmdgynd3x30h9c84rwt93rr0000gn/T/camlppxb30d0a'", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","id":121,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.028133392334ms
Sending response {"id": 121, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, HeartContainer, Pervasives, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 27, "character": 4}, "end": {"line": 27, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":122,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":23,"character":5},"end":{"line":23,"character":5}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0109672546387ms
Sending response {"id": 122, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":123,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":21,"character":8}}}
[server] Got a method textDocument/hover
[server] processing took 0.0178813934326ms
Sending response {"id": 123, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":124,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":21,"character":8}}}
[server] Got a method textDocument/hover
[server] processing took 0.0169277191162ms
Sending response {"id": 124, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":125,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":21,"character":6}}}
[server] Got a method textDocument/hover
[server] processing took 0.0169277191162ms
Sending response {"id": 125, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":126,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":21,"character":6}}}
[server] Got a method textDocument/hover
[server] processing took 0.0169277191162ms
Sending response {"id": 126, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":127,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":21,"character":5}}}
[server] Got a method textDocument/hover
[server] processing took 0.0159740447998ms
Sending response {"id": 127, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":128,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":25,"character":7}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.0109672546387ms
Got a loc for pos
Sending response {"id": 128, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 53, "character": 36}, "end": {"line": 53, "character": 42}}, "kind": 2}, {"range": {"start": {"line": 52, "character": 36}, "end": {"line": 52, "character": 42}}, "kind": 2}, {"range": {"start": {"line": 25, "character": 4}, "end": {"line": 25, "character": 10}}, "kind": 2}]}
Read message 
{"jsonrpc":"2.0","id":129,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":25,"character":7}}}
[server] Got a method textDocument/hover
[server] processing took 0.0169277191162ms
FINDING /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/js.cmi src /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/js.ml
Trying for declared Value 1019 in file file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re
Sending response {"id": 129, "jsonrpc": "2.0", "result": {"range": {"start": {"line": 25, "character": 4}, "end": {"line": 25, "character": 10}}, "contents": {"kind": "markdown", "value": "```\nJs.t(\n  < explodeHeart : BsReactNative.Style.t >\n)\n```\n\n```\ntype t('a)\n```\n\n<root>/client/src/components/App/App.re"}}}
Read message 
{"jsonrpc":"2.0","id":130,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":25,"character":7},"end":{"line":25,"character":7}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0178813934326ms
Sending response {"id": 130, "jsonrpc": "2.0", "result": [{"title": "Add to interface file", "command": "reason-language-server.add_to_interface_inner", "arguments": ["file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re", "let styles: Js.t(\n  < explodeHeart : BsReactNative.Style.t >\n)"]}]}
Read message 
{"jsonrpc":"2.0","id":131,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":21,"character":5}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.0100135803223ms
Sending response {"id": 131, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":132,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":21,"character":5},"end":{"line":21,"character":5}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0178813934326ms
Sending response {"id": 132, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":133,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":21,"character":5},"end":{"line":21,"character":13}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0178813934326ms
Sending response {"id": 133, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re","version":121},"contentChanges":[{"text":"/* App is the actual entry point for the application. It matches on the route prop to determine which\n   sub-component to render */\nopen BsReactNative;\nopen Twitch;\n\ntype item = {clickedInWave: bool};\n\ntype state = list(item);\n\ntype clicked = bool;\n\ntype action =\n  | Click(clicked)\n  | Reset;\nlet tempCounterStyle = Style.(style([color(String(\"lightblue\"))]));\n\nlet component = ReasonReact.reducerComponent(\"App\");\n\n\n module GetAllJerks = [%graphql {|\n   {\n     \n   }\n |}];\n\nlet styles =\n  StyleSheet.create(\n    Style.{\n      \"explodeHeart\":\n        style([left(Pt(0.)), top(Pt(0.)), position(Absolute)]),\n    },\n  );\n\nlet make = _children => {\n  ...component,\n  didMount: _ => onAuthorized(twitchAuth => Js.log(clientIdGet(twitchAuth))),\n\n  initialState: () => [],\n\n  reducer: (action, state) =>\n    switch (action) {\n    | Click(clicked) =>\n      clicked ?\n        ReasonReact.Update([{clickedInWave: true}, ...state]) :\n        ReasonReact.NoUpdate\n    | Reset => ReasonReact.Update([])\n    },\n\n  render: self =>\n    <ReasonApollo.Provider client=Client.instance>\n      <View>\n        <HeartContainer>\n          <Heart filled=true style={styles##explodeHeart} />\n          <Heart filled=true style={styles##explodeHeart} />\n        </HeartContainer>\n        {self.state |> List.length >= 5 ?\n           <Wave onFinish={_event => self.send(Reset)} /> : ReasonReact.null}\n        <TriggerContainer onPress={_event => self.send(Click(true))} />\n        <Text style=tempCounterStyle>\n          {ReasonReact.string(string_of_int(self.state |> List.length))}\n        </Text>\n      </View>\n    </ReasonApollo.Provider>,\n};\n\nlet default = ReasonReact.wrapReasonForJs(~component, _ => make([||]));"}]}}
Read message 
{"jsonrpc":"2.0","id":134,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0247955322266ms
➡️ running bsc /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/lanceharper/Repositories/jerk-twitch/client/lib/bs/src/components/App' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src/graphql-types' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/components' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/private' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/graphql_ppx/ppx' -ppx ''\''/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/reactjs_jsx_ppx_2.exe'\''' -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/.lsp/App.ast with pwd /Users/lanceharper/Repositories/jerk-twitch/client
Sending response {"id": 134, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, HeartContainer, Pervasives, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 27, "character": 4}, "end": {"line": 27, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":135,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.00786781311035ms
Sending response {"id": 135, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, HeartContainer, Pervasives, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 27, "character": 4}, "end": {"line": 27, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":136,"method":"textDocument/formatting","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"options":{"tabSize":2,"insertSpaces":true}}}
[server] Got a method textDocument/formatting
[server] processing took 0.0131130218506ms
Sending response {"id": 136, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 67, "character": 0}}, "newText": "/* App is the actual entry point for the application. It matches on the route prop to determine which\n   sub-component to render */\nopen BsReactNative;\nopen Twitch;\n\ntype item = {clickedInWave: bool};\n\ntype state = list(item);\n\ntype clicked = bool;\n\ntype action =\n  | Click(clicked)\n  | Reset;\nlet tempCounterStyle = Style.(style([color(String(\"lightblue\"))]));\n\nlet component = ReasonReact.reducerComponent(\"App\");\n\nmodule GetAllJerks = [%graphql {|\n   {\n\n   }\n |}];\n\nlet styles =\n  StyleSheet.create(\n    Style.{\n      \"explodeHeart\":\n        style([left(Pt(0.)), top(Pt(0.)), position(Absolute)]),\n    },\n  );\n\nlet make = _children => {\n  ...component,\n  didMount: _ => onAuthorized(twitchAuth => Js.log(clientIdGet(twitchAuth))),\n\n  initialState: () => [],\n\n  reducer: (action, state) =>\n    switch (action) {\n    | Click(clicked) =>\n      clicked ?\n        ReasonReact.Update([{clickedInWave: true}, ...state]) :\n        ReasonReact.NoUpdate\n    | Reset => ReasonReact.Update([])\n    },\n\n  render: self =>\n    <ReasonApollo.Provider client=Client.instance>\n      <View>\n        <HeartContainer>\n          <Heart filled=true style={styles##explodeHeart} />\n          <Heart filled=true style={styles##explodeHeart} />\n        </HeartContainer>\n        {self.state |> List.length >= 5 ?\n           <Wave onFinish={_event => self.send(Reset)} /> : ReasonReact.null}\n        <TriggerContainer onPress={_event => self.send(Click(true))} />\n        <Text style=tempCounterStyle>\n          {ReasonReact.string(string_of_int(self.state |> List.length))}\n        </Text>\n      </View>\n    </ReasonApollo.Provider>,\n};\n\nlet default = ReasonReact.wrapReasonForJs(~component, _ => make([||]));"}]}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re","version":122},"contentChanges":[{"text":"/* App is the actual entry point for the application. It matches on the route prop to determine which\n   sub-component to render */\nopen BsReactNative;\nopen Twitch;\n\ntype item = {clickedInWave: bool};\n\ntype state = list(item);\n\ntype clicked = bool;\n\ntype action =\n  | Click(clicked)\n  | Reset;\nlet tempCounterStyle = Style.(style([color(String(\"lightblue\"))]));\n\nlet component = ReasonReact.reducerComponent(\"App\");\n\nmodule GetAllJerks = [%graphql {|\n   {\n\n   }\n |}];\n\nlet styles =\n  StyleSheet.create(\n    Style.{\n      \"explodeHeart\":\n        style([left(Pt(0.)), top(Pt(0.)), position(Absolute)]),\n    },\n  );\n\nlet make = _children => {\n  ...component,\n  didMount: _ => onAuthorized(twitchAuth => Js.log(clientIdGet(twitchAuth))),\n\n  initialState: () => [],\n\n  reducer: (action, state) =>\n    switch (action) {\n    | Click(clicked) =>\n      clicked ?\n        ReasonReact.Update([{clickedInWave: true}, ...state]) :\n        ReasonReact.NoUpdate\n    | Reset => ReasonReact.Update([])\n    },\n\n  render: self =>\n    <ReasonApollo.Provider client=Client.instance>\n      <View>\n        <HeartContainer>\n          <Heart filled=true style={styles##explodeHeart} />\n          <Heart filled=true style={styles##explodeHeart} />\n        </HeartContainer>\n        {self.state |> List.length >= 5 ?\n           <Wave onFinish={_event => self.send(Reset)} /> : ReasonReact.null}\n        <TriggerContainer onPress={_event => self.send(Click(true))} />\n        <Text style=tempCounterStyle>\n          {ReasonReact.string(string_of_int(self.state |> List.length))}\n        </Text>\n      </View>\n    </ReasonApollo.Provider>,\n};\n\nlet default = ReasonReact.wrapReasonForJs(~component, _ => make([||]));"}]}}
Read message 
{"jsonrpc":"2.0","id":137,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0159740447998ms
➡️ running bsc /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/lanceharper/Repositories/jerk-twitch/client/lib/bs/src/components/App' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src/graphql-types' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/components' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/private' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/graphql_ppx/ppx' -ppx ''\''/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/reactjs_jsx_ppx_2.exe'\''' -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/.lsp/App.ast with pwd /Users/lanceharper/Repositories/jerk-twitch/client
Sending response {"id": 137, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, HeartContainer, Pervasives, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 27, "character": 4}, "end": {"line": 27, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":138,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.00905990600586ms
Sending response {"id": 138, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, HeartContainer, Pervasives, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 27, "character": 4}, "end": {"line": 27, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Running diagnostics for file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re
type error here [1mFile "[1m", line 22, characters 3-4[0m[0m:
[1;31mError[0m: Unexpected token }
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re", "diagnostics": [{"range": {"start": {"line": 21, "character": 3}, "end": {"line": 21, "character": 4}}, "message": "Error: Unexpected token }", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","id":139,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":21,"character":4},"end":{"line":21,"character":4}},"context":{"diagnostics":[{"range":{"start":{"line":21,"character":3},"end":{"line":21,"character":4}},"message":"Error: Unexpected token }","severity":1}]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0171661376953ms
Sending response {"id": 139, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":140,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":19,"character":3}}}
[server] Got a method textDocument/hover
[server] processing took 0.0128746032715ms
Sending response {"id": 140, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":141,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":19,"character":2}}}
[server] Got a method textDocument/hover
[server] processing took 0.0381469726562ms
Sending response {"id": 141, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re","version":123},"contentChanges":[{"text":"/* App is the actual entry point for the application. It matches on the route prop to determine which\n   sub-component to render */\nopen BsReactNative;\nopen Twitch;\n\ntype item = {clickedInWave: bool};\n\ntype state = list(item);\n\ntype clicked = bool;\n\ntype action =\n  | Click(clicked)\n  | Reset;\nlet tempCounterStyle = Style.(style([color(String(\"lightblue\"))]));\n\nlet component = ReasonReact.reducerComponent(\"App\");\n\nmodule GetAllJerks = [%graphql {|\n   {\n\n   \n |}];\n\nlet styles =\n  StyleSheet.create(\n    Style.{\n      \"explodeHeart\":\n        style([left(Pt(0.)), top(Pt(0.)), position(Absolute)]),\n    },\n  );\n\nlet make = _children => {\n  ...component,\n  didMount: _ => onAuthorized(twitchAuth => Js.log(clientIdGet(twitchAuth))),\n\n  initialState: () => [],\n\n  reducer: (action, state) =>\n    switch (action) {\n    | Click(clicked) =>\n      clicked ?\n        ReasonReact.Update([{clickedInWave: true}, ...state]) :\n        ReasonReact.NoUpdate\n    | Reset => ReasonReact.Update([])\n    },\n\n  render: self =>\n    <ReasonApollo.Provider client=Client.instance>\n      <View>\n        <HeartContainer>\n          <Heart filled=true style={styles##explodeHeart} />\n          <Heart filled=true style={styles##explodeHeart} />\n        </HeartContainer>\n        {self.state |> List.length >= 5 ?\n           <Wave onFinish={_event => self.send(Reset)} /> : ReasonReact.null}\n        <TriggerContainer onPress={_event => self.send(Click(true))} />\n        <Text style=tempCounterStyle>\n          {ReasonReact.string(string_of_int(self.state |> List.length))}\n        </Text>\n      </View>\n    </ReasonApollo.Provider>,\n};\n\nlet default = ReasonReact.wrapReasonForJs(~component, _ => make([||]));"}]}}
Read message 
{"jsonrpc":"2.0","id":142,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.00810623168945ms
➡️ running bsc /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/lanceharper/Repositories/jerk-twitch/client/lib/bs/src/components/App' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src/graphql-types' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/components' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/private' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/graphql_ppx/ppx' -ppx ''\''/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/reactjs_jsx_ppx_2.exe'\''' -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/.lsp/App.ast with pwd /Users/lanceharper/Repositories/jerk-twitch/client
Sending response {"id": 142, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, HeartContainer, Pervasives, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 27, "character": 4}, "end": {"line": 27, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":143,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0100135803223ms
Sending response {"id": 143, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, HeartContainer, Pervasives, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 27, "character": 4}, "end": {"line": 27, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Running diagnostics for file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re
type error here [1mFile "[1m", line 23, characters 1-1[0m[0m:
[1;31mError[0m: Unexpected end of query
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re", "diagnostics": [{"range": {"start": {"line": 22, "character": 1}, "end": {"line": 22, "character": 1}}, "message": "Error: Unexpected end of query", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re","version":124},"contentChanges":[{"text":"/* App is the actual entry point for the application. It matches on the route prop to determine which\n   sub-component to render */\nopen BsReactNative;\nopen Twitch;\n\ntype item = {clickedInWave: bool};\n\ntype state = list(item);\n\ntype clicked = bool;\n\ntype action =\n  | Click(clicked)\n  | Reset;\nlet tempCounterStyle = Style.(style([color(String(\"lightblue\"))]));\n\nlet component = ReasonReact.reducerComponent(\"App\");\n\nmodule GetAllJerks = [%graphql {|\n   \n\n   \n |}];\n\nlet styles =\n  StyleSheet.create(\n    Style.{\n      \"explodeHeart\":\n        style([left(Pt(0.)), top(Pt(0.)), position(Absolute)]),\n    },\n  );\n\nlet make = _children => {\n  ...component,\n  didMount: _ => onAuthorized(twitchAuth => Js.log(clientIdGet(twitchAuth))),\n\n  initialState: () => [],\n\n  reducer: (action, state) =>\n    switch (action) {\n    | Click(clicked) =>\n      clicked ?\n        ReasonReact.Update([{clickedInWave: true}, ...state]) :\n        ReasonReact.NoUpdate\n    | Reset => ReasonReact.Update([])\n    },\n\n  render: self =>\n    <ReasonApollo.Provider client=Client.instance>\n      <View>\n        <HeartContainer>\n          <Heart filled=true style={styles##explodeHeart} />\n          <Heart filled=true style={styles##explodeHeart} />\n        </HeartContainer>\n        {self.state |> List.length >= 5 ?\n           <Wave onFinish={_event => self.send(Reset)} /> : ReasonReact.null}\n        <TriggerContainer onPress={_event => self.send(Click(true))} />\n        <Text style=tempCounterStyle>\n          {ReasonReact.string(string_of_int(self.state |> List.length))}\n        </Text>\n      </View>\n    </ReasonApollo.Provider>,\n};\n\nlet default = ReasonReact.wrapReasonForJs(~component, _ => make([||]));"}]}}
Read message 
{"jsonrpc":"2.0","id":144,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0109672546387ms
➡️ running bsc /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/lanceharper/Repositories/jerk-twitch/client/lib/bs/src/components/App' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src/graphql-types' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/components' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/private' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/graphql_ppx/ppx' -ppx ''\''/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/reactjs_jsx_ppx_2.exe'\''' -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/.lsp/App.ast with pwd /Users/lanceharper/Repositories/jerk-twitch/client
Sending response {"id": 144, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, HeartContainer, Pervasives, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 27, "character": 4}, "end": {"line": 27, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":145,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.00596046447754ms
Sending response {"id": 145, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, HeartContainer, Pervasives, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 27, "character": 4}, "end": {"line": 27, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Running diagnostics for file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re
type error here [1mFile "[1m", line 23, characters 1-1[0m[0m:
[1;31mError[0m: Unexpected token [EOF]
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re", "diagnostics": [{"range": {"start": {"line": 22, "character": 1}, "end": {"line": 22, "character": 1}}, "message": "Error: Unexpected token [EOF]", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","id":146,"method":"textDocument/formatting","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"options":{"tabSize":2,"insertSpaces":true}}}
[server] Got a method textDocument/formatting
[server] processing took 0.0128746032715ms
Sending response {"id": 146, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 66, "character": 0}}, "newText": "/* App is the actual entry point for the application. It matches on the route prop to determine which\n   sub-component to render */\nopen BsReactNative;\nopen Twitch;\n\ntype item = {clickedInWave: bool};\n\ntype state = list(item);\n\ntype clicked = bool;\n\ntype action =\n  | Click(clicked)\n  | Reset;\nlet tempCounterStyle = Style.(style([color(String(\"lightblue\"))]));\n\nlet component = ReasonReact.reducerComponent(\"App\");\n\nmodule GetAllJerks = [%graphql {|\n\n\n\n |}];\n\nlet styles =\n  StyleSheet.create(\n    Style.{\n      \"explodeHeart\":\n        style([left(Pt(0.)), top(Pt(0.)), position(Absolute)]),\n    },\n  );\n\nlet make = _children => {\n  ...component,\n  didMount: _ => onAuthorized(twitchAuth => Js.log(clientIdGet(twitchAuth))),\n\n  initialState: () => [],\n\n  reducer: (action, state) =>\n    switch (action) {\n    | Click(clicked) =>\n      clicked ?\n        ReasonReact.Update([{clickedInWave: true}, ...state]) :\n        ReasonReact.NoUpdate\n    | Reset => ReasonReact.Update([])\n    },\n\n  render: self =>\n    <ReasonApollo.Provider client=Client.instance>\n      <View>\n        <HeartContainer>\n          <Heart filled=true style={styles##explodeHeart} />\n          <Heart filled=true style={styles##explodeHeart} />\n        </HeartContainer>\n        {self.state |> List.length >= 5 ?\n           <Wave onFinish={_event => self.send(Reset)} /> : ReasonReact.null}\n        <TriggerContainer onPress={_event => self.send(Click(true))} />\n        <Text style=tempCounterStyle>\n          {ReasonReact.string(string_of_int(self.state |> List.length))}\n        </Text>\n      </View>\n    </ReasonApollo.Provider>,\n};\n\nlet default = ReasonReact.wrapReasonForJs(~component, _ => make([||]));"}]}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re","version":125},"contentChanges":[{"text":"/* App is the actual entry point for the application. It matches on the route prop to determine which\n   sub-component to render */\nopen BsReactNative;\nopen Twitch;\n\ntype item = {clickedInWave: bool};\n\ntype state = list(item);\n\ntype clicked = bool;\n\ntype action =\n  | Click(clicked)\n  | Reset;\nlet tempCounterStyle = Style.(style([color(String(\"lightblue\"))]));\n\nlet component = ReasonReact.reducerComponent(\"App\");\n\nmodule GetAllJerks = [%graphql {|\n\n\n\n |}];\n\nlet styles =\n  StyleSheet.create(\n    Style.{\n      \"explodeHeart\":\n        style([left(Pt(0.)), top(Pt(0.)), position(Absolute)]),\n    },\n  );\n\nlet make = _children => {\n  ...component,\n  didMount: _ => onAuthorized(twitchAuth => Js.log(clientIdGet(twitchAuth))),\n\n  initialState: () => [],\n\n  reducer: (action, state) =>\n    switch (action) {\n    | Click(clicked) =>\n      clicked ?\n        ReasonReact.Update([{clickedInWave: true}, ...state]) :\n        ReasonReact.NoUpdate\n    | Reset => ReasonReact.Update([])\n    },\n\n  render: self =>\n    <ReasonApollo.Provider client=Client.instance>\n      <View>\n        <HeartContainer>\n          <Heart filled=true style={styles##explodeHeart} />\n          <Heart filled=true style={styles##explodeHeart} />\n        </HeartContainer>\n        {self.state |> List.length >= 5 ?\n           <Wave onFinish={_event => self.send(Reset)} /> : ReasonReact.null}\n        <TriggerContainer onPress={_event => self.send(Click(true))} />\n        <Text style=tempCounterStyle>\n          {ReasonReact.string(string_of_int(self.state |> List.length))}\n        </Text>\n      </View>\n    </ReasonApollo.Provider>,\n};\n\nlet default = ReasonReact.wrapReasonForJs(~component, _ => make([||]));"}]}}
Read message 
{"jsonrpc":"2.0","id":147,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0121593475342ms
➡️ running bsc /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/lanceharper/Repositories/jerk-twitch/client/lib/bs/src/components/App' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src/graphql-types' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/components' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/private' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/graphql_ppx/ppx' -ppx ''\''/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/reactjs_jsx_ppx_2.exe'\''' -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/.lsp/App.ast with pwd /Users/lanceharper/Repositories/jerk-twitch/client
Sending response {"id": 147, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, HeartContainer, Pervasives, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 27, "character": 4}, "end": {"line": 27, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":148,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.00596046447754ms
Sending response {"id": 148, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, HeartContainer, Pervasives, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 27, "character": 4}, "end": {"line": 27, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Running diagnostics for file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re
type error here [1mFile "[1m", line 23, characters 1-1[0m[0m:
[1;31mError[0m: Unexpected token [EOF]
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re", "diagnostics": [{"range": {"start": {"line": 22, "character": 1}, "end": {"line": 22, "character": 1}}, "message": "Error: Unexpected token [EOF]", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re","version":126},"contentChanges":[{"text":"/* App is the actual entry point for the application. It matches on the route prop to determine which\n   sub-component to render */\nopen BsReactNative;\nopen Twitch;\n\ntype item = {clickedInWave: bool};\n\ntype state = list(item);\n\ntype clicked = bool;\n\ntype action =\n  | Click(clicked)\n  | Reset;\nlet tempCounterStyle = Style.(style([color(String(\"lightblue\"))]));\n\nlet component = ReasonReact.reducerComponent(\"App\");\n\nmodule GetAllJerks = [%graphql {|\n   \n\n   \n |}];\n\nlet styles =\n  StyleSheet.create(\n    Style.{\n      \"explodeHeart\":\n        style([left(Pt(0.)), top(Pt(0.)), position(Absolute)]),\n    },\n  );\n\nlet make = _children => {\n  ...component,\n  didMount: _ => onAuthorized(twitchAuth => Js.log(clientIdGet(twitchAuth))),\n\n  initialState: () => [],\n\n  reducer: (action, state) =>\n    switch (action) {\n    | Click(clicked) =>\n      clicked ?\n        ReasonReact.Update([{clickedInWave: true}, ...state]) :\n        ReasonReact.NoUpdate\n    | Reset => ReasonReact.Update([])\n    },\n\n  render: self =>\n    <ReasonApollo.Provider client=Client.instance>\n      <View>\n        <HeartContainer>\n          <Heart filled=true style={styles##explodeHeart} />\n          <Heart filled=true style={styles##explodeHeart} />\n        </HeartContainer>\n        {self.state |> List.length >= 5 ?\n           <Wave onFinish={_event => self.send(Reset)} /> : ReasonReact.null}\n        <TriggerContainer onPress={_event => self.send(Click(true))} />\n        <Text style=tempCounterStyle>\n          {ReasonReact.string(string_of_int(self.state |> List.length))}\n        </Text>\n      </View>\n    </ReasonApollo.Provider>,\n};\n\nlet default = ReasonReact.wrapReasonForJs(~component, _ => make([||]));"}]}}
Read message 
{"jsonrpc":"2.0","id":149,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0219345092773ms
➡️ running bsc /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/lanceharper/Repositories/jerk-twitch/client/lib/bs/src/components/App' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src/graphql-types' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/components' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/private' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/graphql_ppx/ppx' -ppx ''\''/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/reactjs_jsx_ppx_2.exe'\''' -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/.lsp/App.ast with pwd /Users/lanceharper/Repositories/jerk-twitch/client
Sending response {"id": 149, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, HeartContainer, Pervasives, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 27, "character": 4}, "end": {"line": 27, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":150,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.00810623168945ms
Sending response {"id": 150, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, HeartContainer, Pervasives, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 27, "character": 4}, "end": {"line": 27, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re","version":127},"contentChanges":[{"text":"/* App is the actual entry point for the application. It matches on the route prop to determine which\n   sub-component to render */\nopen BsReactNative;\nopen Twitch;\n\ntype item = {clickedInWave: bool};\n\ntype state = list(item);\n\ntype clicked = bool;\n\ntype action =\n  | Click(clicked)\n  | Reset;\nlet tempCounterStyle = Style.(style([color(String(\"lightblue\"))]));\n\nlet component = ReasonReact.reducerComponent(\"App\");\n\nmodule GetAllJerks = [%graphql {|\n   {\n\n   \n |}];\n\nlet styles =\n  StyleSheet.create(\n    Style.{\n      \"explodeHeart\":\n        style([left(Pt(0.)), top(Pt(0.)), position(Absolute)]),\n    },\n  );\n\nlet make = _children => {\n  ...component,\n  didMount: _ => onAuthorized(twitchAuth => Js.log(clientIdGet(twitchAuth))),\n\n  initialState: () => [],\n\n  reducer: (action, state) =>\n    switch (action) {\n    | Click(clicked) =>\n      clicked ?\n        ReasonReact.Update([{clickedInWave: true}, ...state]) :\n        ReasonReact.NoUpdate\n    | Reset => ReasonReact.Update([])\n    },\n\n  render: self =>\n    <ReasonApollo.Provider client=Client.instance>\n      <View>\n        <HeartContainer>\n          <Heart filled=true style={styles##explodeHeart} />\n          <Heart filled=true style={styles##explodeHeart} />\n        </HeartContainer>\n        {self.state |> List.length >= 5 ?\n           <Wave onFinish={_event => self.send(Reset)} /> : ReasonReact.null}\n        <TriggerContainer onPress={_event => self.send(Click(true))} />\n        <Text style=tempCounterStyle>\n          {ReasonReact.string(string_of_int(self.state |> List.length))}\n        </Text>\n      </View>\n    </ReasonApollo.Provider>,\n};\n\nlet default = ReasonReact.wrapReasonForJs(~component, _ => make([||]));"}]}}
Read message 
{"jsonrpc":"2.0","id":151,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0159740447998ms
➡️ running bsc /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/lanceharper/Repositories/jerk-twitch/client/lib/bs/src/components/App' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src/graphql-types' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/components' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/private' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/graphql_ppx/ppx' -ppx ''\''/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/reactjs_jsx_ppx_2.exe'\''' -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/.lsp/App.ast with pwd /Users/lanceharper/Repositories/jerk-twitch/client
Sending response {"id": 151, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, HeartContainer, Pervasives, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 27, "character": 4}, "end": {"line": 27, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":152,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":19,"character":4},"end":{"line":19,"character":4}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00786781311035ms
Sending response {"id": 152, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":153,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.028133392334ms
Sending response {"id": 153, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, HeartContainer, Pervasives, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 27, "character": 4}, "end": {"line": 27, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re","version":128},"contentChanges":[{"text":"/* App is the actual entry point for the application. It matches on the route prop to determine which\n   sub-component to render */\nopen BsReactNative;\nopen Twitch;\n\ntype item = {clickedInWave: bool};\n\ntype state = list(item);\n\ntype clicked = bool;\n\ntype action =\n  | Click(clicked)\n  | Reset;\nlet tempCounterStyle = Style.(style([color(String(\"lightblue\"))]));\n\nlet component = ReasonReact.reducerComponent(\"App\");\n\nmodule GetAllJerks = [%graphql {|\n   {\n\n   }\n |}];\n\nlet styles =\n  StyleSheet.create(\n    Style.{\n      \"explodeHeart\":\n        style([left(Pt(0.)), top(Pt(0.)), position(Absolute)]),\n    },\n  );\n\nlet make = _children => {\n  ...component,\n  didMount: _ => onAuthorized(twitchAuth => Js.log(clientIdGet(twitchAuth))),\n\n  initialState: () => [],\n\n  reducer: (action, state) =>\n    switch (action) {\n    | Click(clicked) =>\n      clicked ?\n        ReasonReact.Update([{clickedInWave: true}, ...state]) :\n        ReasonReact.NoUpdate\n    | Reset => ReasonReact.Update([])\n    },\n\n  render: self =>\n    <ReasonApollo.Provider client=Client.instance>\n      <View>\n        <HeartContainer>\n          <Heart filled=true style={styles##explodeHeart} />\n          <Heart filled=true style={styles##explodeHeart} />\n        </HeartContainer>\n        {self.state |> List.length >= 5 ?\n           <Wave onFinish={_event => self.send(Reset)} /> : ReasonReact.null}\n        <TriggerContainer onPress={_event => self.send(Click(true))} />\n        <Text style=tempCounterStyle>\n          {ReasonReact.string(string_of_int(self.state |> List.length))}\n        </Text>\n      </View>\n    </ReasonApollo.Provider>,\n};\n\nlet default = ReasonReact.wrapReasonForJs(~component, _ => make([||]));"}]}}
Read message 
{"jsonrpc":"2.0","id":154,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0131130218506ms
➡️ running bsc /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/lanceharper/Repositories/jerk-twitch/client/lib/bs/src/components/App' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src/graphql-types' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/components' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/private' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/graphql_ppx/ppx' -ppx ''\''/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/reactjs_jsx_ppx_2.exe'\''' -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/.lsp/App.ast with pwd /Users/lanceharper/Repositories/jerk-twitch/client
Sending response {"id": 154, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, HeartContainer, Pervasives, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 27, "character": 4}, "end": {"line": 27, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":155,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":21,"character":4},"end":{"line":21,"character":4}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00905990600586ms
Sending response {"id": 155, "jsonrpc": "2.0", "result": null}
Running diagnostics for file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re
type error here [1mFile "[1m", line 22, characters 3-4[0m[0m:
[1;31mError[0m: Unexpected token }
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re", "diagnostics": [{"range": {"start": {"line": 21, "character": 3}, "end": {"line": 21, "character": 4}}, "message": "Error: Unexpected token }", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","id":156,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0159740447998ms
Sending response {"id": 156, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, HeartContainer, Pervasives, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 27, "character": 4}, "end": {"line": 27, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":157,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":21,"character":4},"end":{"line":21,"character":4}},"context":{"diagnostics":[{"range":{"start":{"line":21,"character":3},"end":{"line":21,"character":4}},"message":"Error: Unexpected token }","severity":1}]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0150203704834ms
Sending response {"id": 157, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":158,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":18,"character":0},"end":{"line":22,"character":5}},"context":{"diagnostics":[{"range":{"start":{"line":21,"character":3},"end":{"line":21,"character":4}},"message":"Error: Unexpected token }","severity":1}]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0147819519043ms
Sending response {"id": 158, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re","version":129},"contentChanges":[{"text":"/* App is the actual entry point for the application. It matches on the route prop to determine which\n   sub-component to render */\nopen BsReactNative;\nopen Twitch;\n\ntype item = {clickedInWave: bool};\n\ntype state = list(item);\n\ntype clicked = bool;\n\ntype action =\n  | Click(clicked)\n  | Reset;\nlet tempCounterStyle = Style.(style([color(String(\"lightblue\"))]));\n\nlet component = ReasonReact.reducerComponent(\"App\");\n\nmodule GetAllMessages = [%graphql {|\n  {\n    messages {\n      id\n      text\n      author {\n        id\n        name\n      }\n    }\n  }\n|}];\n\nlet styles =\n  StyleSheet.create(\n    Style.{\n      \"explodeHeart\":\n        style([left(Pt(0.)), top(Pt(0.)), position(Absolute)]),\n    },\n  );\n\nlet make = _children => {\n  ...component,\n  didMount: _ => onAuthorized(twitchAuth => Js.log(clientIdGet(twitchAuth))),\n\n  initialState: () => [],\n\n  reducer: (action, state) =>\n    switch (action) {\n    | Click(clicked) =>\n      clicked ?\n        ReasonReact.Update([{clickedInWave: true}, ...state]) :\n        ReasonReact.NoUpdate\n    | Reset => ReasonReact.Update([])\n    },\n\n  render: self =>\n    <ReasonApollo.Provider client=Client.instance>\n      <View>\n        <HeartContainer>\n          <Heart filled=true style={styles##explodeHeart} />\n          <Heart filled=true style={styles##explodeHeart} />\n        </HeartContainer>\n        {self.state |> List.length >= 5 ?\n           <Wave onFinish={_event => self.send(Reset)} /> : ReasonReact.null}\n        <TriggerContainer onPress={_event => self.send(Click(true))} />\n        <Text style=tempCounterStyle>\n          {ReasonReact.string(string_of_int(self.state |> List.length))}\n        </Text>\n      </View>\n    </ReasonApollo.Provider>,\n};\n\nlet default = ReasonReact.wrapReasonForJs(~component, _ => make([||]));"}]}}
Read message 
{"jsonrpc":"2.0","id":159,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0169277191162ms
➡️ running bsc /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/lanceharper/Repositories/jerk-twitch/client/lib/bs/src/components/App' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src/graphql-types' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/components' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/private' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/graphql_ppx/ppx' -ppx ''\''/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/reactjs_jsx_ppx_2.exe'\''' -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/.lsp/App.ast with pwd /Users/lanceharper/Repositories/jerk-twitch/client
Sending response {"id": 159, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, HeartContainer, Pervasives, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 27, "character": 4}, "end": {"line": 27, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":160,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":29,"character":4},"end":{"line":29,"character":4}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00905990600586ms
Sending response {"id": 160, "jsonrpc": "2.0", "result": null}
Running diagnostics for file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re
type error here Read_schema.Schema_file_not_found
[1mFile "[1m", line 1[0m[0m:
[1;31mError[0m: Error while running external preprocessor
Command line: /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/graphql_ppx/ppx '/var/folders/y5/zmmdgynd3x30h9c84rwt93rr0000gn/T/camlppx274ef4' '/var/folders/y5/zmmdgynd3x30h9c84rwt93rr0000gn/T/camlppxe16c2f'

Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re", "diagnostics": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "message": "Read_schema.Schema_file_not_found\nFile \"\", line 1:\nError: Error while running external preprocessor\nCommand line: /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/graphql_ppx/ppx '/var/folders/y5/zmmdgynd3x30h9c84rwt93rr0000gn/T/camlppx274ef4' '/var/folders/y5/zmmdgynd3x30h9c84rwt93rr0000gn/T/camlppxe16c2f'", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","id":161,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0109672546387ms
Sending response {"id": 161, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, HeartContainer, Pervasives, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 27, "character": 4}, "end": {"line": 27, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":162,"method":"textDocument/formatting","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"options":{"tabSize":2,"insertSpaces":true}}}
[server] Got a method textDocument/formatting
[server] processing took 0.00882148742676ms
Sending response {"id": 162, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 73, "character": 0}}, "newText": "/* App is the actual entry point for the application. It matches on the route prop to determine which\n   sub-component to render */\nopen BsReactNative;\nopen Twitch;\n\ntype item = {clickedInWave: bool};\n\ntype state = list(item);\n\ntype clicked = bool;\n\ntype action =\n  | Click(clicked)\n  | Reset;\nlet tempCounterStyle = Style.(style([color(String(\"lightblue\"))]));\n\nlet component = ReasonReact.reducerComponent(\"App\");\n\nmodule GetAllMessages = [%graphql\n  {|\n  {\n    messages {\n      id\n      text\n      author {\n        id\n        name\n      }\n    }\n  }\n|}\n];\n\nlet styles =\n  StyleSheet.create(\n    Style.{\n      \"explodeHeart\":\n        style([left(Pt(0.)), top(Pt(0.)), position(Absolute)]),\n    },\n  );\n\nlet make = _children => {\n  ...component,\n  didMount: _ => onAuthorized(twitchAuth => Js.log(clientIdGet(twitchAuth))),\n\n  initialState: () => [],\n\n  reducer: (action, state) =>\n    switch (action) {\n    | Click(clicked) =>\n      clicked ?\n        ReasonReact.Update([{clickedInWave: true}, ...state]) :\n        ReasonReact.NoUpdate\n    | Reset => ReasonReact.Update([])\n    },\n\n  render: self =>\n    <ReasonApollo.Provider client=Client.instance>\n      <View>\n        <HeartContainer>\n          <Heart filled=true style={styles##explodeHeart} />\n          <Heart filled=true style={styles##explodeHeart} />\n        </HeartContainer>\n        {self.state |> List.length >= 5 ?\n           <Wave onFinish={_event => self.send(Reset)} /> : ReasonReact.null}\n        <TriggerContainer onPress={_event => self.send(Click(true))} />\n        <Text style=tempCounterStyle>\n          {ReasonReact.string(string_of_int(self.state |> List.length))}\n        </Text>\n      </View>\n    </ReasonApollo.Provider>,\n};\n\nlet default = ReasonReact.wrapReasonForJs(~component, _ => make([||]));"}]}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re","version":130},"contentChanges":[{"text":"/* App is the actual entry point for the application. It matches on the route prop to determine which\n   sub-component to render */\nopen BsReactNative;\nopen Twitch;\n\ntype item = {clickedInWave: bool};\n\ntype state = list(item);\n\ntype clicked = bool;\n\ntype action =\n  | Click(clicked)\n  | Reset;\nlet tempCounterStyle = Style.(style([color(String(\"lightblue\"))]));\n\nlet component = ReasonReact.reducerComponent(\"App\");\n\nmodule GetAllMessages = [%graphql\n  {|\n  {\n    messages {\n      id\n      text\n      author {\n        id\n        name\n      }\n    }\n  }\n|}\n];\n\nlet styles =\n  StyleSheet.create(\n    Style.{\n      \"explodeHeart\":\n        style([left(Pt(0.)), top(Pt(0.)), position(Absolute)]),\n    },\n  );\n\nlet make = _children => {\n  ...component,\n  didMount: _ => onAuthorized(twitchAuth => Js.log(clientIdGet(twitchAuth))),\n\n  initialState: () => [],\n\n  reducer: (action, state) =>\n    switch (action) {\n    | Click(clicked) =>\n      clicked ?\n        ReasonReact.Update([{clickedInWave: true}, ...state]) :\n        ReasonReact.NoUpdate\n    | Reset => ReasonReact.Update([])\n    },\n\n  render: self =>\n    <ReasonApollo.Provider client=Client.instance>\n      <View>\n        <HeartContainer>\n          <Heart filled=true style={styles##explodeHeart} />\n          <Heart filled=true style={styles##explodeHeart} />\n        </HeartContainer>\n        {self.state |> List.length >= 5 ?\n           <Wave onFinish={_event => self.send(Reset)} /> : ReasonReact.null}\n        <TriggerContainer onPress={_event => self.send(Click(true))} />\n        <Text style=tempCounterStyle>\n          {ReasonReact.string(string_of_int(self.state |> List.length))}\n        </Text>\n      </View>\n    </ReasonApollo.Provider>,\n};\n\nlet default = ReasonReact.wrapReasonForJs(~component, _ => make([||]));"}]}}
Read message 
{"jsonrpc":"2.0","id":163,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0159740447998ms
➡️ running bsc /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/lanceharper/Repositories/jerk-twitch/client/lib/bs/src/components/App' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src/graphql-types' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/components' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/private' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/graphql_ppx/ppx' -ppx ''\''/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/reactjs_jsx_ppx_2.exe'\''' -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/.lsp/App.ast with pwd /Users/lanceharper/Repositories/jerk-twitch/client
Sending response {"id": 163, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, HeartContainer, Pervasives, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 27, "character": 4}, "end": {"line": 27, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":164,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":31,"character":2},"end":{"line":31,"character":2}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00810623168945ms
Sending response {"id": 164, "jsonrpc": "2.0", "result": null}
Running diagnostics for file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re
type error here Read_schema.Schema_file_not_found
[1mFile "[1m", line 1[0m[0m:
[1;31mError[0m: Error while running external preprocessor
Command line: /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/graphql_ppx/ppx '/var/folders/y5/zmmdgynd3x30h9c84rwt93rr0000gn/T/camlppx0f4ee9' '/var/folders/y5/zmmdgynd3x30h9c84rwt93rr0000gn/T/camlppx153bd9'

Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re", "diagnostics": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "message": "Read_schema.Schema_file_not_found\nFile \"\", line 1:\nError: Error while running external preprocessor\nCommand line: /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/graphql_ppx/ppx '/var/folders/y5/zmmdgynd3x30h9c84rwt93rr0000gn/T/camlppx0f4ee9' '/var/folders/y5/zmmdgynd3x30h9c84rwt93rr0000gn/T/camlppx153bd9'", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","id":165,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0178813934326ms
Sending response {"id": 165, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, HeartContainer, Pervasives, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 27, "character": 4}, "end": {"line": 27, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":166,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":31,"character":2},"end":{"line":31,"character":2}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.014066696167ms
Sending response {"id": 166, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":167,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":20,"character":3}}}
[server] Got a method textDocument/hover
[server] processing took 0.0169277191162ms
Sending response {"id": 167, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":168,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":20,"character":3}}}
[server] Got a method textDocument/hover
[server] processing took 0.0169277191162ms
Sending response {"id": 168, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":169,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":25,"character":2}}}
[server] Got a method textDocument/hover
[server] processing took 0.0159740447998ms
Sending response {"id": 169, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":170,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":19,"character":2}}}
[server] Got a method textDocument/hover
[server] processing took 0.0169277191162ms
Sending response {"id": 170, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":171,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":19,"character":2},"end":{"line":19,"character":2}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0131130218506ms
Sending response {"id": 171, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":172,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":25,"character":8}}}
[server] Got a method textDocument/hover
[server] processing took 0.0128746032715ms
Sending response {"id": 172, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":173,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/Client.re"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0109672546387ms
Sending response {"id": 173, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":174,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/Client.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0169277191162ms
Sending response {"id": 174, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ApolloInMemoryCache, ReasonApollo, ApolloLinks, Js", "command": ""}}, {"range": {"start": {"line": 0, "character": 5}, "end": {"line": 0, "character": 24}}, "command": {"title": "1 uses. values: {createInMemoryCache}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":175,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/Client.re"},"range":{"start":{"line":22,"character":56},"end":{"line":22,"character":56}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0219345092773ms
Sending response {"id": 175, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":176,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/Client.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0150203704834ms
Sending response {"id": 176, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ApolloInMemoryCache, ReasonApollo, ApolloLinks, Js", "command": ""}}, {"range": {"start": {"line": 0, "character": 5}, "end": {"line": 0, "character": 24}}, "command": {"title": "1 uses. values: {createInMemoryCache}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":177,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"message":"Read_schema.Schema_file_not_found\nFile \"\", line 1:\nError: Error while running external preprocessor\nCommand line: /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/graphql_ppx/ppx '/var/folders/y5/zmmdgynd3x30h9c84rwt93rr0000gn/T/camlppx0f4ee9' '/var/folders/y5/zmmdgynd3x30h9c84rwt93rr0000gn/T/camlppx153bd9'","severity":1}]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0100135803223ms
Sending response {"id": 177, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":178,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0100135803223ms
Sending response {"id": 178, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, HeartContainer, Pervasives, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 27, "character": 4}, "end": {"line": 27, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":179,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":19,"character":2},"end":{"line":19,"character":2}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0109672546387ms
Sending response {"id": 179, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":180,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0100135803223ms
Sending response {"id": 180, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, HeartContainer, Pervasives, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 27, "character": 4}, "end": {"line": 27, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":181,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":22,"character":4}}}
[server] Got a method textDocument/hover
[server] processing took 0.014066696167ms
Sending response {"id": 181, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":182,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":21,"character":5}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.014066696167ms
Sending response {"id": 182, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re","version":131},"contentChanges":[{"text":"/* App is the actual entry point for the application. It matches on the route prop to determine which\n   sub-component to render */\nopen BsReactNative;\nopen Twitch;\n\ntype item = {clickedInWave: bool};\n\ntype state = list(item);\n\ntype clicked = bool;\n\ntype action =\n  | Click(clicked)\n  | Reset;\nlet tempCounterStyle = Style.(style([color(String(\"lightblue\"))]));\n\nlet component = ReasonReact.reducerComponent(\"App\");\n\nmodule GetAllMessages = [%graphql\n  {|\n  {\n    g {\n      id\n      text\n      author {\n        id\n        name\n      }\n    }\n  }\n|}\n];\n\nlet styles =\n  StyleSheet.create(\n    Style.{\n      \"explodeHeart\":\n        style([left(Pt(0.)), top(Pt(0.)), position(Absolute)]),\n    },\n  );\n\nlet make = _children => {\n  ...component,\n  didMount: _ => onAuthorized(twitchAuth => Js.log(clientIdGet(twitchAuth))),\n\n  initialState: () => [],\n\n  reducer: (action, state) =>\n    switch (action) {\n    | Click(clicked) =>\n      clicked ?\n        ReasonReact.Update([{clickedInWave: true}, ...state]) :\n        ReasonReact.NoUpdate\n    | Reset => ReasonReact.Update([])\n    },\n\n  render: self =>\n    <ReasonApollo.Provider client=Client.instance>\n      <View>\n        <HeartContainer>\n          <Heart filled=true style={styles##explodeHeart} />\n          <Heart filled=true style={styles##explodeHeart} />\n        </HeartContainer>\n        {self.state |> List.length >= 5 ?\n           <Wave onFinish={_event => self.send(Reset)} /> : ReasonReact.null}\n        <TriggerContainer onPress={_event => self.send(Click(true))} />\n        <Text style=tempCounterStyle>\n          {ReasonReact.string(string_of_int(self.state |> List.length))}\n        </Text>\n      </View>\n    </ReasonApollo.Provider>,\n};\n\nlet default = ReasonReact.wrapReasonForJs(~component, _ => make([||]));"}]}}
Read message 
{"jsonrpc":"2.0","id":183,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":21,"character":5},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.00715255737305ms
Opens folkz > 2 BsReactNative ... Twitch
Package opens Pervasives
Package opens Pervasives
FINDING /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/pervasives.cmti src /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/pervasives.mli
resolving open BsReactNative.place holder
Not local
FINDING /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/BsReactNative.cmt src 
resolving open Twitch.place holder
Not local
FINDING /Users/lanceharper/Repositories/jerk-twitch/client/lib/bs/src/components/App/Twitch.cmt src /Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/Twitch.re
Opens nows 3 file:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/pervasives.mli file:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/BsReactNative.cmt file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/Twitch.re
---------------- LOCAL VAL
 - Completing in file:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/pervasives.mli
 -- not capitalized
 - Completing in file:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/BsReactNative.cmt
 -- not capitalized
 - Completing in file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/Twitch.re
 -- not capitalized
Sending response {"id": 183, "jsonrpc": "2.0", "result": []}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re","version":133},"contentChanges":[{"text":"/* App is the actual entry point for the application. It matches on the route prop to determine which\n   sub-component to render */\nopen BsReactNative;\nopen Twitch;\n\ntype item = {clickedInWave: bool};\n\ntype state = list(item);\n\ntype clicked = bool;\n\ntype action =\n  | Click(clicked)\n  | Reset;\nlet tempCounterStyle = Style.(style([color(String(\"lightblue\"))]));\n\nlet component = ReasonReact.reducerComponent(\"App\");\n\nmodule GetAllMessages = [%graphql\n  {|\n  {\n    get {\n      id\n      text\n      author {\n        id\n        name\n      }\n    }\n  }\n|}\n];\n\nlet styles =\n  StyleSheet.create(\n    Style.{\n      \"explodeHeart\":\n        style([left(Pt(0.)), top(Pt(0.)), position(Absolute)]),\n    },\n  );\n\nlet make = _children => {\n  ...component,\n  didMount: _ => onAuthorized(twitchAuth => Js.log(clientIdGet(twitchAuth))),\n\n  initialState: () => [],\n\n  reducer: (action, state) =>\n    switch (action) {\n    | Click(clicked) =>\n      clicked ?\n        ReasonReact.Update([{clickedInWave: true}, ...state]) :\n        ReasonReact.NoUpdate\n    | Reset => ReasonReact.Update([])\n    },\n\n  render: self =>\n    <ReasonApollo.Provider client=Client.instance>\n      <View>\n        <HeartContainer>\n          <Heart filled=true style={styles##explodeHeart} />\n          <Heart filled=true style={styles##explodeHeart} />\n        </HeartContainer>\n        {self.state |> List.length >= 5 ?\n           <Wave onFinish={_event => self.send(Reset)} /> : ReasonReact.null}\n        <TriggerContainer onPress={_event => self.send(Click(true))} />\n        <Text style=tempCounterStyle>\n          {ReasonReact.string(string_of_int(self.state |> List.length))}\n        </Text>\n      </View>\n    </ReasonApollo.Provider>,\n};\n\nlet default = ReasonReact.wrapReasonForJs(~component, _ => make([||]));"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re","version":134},"contentChanges":[{"text":"/* App is the actual entry point for the application. It matches on the route prop to determine which\n   sub-component to render */\nopen BsReactNative;\nopen Twitch;\n\ntype item = {clickedInWave: bool};\n\ntype state = list(item);\n\ntype clicked = bool;\n\ntype action =\n  | Click(clicked)\n  | Reset;\nlet tempCounterStyle = Style.(style([color(String(\"lightblue\"))]));\n\nlet component = ReasonReact.reducerComponent(\"App\");\n\nmodule GetAllMessages = [%graphql\n  {|\n  {\n    getJ {\n      id\n      text\n      author {\n        id\n        name\n      }\n    }\n  }\n|}\n];\n\nlet styles =\n  StyleSheet.create(\n    Style.{\n      \"explodeHeart\":\n        style([left(Pt(0.)), top(Pt(0.)), position(Absolute)]),\n    },\n  );\n\nlet make = _children => {\n  ...component,\n  didMount: _ => onAuthorized(twitchAuth => Js.log(clientIdGet(twitchAuth))),\n\n  initialState: () => [],\n\n  reducer: (action, state) =>\n    switch (action) {\n    | Click(clicked) =>\n      clicked ?\n        ReasonReact.Update([{clickedInWave: true}, ...state]) :\n        ReasonReact.NoUpdate\n    | Reset => ReasonReact.Update([])\n    },\n\n  render: self =>\n    <ReasonApollo.Provider client=Client.instance>\n      <View>\n        <HeartContainer>\n          <Heart filled=true style={styles##explodeHeart} />\n          <Heart filled=true style={styles##explodeHeart} />\n        </HeartContainer>\n        {self.state |> List.length >= 5 ?\n           <Wave onFinish={_event => self.send(Reset)} /> : ReasonReact.null}\n        <TriggerContainer onPress={_event => self.send(Click(true))} />\n        <Text style=tempCounterStyle>\n          {ReasonReact.string(string_of_int(self.state |> List.length))}\n        </Text>\n      </View>\n    </ReasonApollo.Provider>,\n};\n\nlet default = ReasonReact.wrapReasonForJs(~component, _ => make([||]));"}]}}
Read message 
{"jsonrpc":"2.0","id":184,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0171661376953ms
➡️ running bsc /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/lanceharper/Repositories/jerk-twitch/client/lib/bs/src/components/App' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src/graphql-types' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/components' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/private' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/graphql_ppx/ppx' -ppx ''\''/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/reactjs_jsx_ppx_2.exe'\''' -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/.lsp/App.ast with pwd /Users/lanceharper/Repositories/jerk-twitch/client
Sending response {"id": 184, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, HeartContainer, Pervasives, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 27, "character": 4}, "end": {"line": 27, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":185,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":21,"character":8},"end":{"line":21,"character":8}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00905990600586ms
Sending response {"id": 185, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":186,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0100135803223ms
Sending response {"id": 186, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, HeartContainer, Pervasives, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 27, "character": 4}, "end": {"line": 27, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re","version":135},"contentChanges":[{"text":"/* App is the actual entry point for the application. It matches on the route prop to determine which\n   sub-component to render */\nopen BsReactNative;\nopen Twitch;\n\ntype item = {clickedInWave: bool};\n\ntype state = list(item);\n\ntype clicked = bool;\n\ntype action =\n  | Click(clicked)\n  | Reset;\nlet tempCounterStyle = Style.(style([color(String(\"lightblue\"))]));\n\nlet component = ReasonReact.reducerComponent(\"App\");\n\nmodule GetAllMessages = [%graphql\n  {|\n  {\n    getJe {\n      id\n      text\n      author {\n        id\n        name\n      }\n    }\n  }\n|}\n];\n\nlet styles =\n  StyleSheet.create(\n    Style.{\n      \"explodeHeart\":\n        style([left(Pt(0.)), top(Pt(0.)), position(Absolute)]),\n    },\n  );\n\nlet make = _children => {\n  ...component,\n  didMount: _ => onAuthorized(twitchAuth => Js.log(clientIdGet(twitchAuth))),\n\n  initialState: () => [],\n\n  reducer: (action, state) =>\n    switch (action) {\n    | Click(clicked) =>\n      clicked ?\n        ReasonReact.Update([{clickedInWave: true}, ...state]) :\n        ReasonReact.NoUpdate\n    | Reset => ReasonReact.Update([])\n    },\n\n  render: self =>\n    <ReasonApollo.Provider client=Client.instance>\n      <View>\n        <HeartContainer>\n          <Heart filled=true style={styles##explodeHeart} />\n          <Heart filled=true style={styles##explodeHeart} />\n        </HeartContainer>\n        {self.state |> List.length >= 5 ?\n           <Wave onFinish={_event => self.send(Reset)} /> : ReasonReact.null}\n        <TriggerContainer onPress={_event => self.send(Click(true))} />\n        <Text style=tempCounterStyle>\n          {ReasonReact.string(string_of_int(self.state |> List.length))}\n        </Text>\n      </View>\n    </ReasonApollo.Provider>,\n};\n\nlet default = ReasonReact.wrapReasonForJs(~component, _ => make([||]));"}]}}
Read message 
{"jsonrpc":"2.0","id":187,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":21,"character":9},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.0169277191162ms
Opens folkz > 2 BsReactNative ... Twitch
Package opens Pervasives
Package opens Pervasives
FINDING /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/pervasives.cmti src /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/pervasives.mli
resolving open BsReactNative.place holder
Not local
FINDING /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/BsReactNative.cmt src 
resolving open Twitch.place holder
Not local
FINDING /Users/lanceharper/Repositories/jerk-twitch/client/lib/bs/src/components/App/Twitch.cmt src /Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/Twitch.re
Opens nows 3 file:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/pervasives.mli file:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/BsReactNative.cmt file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/Twitch.re
---------------- LOCAL VAL
 - Completing in file:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/pervasives.mli
 -- not capitalized
 - Completing in file:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/BsReactNative.cmt
 -- not capitalized
 - Completing in file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/Twitch.re
 -- not capitalized
Sending response {"id": 187, "jsonrpc": "2.0", "result": []}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re","version":137},"contentChanges":[{"text":"/* App is the actual entry point for the application. It matches on the route prop to determine which\n   sub-component to render */\nopen BsReactNative;\nopen Twitch;\n\ntype item = {clickedInWave: bool};\n\ntype state = list(item);\n\ntype clicked = bool;\n\ntype action =\n  | Click(clicked)\n  | Reset;\nlet tempCounterStyle = Style.(style([color(String(\"lightblue\"))]));\n\nlet component = ReasonReact.reducerComponent(\"App\");\n\nmodule GetAllMessages = [%graphql\n  {|\n  {\n    getJerk {\n      id\n      text\n      author {\n        id\n        name\n      }\n    }\n  }\n|}\n];\n\nlet styles =\n  StyleSheet.create(\n    Style.{\n      \"explodeHeart\":\n        style([left(Pt(0.)), top(Pt(0.)), position(Absolute)]),\n    },\n  );\n\nlet make = _children => {\n  ...component,\n  didMount: _ => onAuthorized(twitchAuth => Js.log(clientIdGet(twitchAuth))),\n\n  initialState: () => [],\n\n  reducer: (action, state) =>\n    switch (action) {\n    | Click(clicked) =>\n      clicked ?\n        ReasonReact.Update([{clickedInWave: true}, ...state]) :\n        ReasonReact.NoUpdate\n    | Reset => ReasonReact.Update([])\n    },\n\n  render: self =>\n    <ReasonApollo.Provider client=Client.instance>\n      <View>\n        <HeartContainer>\n          <Heart filled=true style={styles##explodeHeart} />\n          <Heart filled=true style={styles##explodeHeart} />\n        </HeartContainer>\n        {self.state |> List.length >= 5 ?\n           <Wave onFinish={_event => self.send(Reset)} /> : ReasonReact.null}\n        <TriggerContainer onPress={_event => self.send(Click(true))} />\n        <Text style=tempCounterStyle>\n          {ReasonReact.string(string_of_int(self.state |> List.length))}\n        </Text>\n      </View>\n    </ReasonApollo.Provider>,\n};\n\nlet default = ReasonReact.wrapReasonForJs(~component, _ => make([||]));"}]}}
Read message 
{"jsonrpc":"2.0","id":188,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0131130218506ms
➡️ running bsc /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/lanceharper/Repositories/jerk-twitch/client/lib/bs/src/components/App' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src/graphql-types' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/components' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/private' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/graphql_ppx/ppx' -ppx ''\''/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/reactjs_jsx_ppx_2.exe'\''' -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/.lsp/App.ast with pwd /Users/lanceharper/Repositories/jerk-twitch/client
Sending response {"id": 188, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, HeartContainer, Pervasives, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 27, "character": 4}, "end": {"line": 27, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":189,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":21,"character":11},"end":{"line":21,"character":11}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00786781311035ms
Sending response {"id": 189, "jsonrpc": "2.0", "result": null}
Running diagnostics for file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re
type error here [1mFile "[1m", line 22, characters 4-5[0m[0m:
[1;31mError[0m: Unknown field on type Query
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re", "diagnostics": [{"range": {"start": {"line": 21, "character": 4}, "end": {"line": 21, "character": 5}}, "message": "Error: Unknown field on type Query", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","id":190,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0169277191162ms
Sending response {"id": 190, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, HeartContainer, Pervasives, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 27, "character": 4}, "end": {"line": 27, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":191,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":22,"character":5}}}
[server] Got a method textDocument/hover
[server] processing took 0.014066696167ms
FINDING /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/js_dict.cmti src /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/js_dict.mli
Trying for declared Value 1021 in file file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re
Sending response {"id": 191, "jsonrpc": "2.0", "result": {"range": {"start": {"line": 20, "character": 2}, "end": {"line": 29, "character": 3}}, "contents": {"kind": "markdown", "value": "```\nJs_dict.t(Js.Json.t)\n```\n\n```\ntype t('a)\n```\n\n<root>/client/src/components/App/App.re"}}}
Read message 
{"jsonrpc":"2.0","id":192,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":21,"character":11},"end":{"line":21,"character":11}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0228881835938ms
Sending response {"id": 192, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re","version":138},"contentChanges":[{"text":"/* App is the actual entry point for the application. It matches on the route prop to determine which\n   sub-component to render */\nopen BsReactNative;\nopen Twitch;\n\ntype item = {clickedInWave: bool};\n\ntype state = list(item);\n\ntype clicked = bool;\n\ntype action =\n  | Click(clicked)\n  | Reset;\nlet tempCounterStyle = Style.(style([color(String(\"lightblue\"))]));\n\nlet component = ReasonReact.reducerComponent(\"App\");\n\nmodule GetAllMessages = [%graphql\n  {|\n  {\n    getJerks {\n      id\n      text\n      author {\n        id\n        name\n      }\n    }\n  }\n|}\n];\n\nlet styles =\n  StyleSheet.create(\n    Style.{\n      \"explodeHeart\":\n        style([left(Pt(0.)), top(Pt(0.)), position(Absolute)]),\n    },\n  );\n\nlet make = _children => {\n  ...component,\n  didMount: _ => onAuthorized(twitchAuth => Js.log(clientIdGet(twitchAuth))),\n\n  initialState: () => [],\n\n  reducer: (action, state) =>\n    switch (action) {\n    | Click(clicked) =>\n      clicked ?\n        ReasonReact.Update([{clickedInWave: true}, ...state]) :\n        ReasonReact.NoUpdate\n    | Reset => ReasonReact.Update([])\n    },\n\n  render: self =>\n    <ReasonApollo.Provider client=Client.instance>\n      <View>\n        <HeartContainer>\n          <Heart filled=true style={styles##explodeHeart} />\n          <Heart filled=true style={styles##explodeHeart} />\n        </HeartContainer>\n        {self.state |> List.length >= 5 ?\n           <Wave onFinish={_event => self.send(Reset)} /> : ReasonReact.null}\n        <TriggerContainer onPress={_event => self.send(Click(true))} />\n        <Text style=tempCounterStyle>\n          {ReasonReact.string(string_of_int(self.state |> List.length))}\n        </Text>\n      </View>\n    </ReasonApollo.Provider>,\n};\n\nlet default = ReasonReact.wrapReasonForJs(~component, _ => make([||]));"}]}}
Read message 
{"jsonrpc":"2.0","id":193,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0159740447998ms
➡️ running bsc /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/lanceharper/Repositories/jerk-twitch/client/lib/bs/src/components/App' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src/graphql-types' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/components' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/private' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/graphql_ppx/ppx' -ppx ''\''/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/reactjs_jsx_ppx_2.exe'\''' -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/.lsp/App.ast with pwd /Users/lanceharper/Repositories/jerk-twitch/client
Sending response {"id": 193, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, HeartContainer, Pervasives, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 27, "character": 4}, "end": {"line": 27, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":194,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":21,"character":12},"end":{"line":21,"character":12}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00905990600586ms
Sending response {"id": 194, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":195,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0138282775879ms
Sending response {"id": 195, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, HeartContainer, Pervasives, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 27, "character": 4}, "end": {"line": 27, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":196,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":22,"character":7}}}
[server] Got a method textDocument/hover
[server] processing took 0.0100135803223ms
FINDING /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/js_dict.cmti src /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/js_dict.mli
Trying for declared Value 1021 in file file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re
Sending response {"id": 196, "jsonrpc": "2.0", "result": {"range": {"start": {"line": 20, "character": 2}, "end": {"line": 29, "character": 3}}, "contents": {"kind": "markdown", "value": "```\nJs_dict.t(Js.Json.t)\n```\n\n```\ntype t('a)\n```\n\n<root>/client/src/components/App/App.re"}}}
Running diagnostics for file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re
type error here Schema.Invalid_type("Type String doesn't have any fields")
[1mFile "[1m", line 1[0m[0m:
[1;31mError[0m: Error while running external preprocessor
Command line: /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/graphql_ppx/ppx '/var/folders/y5/zmmdgynd3x30h9c84rwt93rr0000gn/T/camlppx9a728e' '/var/folders/y5/zmmdgynd3x30h9c84rwt93rr0000gn/T/camlppxf53edd'

Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re", "diagnostics": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "message": "Schema.Invalid_type(\"Type String doesn't have any fields\")\nFile \"\", line 1:\nError: Error while running external preprocessor\nCommand line: /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/graphql_ppx/ppx '/var/folders/y5/zmmdgynd3x30h9c84rwt93rr0000gn/T/camlppx9a728e' '/var/folders/y5/zmmdgynd3x30h9c84rwt93rr0000gn/T/camlppxf53edd'", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","id":197,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":22,"character":5},"end":{"line":26,"character":12}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0138282775879ms
Sending response {"id": 197, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":198,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":22,"character":5},"end":{"line":27,"character":7}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0178813934326ms
Sending response {"id": 198, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re","version":139},"contentChanges":[{"text":"/* App is the actual entry point for the application. It matches on the route prop to determine which\n   sub-component to render */\nopen BsReactNative;\nopen Twitch;\n\ntype item = {clickedInWave: bool};\n\ntype state = list(item);\n\ntype clicked = bool;\n\ntype action =\n  | Click(clicked)\n  | Reset;\nlet tempCounterStyle = Style.(style([color(String(\"lightblue\"))]));\n\nlet component = ReasonReact.reducerComponent(\"App\");\n\nmodule GetAllMessages = [%graphql\n  {|\n  {\n    getJerks {\n     \n    }\n  }\n|}\n];\n\nlet styles =\n  StyleSheet.create(\n    Style.{\n      \"explodeHeart\":\n        style([left(Pt(0.)), top(Pt(0.)), position(Absolute)]),\n    },\n  );\n\nlet make = _children => {\n  ...component,\n  didMount: _ => onAuthorized(twitchAuth => Js.log(clientIdGet(twitchAuth))),\n\n  initialState: () => [],\n\n  reducer: (action, state) =>\n    switch (action) {\n    | Click(clicked) =>\n      clicked ?\n        ReasonReact.Update([{clickedInWave: true}, ...state]) :\n        ReasonReact.NoUpdate\n    | Reset => ReasonReact.Update([])\n    },\n\n  render: self =>\n    <ReasonApollo.Provider client=Client.instance>\n      <View>\n        <HeartContainer>\n          <Heart filled=true style={styles##explodeHeart} />\n          <Heart filled=true style={styles##explodeHeart} />\n        </HeartContainer>\n        {self.state |> List.length >= 5 ?\n           <Wave onFinish={_event => self.send(Reset)} /> : ReasonReact.null}\n        <TriggerContainer onPress={_event => self.send(Click(true))} />\n        <Text style=tempCounterStyle>\n          {ReasonReact.string(string_of_int(self.state |> List.length))}\n        </Text>\n      </View>\n    </ReasonApollo.Provider>,\n};\n\nlet default = ReasonReact.wrapReasonForJs(~component, _ => make([||]));"}]}}
Read message 
{"jsonrpc":"2.0","id":199,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0209808349609ms
➡️ running bsc /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/lanceharper/Repositories/jerk-twitch/client/lib/bs/src/components/App' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src/graphql-types' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/components' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/private' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/graphql_ppx/ppx' -ppx ''\''/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/reactjs_jsx_ppx_2.exe'\''' -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/.lsp/App.ast with pwd /Users/lanceharper/Repositories/jerk-twitch/client
Sending response {"id": 199, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, HeartContainer, Pervasives, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 27, "character": 4}, "end": {"line": 27, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":200,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.00786781311035ms
Sending response {"id": 200, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, HeartContainer, Pervasives, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 27, "character": 4}, "end": {"line": 27, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Running diagnostics for file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re
type error here [1mFile "[1m", line 24, characters 4-5[0m[0m:
[1;31mError[0m: Unexpected token }
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re", "diagnostics": [{"range": {"start": {"line": 23, "character": 4}, "end": {"line": 23, "character": 5}}, "message": "Error: Unexpected token }", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re","version":139},"contentChanges":[{"text":"/* App is the actual entry point for the application. It matches on the route prop to determine which\n   sub-component to render */\nopen BsReactNative;\nopen Twitch;\n\ntype item = {clickedInWave: bool};\n\ntype state = list(item);\n\ntype clicked = bool;\n\ntype action =\n  | Click(clicked)\n  | Reset;\nlet tempCounterStyle = Style.(style([color(String(\"lightblue\"))]));\n\nlet component = ReasonReact.reducerComponent(\"App\");\n\nmodule GetAllMessages = [%graphql\n  {|\n  {\n    getJerks {\n     \n    }\n  }\n|}\n];\n\nlet styles =\n  StyleSheet.create(\n    Style.{\n      \"explodeHeart\":\n        style([left(Pt(0.)), top(Pt(0.)), position(Absolute)]),\n    },\n  );\n\nlet make = _children => {\n  ...component,\n  didMount: _ => onAuthorized(twitchAuth => Js.log(clientIdGet(twitchAuth))),\n\n  initialState: () => [],\n\n  reducer: (action, state) =>\n    switch (action) {\n    | Click(clicked) =>\n      clicked ?\n        ReasonReact.Update([{clickedInWave: true}, ...state]) :\n        ReasonReact.NoUpdate\n    | Reset => ReasonReact.Update([])\n    },\n\n  render: self =>\n    <ReasonApollo.Provider client=Client.instance>\n      <View>\n        <HeartContainer>\n          <Heart filled=true style={styles##explodeHeart} />\n          <Heart filled=true style={styles##explodeHeart} />\n        </HeartContainer>\n        {self.state |> List.length >= 5 ?\n           <Wave onFinish={_event => self.send(Reset)} /> : ReasonReact.null}\n        <TriggerContainer onPress={_event => self.send(Click(true))} />\n        <Text style=tempCounterStyle>\n          {ReasonReact.string(string_of_int(self.state |> List.length))}\n        </Text>\n      </View>\n    </ReasonApollo.Provider>,\n};\n\nlet default = ReasonReact.wrapReasonForJs(~component, _ => make([||]));"}]}}
Read message 
{"jsonrpc":"2.0","id":201,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0119209289551ms
➡️ running bsc /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/lanceharper/Repositories/jerk-twitch/client/lib/bs/src/components/App' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src/graphql-types' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/components' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/private' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/graphql_ppx/ppx' -ppx ''\''/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/reactjs_jsx_ppx_2.exe'\''' -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/.lsp/App.ast with pwd /Users/lanceharper/Repositories/jerk-twitch/client
Sending response {"id": 201, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":202,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.00905990600586ms
Sending response {"id": 202, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, HeartContainer, Pervasives, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 27, "character": 4}, "end": {"line": 27, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":203,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.00786781311035ms
Sending response {"id": 203, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, HeartContainer, Pervasives, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 27, "character": 4}, "end": {"line": 27, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Running diagnostics for file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re
type error here [1mFile "[1m", line 24, characters 4-5[0m[0m:
[1;31mError[0m: Unexpected token }
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re", "diagnostics": [{"range": {"start": {"line": 23, "character": 4}, "end": {"line": 23, "character": 5}}, "message": "Error: Unexpected token }", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","id":204,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":21,"character":13},"end":{"line":22,"character":5}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0171661376953ms
Sending response {"id": 204, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":205,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":21,"character":13},"end":{"line":23,"character":5}},"context":{"diagnostics":[{"range":{"start":{"line":23,"character":4},"end":{"line":23,"character":5}},"message":"Error: Unexpected token }","severity":1}]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0190734863281ms
Sending response {"id": 205, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":206,"method":"textDocument/formatting","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"options":{"tabSize":2,"insertSpaces":true}}}
[server] Got a method textDocument/formatting
[server] processing took 0.0169277191162ms
Sending response {"id": 206, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 70, "character": 0}}, "newText": "/* App is the actual entry point for the application. It matches on the route prop to determine which\n   sub-component to render */\nopen BsReactNative;\nopen Twitch;\n\ntype item = {clickedInWave: bool};\n\ntype state = list(item);\n\ntype clicked = bool;\n\ntype action =\n  | Click(clicked)\n  | Reset;\nlet tempCounterStyle = Style.(style([color(String(\"lightblue\"))]));\n\nlet component = ReasonReact.reducerComponent(\"App\");\n\nmodule GetAllMessages = [%graphql {|\n  {\n    getJerks {\n\n    }\n  }\n|}];\n\nlet styles =\n  StyleSheet.create(\n    Style.{\n      \"explodeHeart\":\n        style([left(Pt(0.)), top(Pt(0.)), position(Absolute)]),\n    },\n  );\n\nlet make = _children => {\n  ...component,\n  didMount: _ => onAuthorized(twitchAuth => Js.log(clientIdGet(twitchAuth))),\n\n  initialState: () => [],\n\n  reducer: (action, state) =>\n    switch (action) {\n    | Click(clicked) =>\n      clicked ?\n        ReasonReact.Update([{clickedInWave: true}, ...state]) :\n        ReasonReact.NoUpdate\n    | Reset => ReasonReact.Update([])\n    },\n\n  render: self =>\n    <ReasonApollo.Provider client=Client.instance>\n      <View>\n        <HeartContainer>\n          <Heart filled=true style={styles##explodeHeart} />\n          <Heart filled=true style={styles##explodeHeart} />\n        </HeartContainer>\n        {self.state |> List.length >= 5 ?\n           <Wave onFinish={_event => self.send(Reset)} /> : ReasonReact.null}\n        <TriggerContainer onPress={_event => self.send(Click(true))} />\n        <Text style=tempCounterStyle>\n          {ReasonReact.string(string_of_int(self.state |> List.length))}\n        </Text>\n      </View>\n    </ReasonApollo.Provider>,\n};\n\nlet default = ReasonReact.wrapReasonForJs(~component, _ => make([||]));"}]}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re","version":140},"contentChanges":[{"text":"/* App is the actual entry point for the application. It matches on the route prop to determine which\n   sub-component to render */\nopen BsReactNative;\nopen Twitch;\n\ntype item = {clickedInWave: bool};\n\ntype state = list(item);\n\ntype clicked = bool;\n\ntype action =\n  | Click(clicked)\n  | Reset;\nlet tempCounterStyle = Style.(style([color(String(\"lightblue\"))]));\n\nlet component = ReasonReact.reducerComponent(\"App\");\n\nmodule GetAllMessages = [%graphql {|\n  {\n    getJerks {\n\n    }\n  }\n|}];\n\nlet styles =\n  StyleSheet.create(\n    Style.{\n      \"explodeHeart\":\n        style([left(Pt(0.)), top(Pt(0.)), position(Absolute)]),\n    },\n  );\n\nlet make = _children => {\n  ...component,\n  didMount: _ => onAuthorized(twitchAuth => Js.log(clientIdGet(twitchAuth))),\n\n  initialState: () => [],\n\n  reducer: (action, state) =>\n    switch (action) {\n    | Click(clicked) =>\n      clicked ?\n        ReasonReact.Update([{clickedInWave: true}, ...state]) :\n        ReasonReact.NoUpdate\n    | Reset => ReasonReact.Update([])\n    },\n\n  render: self =>\n    <ReasonApollo.Provider client=Client.instance>\n      <View>\n        <HeartContainer>\n          <Heart filled=true style={styles##explodeHeart} />\n          <Heart filled=true style={styles##explodeHeart} />\n        </HeartContainer>\n        {self.state |> List.length >= 5 ?\n           <Wave onFinish={_event => self.send(Reset)} /> : ReasonReact.null}\n        <TriggerContainer onPress={_event => self.send(Click(true))} />\n        <Text style=tempCounterStyle>\n          {ReasonReact.string(string_of_int(self.state |> List.length))}\n        </Text>\n      </View>\n    </ReasonApollo.Provider>,\n};\n\nlet default = ReasonReact.wrapReasonForJs(~component, _ => make([||]));"}]}}
Read message 
{"jsonrpc":"2.0","id":207,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0169277191162ms
➡️ running bsc /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/lanceharper/Repositories/jerk-twitch/client/lib/bs/src/components/App' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src/graphql-types' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/components' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/private' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/graphql_ppx/ppx' -ppx ''\''/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/reactjs_jsx_ppx_2.exe'\''' -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/.lsp/App.ast with pwd /Users/lanceharper/Repositories/jerk-twitch/client
Sending response {"id": 207, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, HeartContainer, Pervasives, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 27, "character": 4}, "end": {"line": 27, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":208,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":20,"character":13},"end":{"line":22,"character":5}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00691413879395ms
Sending response {"id": 208, "jsonrpc": "2.0", "result": null}
Running diagnostics for file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re
type error here [1mFile "[1m", line 23, characters 4-5[0m[0m:
[1;31mError[0m: Unexpected token }
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re", "diagnostics": [{"range": {"start": {"line": 22, "character": 4}, "end": {"line": 22, "character": 5}}, "message": "Error: Unexpected token }", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","id":209,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0128746032715ms
Sending response {"id": 209, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, HeartContainer, Pervasives, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 27, "character": 4}, "end": {"line": 27, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":210,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":20,"character":13},"end":{"line":22,"character":5}},"context":{"diagnostics":[{"range":{"start":{"line":22,"character":4},"end":{"line":22,"character":5}},"message":"Error: Unexpected token }","severity":1}]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00786781311035ms
Sending response {"id": 210, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":211,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":22,"character":5},"end":{"line":22,"character":5}},"context":{"diagnostics":[{"range":{"start":{"line":22,"character":4},"end":{"line":22,"character":5}},"message":"Error: Unexpected token }","severity":1}]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0131130218506ms
Sending response {"id": 211, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re","version":141},"contentChanges":[{"text":"/* App is the actual entry point for the application. It matches on the route prop to determine which\n   sub-component to render */\nopen BsReactNative;\nopen Twitch;\n\ntype item = {clickedInWave: bool};\n\ntype state = list(item);\n\ntype clicked = bool;\n\ntype action =\n  | Click(clicked)\n  | Reset;\nlet tempCounterStyle = Style.(style([color(String(\"lightblue\"))]));\n\nlet component = ReasonReact.reducerComponent(\"App\");\n\nmodule GetAllMessages = [%graphql {|\n  {\n    getJerks {\n\n    \n  }\n|}];\n\nlet styles =\n  StyleSheet.create(\n    Style.{\n      \"explodeHeart\":\n        style([left(Pt(0.)), top(Pt(0.)), position(Absolute)]),\n    },\n  );\n\nlet make = _children => {\n  ...component,\n  didMount: _ => onAuthorized(twitchAuth => Js.log(clientIdGet(twitchAuth))),\n\n  initialState: () => [],\n\n  reducer: (action, state) =>\n    switch (action) {\n    | Click(clicked) =>\n      clicked ?\n        ReasonReact.Update([{clickedInWave: true}, ...state]) :\n        ReasonReact.NoUpdate\n    | Reset => ReasonReact.Update([])\n    },\n\n  render: self =>\n    <ReasonApollo.Provider client=Client.instance>\n      <View>\n        <HeartContainer>\n          <Heart filled=true style={styles##explodeHeart} />\n          <Heart filled=true style={styles##explodeHeart} />\n        </HeartContainer>\n        {self.state |> List.length >= 5 ?\n           <Wave onFinish={_event => self.send(Reset)} /> : ReasonReact.null}\n        <TriggerContainer onPress={_event => self.send(Click(true))} />\n        <Text style=tempCounterStyle>\n          {ReasonReact.string(string_of_int(self.state |> List.length))}\n        </Text>\n      </View>\n    </ReasonApollo.Provider>,\n};\n\nlet default = ReasonReact.wrapReasonForJs(~component, _ => make([||]));"}]}}
Read message 
{"jsonrpc":"2.0","id":212,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.00810623168945ms
➡️ running bsc /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/lanceharper/Repositories/jerk-twitch/client/lib/bs/src/components/App' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src/graphql-types' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/components' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/private' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/graphql_ppx/ppx' -ppx ''\''/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/reactjs_jsx_ppx_2.exe'\''' -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/.lsp/App.ast with pwd /Users/lanceharper/Repositories/jerk-twitch/client
Sending response {"id": 212, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, HeartContainer, Pervasives, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 27, "character": 4}, "end": {"line": 27, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":213,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.00500679016113ms
Sending response {"id": 213, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, HeartContainer, Pervasives, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 27, "character": 4}, "end": {"line": 27, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Running diagnostics for file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re
type error here [1mFile "[1m", line 24, characters 2-3[0m[0m:
[1;31mError[0m: Unexpected token }
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re", "diagnostics": [{"range": {"start": {"line": 23, "character": 2}, "end": {"line": 23, "character": 3}}, "message": "Error: Unexpected token }", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","id":214,"method":"textDocument/formatting","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"options":{"tabSize":2,"insertSpaces":true}}}
[server] Got a method textDocument/formatting
[server] processing took 0.0100135803223ms
Sending response {"id": 214, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 68, "character": 0}}, "newText": "/* App is the actual entry point for the application. It matches on the route prop to determine which\n   sub-component to render */\nopen BsReactNative;\nopen Twitch;\n\ntype item = {clickedInWave: bool};\n\ntype state = list(item);\n\ntype clicked = bool;\n\ntype action =\n  | Click(clicked)\n  | Reset;\nlet tempCounterStyle = Style.(style([color(String(\"lightblue\"))]));\n\nlet component = ReasonReact.reducerComponent(\"App\");\n\nmodule GetAllMessages = [%graphql {|\n  {\n    getJerks {\n\n\n  }\n|}];\n\nlet styles =\n  StyleSheet.create(\n    Style.{\n      \"explodeHeart\":\n        style([left(Pt(0.)), top(Pt(0.)), position(Absolute)]),\n    },\n  );\n\nlet make = _children => {\n  ...component,\n  didMount: _ => onAuthorized(twitchAuth => Js.log(clientIdGet(twitchAuth))),\n\n  initialState: () => [],\n\n  reducer: (action, state) =>\n    switch (action) {\n    | Click(clicked) =>\n      clicked ?\n        ReasonReact.Update([{clickedInWave: true}, ...state]) :\n        ReasonReact.NoUpdate\n    | Reset => ReasonReact.Update([])\n    },\n\n  render: self =>\n    <ReasonApollo.Provider client=Client.instance>\n      <View>\n        <HeartContainer>\n          <Heart filled=true style={styles##explodeHeart} />\n          <Heart filled=true style={styles##explodeHeart} />\n        </HeartContainer>\n        {self.state |> List.length >= 5 ?\n           <Wave onFinish={_event => self.send(Reset)} /> : ReasonReact.null}\n        <TriggerContainer onPress={_event => self.send(Click(true))} />\n        <Text style=tempCounterStyle>\n          {ReasonReact.string(string_of_int(self.state |> List.length))}\n        </Text>\n      </View>\n    </ReasonApollo.Provider>,\n};\n\nlet default = ReasonReact.wrapReasonForJs(~component, _ => make([||]));"}]}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re","version":142},"contentChanges":[{"text":"/* App is the actual entry point for the application. It matches on the route prop to determine which\n   sub-component to render */\nopen BsReactNative;\nopen Twitch;\n\ntype item = {clickedInWave: bool};\n\ntype state = list(item);\n\ntype clicked = bool;\n\ntype action =\n  | Click(clicked)\n  | Reset;\nlet tempCounterStyle = Style.(style([color(String(\"lightblue\"))]));\n\nlet component = ReasonReact.reducerComponent(\"App\");\n\nmodule GetAllMessages = [%graphql {|\n  {\n    getJerks {\n\n\n  }\n|}];\n\nlet styles =\n  StyleSheet.create(\n    Style.{\n      \"explodeHeart\":\n        style([left(Pt(0.)), top(Pt(0.)), position(Absolute)]),\n    },\n  );\n\nlet make = _children => {\n  ...component,\n  didMount: _ => onAuthorized(twitchAuth => Js.log(clientIdGet(twitchAuth))),\n\n  initialState: () => [],\n\n  reducer: (action, state) =>\n    switch (action) {\n    | Click(clicked) =>\n      clicked ?\n        ReasonReact.Update([{clickedInWave: true}, ...state]) :\n        ReasonReact.NoUpdate\n    | Reset => ReasonReact.Update([])\n    },\n\n  render: self =>\n    <ReasonApollo.Provider client=Client.instance>\n      <View>\n        <HeartContainer>\n          <Heart filled=true style={styles##explodeHeart} />\n          <Heart filled=true style={styles##explodeHeart} />\n        </HeartContainer>\n        {self.state |> List.length >= 5 ?\n           <Wave onFinish={_event => self.send(Reset)} /> : ReasonReact.null}\n        <TriggerContainer onPress={_event => self.send(Click(true))} />\n        <Text style=tempCounterStyle>\n          {ReasonReact.string(string_of_int(self.state |> List.length))}\n        </Text>\n      </View>\n    </ReasonApollo.Provider>,\n};\n\nlet default = ReasonReact.wrapReasonForJs(~component, _ => make([||]));"}]}}
Read message 
{"jsonrpc":"2.0","id":215,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0119209289551ms
➡️ running bsc /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/lanceharper/Repositories/jerk-twitch/client/lib/bs/src/components/App' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src/graphql-types' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/components' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/private' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/graphql_ppx/ppx' -ppx ''\''/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/reactjs_jsx_ppx_2.exe'\''' -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/.lsp/App.ast with pwd /Users/lanceharper/Repositories/jerk-twitch/client
Sending response {"id": 215, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, HeartContainer, Pervasives, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 27, "character": 4}, "end": {"line": 27, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":216,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.00596046447754ms
Sending response {"id": 216, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, HeartContainer, Pervasives, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 27, "character": 4}, "end": {"line": 27, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Running diagnostics for file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re
type error here [1mFile "[1m", line 24, characters 2-3[0m[0m:
[1;31mError[0m: Unexpected token }
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re", "diagnostics": [{"range": {"start": {"line": 23, "character": 2}, "end": {"line": 23, "character": 3}}, "message": "Error: Unexpected token }", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","id":217,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":20,"character":14},"end":{"line":20,"character":14}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0109672546387ms
Sending response {"id": 217, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re","version":143},"contentChanges":[{"text":"/* App is the actual entry point for the application. It matches on the route prop to determine which\n   sub-component to render */\nopen BsReactNative;\nopen Twitch;\n\ntype item = {clickedInWave: bool};\n\ntype state = list(item);\n\ntype clicked = bool;\n\ntype action =\n  | Click(clicked)\n  | Reset;\nlet tempCounterStyle = Style.(style([color(String(\"lightblue\"))]));\n\nlet component = ReasonReact.reducerComponent(\"App\");\n\nmodule GetAllMessages = [%graphql {|\n  {\n    getJerks \n\n\n  }\n|}];\n\nlet styles =\n  StyleSheet.create(\n    Style.{\n      \"explodeHeart\":\n        style([left(Pt(0.)), top(Pt(0.)), position(Absolute)]),\n    },\n  );\n\nlet make = _children => {\n  ...component,\n  didMount: _ => onAuthorized(twitchAuth => Js.log(clientIdGet(twitchAuth))),\n\n  initialState: () => [],\n\n  reducer: (action, state) =>\n    switch (action) {\n    | Click(clicked) =>\n      clicked ?\n        ReasonReact.Update([{clickedInWave: true}, ...state]) :\n        ReasonReact.NoUpdate\n    | Reset => ReasonReact.Update([])\n    },\n\n  render: self =>\n    <ReasonApollo.Provider client=Client.instance>\n      <View>\n        <HeartContainer>\n          <Heart filled=true style={styles##explodeHeart} />\n          <Heart filled=true style={styles##explodeHeart} />\n        </HeartContainer>\n        {self.state |> List.length >= 5 ?\n           <Wave onFinish={_event => self.send(Reset)} /> : ReasonReact.null}\n        <TriggerContainer onPress={_event => self.send(Click(true))} />\n        <Text style=tempCounterStyle>\n          {ReasonReact.string(string_of_int(self.state |> List.length))}\n        </Text>\n      </View>\n    </ReasonApollo.Provider>,\n};\n\nlet default = ReasonReact.wrapReasonForJs(~component, _ => make([||]));"}]}}
Read message 
{"jsonrpc":"2.0","id":218,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0131130218506ms
➡️ running bsc /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/lanceharper/Repositories/jerk-twitch/client/lib/bs/src/components/App' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src/graphql-types' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/components' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/private' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/graphql_ppx/ppx' -ppx ''\''/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/reactjs_jsx_ppx_2.exe'\''' -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/.lsp/App.ast with pwd /Users/lanceharper/Repositories/jerk-twitch/client
<< Replacing lastDefinitions for file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re
Sending response {"id": 218, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, Pervasives, HeartContainer, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 28, "character": 4}, "end": {"line": 28, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":219,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.00500679016113ms
Sending response {"id": 219, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, Pervasives, HeartContainer, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 28, "character": 4}, "end": {"line": 28, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}]}
Running diagnostics for file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re", "diagnostics": []}}
Read message 
{"jsonrpc":"2.0","id":220,"method":"textDocument/formatting","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"options":{"tabSize":2,"insertSpaces":true}}}
[server] Got a method textDocument/formatting
[server] processing took 0.0121593475342ms
Sending response {"id": 220, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 68, "character": 0}}, "newText": "/* App is the actual entry point for the application. It matches on the route prop to determine which\n   sub-component to render */\nopen BsReactNative;\nopen Twitch;\n\ntype item = {clickedInWave: bool};\n\ntype state = list(item);\n\ntype clicked = bool;\n\ntype action =\n  | Click(clicked)\n  | Reset;\nlet tempCounterStyle = Style.(style([color(String(\"lightblue\"))]));\n\nlet component = ReasonReact.reducerComponent(\"App\");\n\nmodule GetAllMessages = [%graphql {|\n  {\n    getJerks\n\n\n  }\n|}];\n\nlet styles =\n  StyleSheet.create(\n    Style.{\n      \"explodeHeart\":\n        style([left(Pt(0.)), top(Pt(0.)), position(Absolute)]),\n    },\n  );\n\nlet make = _children => {\n  ...component,\n  didMount: _ => onAuthorized(twitchAuth => Js.log(clientIdGet(twitchAuth))),\n\n  initialState: () => [],\n\n  reducer: (action, state) =>\n    switch (action) {\n    | Click(clicked) =>\n      clicked ?\n        ReasonReact.Update([{clickedInWave: true}, ...state]) :\n        ReasonReact.NoUpdate\n    | Reset => ReasonReact.Update([])\n    },\n\n  render: self =>\n    <ReasonApollo.Provider client=Client.instance>\n      <View>\n        <HeartContainer>\n          <Heart filled=true style={styles##explodeHeart} />\n          <Heart filled=true style={styles##explodeHeart} />\n        </HeartContainer>\n        {self.state |> List.length >= 5 ?\n           <Wave onFinish={_event => self.send(Reset)} /> : ReasonReact.null}\n        <TriggerContainer onPress={_event => self.send(Click(true))} />\n        <Text style=tempCounterStyle>\n          {ReasonReact.string(string_of_int(self.state |> List.length))}\n        </Text>\n      </View>\n    </ReasonApollo.Provider>,\n};\n\nlet default = ReasonReact.wrapReasonForJs(~component, _ => make([||]));"}]}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":220}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re","version":143},"contentChanges":[{"text":"/* App is the actual entry point for the application. It matches on the route prop to determine which\n   sub-component to render */\nopen BsReactNative;\nopen Twitch;\n\ntype item = {clickedInWave: bool};\n\ntype state = list(item);\n\ntype clicked = bool;\n\ntype action =\n  | Click(clicked)\n  | Reset;\nlet tempCounterStyle = Style.(style([color(String(\"lightblue\"))]));\n\nlet component = ReasonReact.reducerComponent(\"App\");\n\nmodule GetAllMessages = [%graphql {|\n  {\n    getJerks \n\n\n  }\n|}];\n\nlet styles =\n  StyleSheet.create(\n    Style.{\n      \"explodeHeart\":\n        style([left(Pt(0.)), top(Pt(0.)), position(Absolute)]),\n    },\n  );\n\nlet make = _children => {\n  ...component,\n  didMount: _ => onAuthorized(twitchAuth => Js.log(clientIdGet(twitchAuth))),\n\n  initialState: () => [],\n\n  reducer: (action, state) =>\n    switch (action) {\n    | Click(clicked) =>\n      clicked ?\n        ReasonReact.Update([{clickedInWave: true}, ...state]) :\n        ReasonReact.NoUpdate\n    | Reset => ReasonReact.Update([])\n    },\n\n  render: self =>\n    <ReasonApollo.Provider client=Client.instance>\n      <View>\n        <HeartContainer>\n          <Heart filled=true style={styles##explodeHeart} />\n          <Heart filled=true style={styles##explodeHeart} />\n        </HeartContainer>\n        {self.state |> List.length >= 5 ?\n           <Wave onFinish={_event => self.send(Reset)} /> : ReasonReact.null}\n        <TriggerContainer onPress={_event => self.send(Click(true))} />\n        <Text style=tempCounterStyle>\n          {ReasonReact.string(string_of_int(self.state |> List.length))}\n        </Text>\n      </View>\n    </ReasonApollo.Provider>,\n};\n\nlet default = ReasonReact.wrapReasonForJs(~component, _ => make([||]));"}]}}
Running diagnostics for file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re
➡️ running bsc /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/lanceharper/Repositories/jerk-twitch/client/lib/bs/src/components/App' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src/graphql-types' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/components' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/private' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/graphql_ppx/ppx' -ppx ''\''/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/reactjs_jsx_ppx_2.exe'\''' -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/.lsp/App.ast with pwd /Users/lanceharper/Repositories/jerk-twitch/client
<< Replacing lastDefinitions for file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re", "diagnostics": []}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re","version":145},"contentChanges":[{"text":"/* App is the actual entry point for the application. It matches on the route prop to determine which\n   sub-component to render */\nopen BsReactNative;\nopen Twitch;\n\ntype item = {clickedInWave: bool};\n\ntype state = list(item);\n\ntype clicked = bool;\n\ntype action =\n  | Click(clicked)\n  | Reset;\nlet tempCounterStyle = Style.(style([color(String(\"lightblue\"))]));\n\nlet component = ReasonReact.reducerComponent(\"App\");\n\nmodule GetAllMessages = [%graphql {|\n  {\n    getJerks \n  }\n|}];\n\nlet styles =\n  StyleSheet.create(\n    Style.{\n      \"explodeHeart\":\n        style([left(Pt(0.)), top(Pt(0.)), position(Absolute)]),\n    },\n  );\n\nlet make = _children => {\n  ...component,\n  didMount: _ => onAuthorized(twitchAuth => Js.log(clientIdGet(twitchAuth))),\n\n  initialState: () => [],\n\n  reducer: (action, state) =>\n    switch (action) {\n    | Click(clicked) =>\n      clicked ?\n        ReasonReact.Update([{clickedInWave: true}, ...state]) :\n        ReasonReact.NoUpdate\n    | Reset => ReasonReact.Update([])\n    },\n\n  render: self =>\n    <ReasonApollo.Provider client=Client.instance>\n      <View>\n        <HeartContainer>\n          <Heart filled=true style={styles##explodeHeart} />\n          <Heart filled=true style={styles##explodeHeart} />\n        </HeartContainer>\n        {self.state |> List.length >= 5 ?\n           <Wave onFinish={_event => self.send(Reset)} /> : ReasonReact.null}\n        <TriggerContainer onPress={_event => self.send(Click(true))} />\n        <Text style=tempCounterStyle>\n          {ReasonReact.string(string_of_int(self.state |> List.length))}\n        </Text>\n      </View>\n    </ReasonApollo.Provider>,\n};\n\nlet default = ReasonReact.wrapReasonForJs(~component, _ => make([||]));"}]}}
Read message 
{"jsonrpc":"2.0","id":221,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0109672546387ms
➡️ running bsc /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/lanceharper/Repositories/jerk-twitch/client/lib/bs/src/components/App' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src/graphql-types' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/components' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/private' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/graphql_ppx/ppx' -ppx ''\''/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/reactjs_jsx_ppx_2.exe'\''' -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/.lsp/App.ast with pwd /Users/lanceharper/Repositories/jerk-twitch/client
<< Replacing lastDefinitions for file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re
Sending response {"id": 221, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, Pervasives, HeartContainer, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 26, "character": 4}, "end": {"line": 26, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":222,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.00500679016113ms
Sending response {"id": 222, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, Pervasives, HeartContainer, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 26, "character": 4}, "end": {"line": 26, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}]}
Running diagnostics for file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re", "diagnostics": []}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re","version":146},"contentChanges":[{"text":"/* App is the actual entry point for the application. It matches on the route prop to determine which\n   sub-component to render */\nopen BsReactNative;\nopen Twitch;\n\ntype item = {clickedInWave: bool};\n\ntype state = list(item);\n\ntype clicked = bool;\n\ntype action =\n  | Click(clicked)\n  | Reset;\nlet tempCounterStyle = Style.(style([color(String(\"lightblue\"))]));\n\nlet component = ReasonReact.reducerComponent(\"App\");\n\nmodule GetAllMessages = [%graphql {|\n  {\n    getJerks\n  }\n|}];\n\nlet styles =\n  StyleSheet.create(\n    Style.{\n      \"explodeHeart\":\n        style([left(Pt(0.)), top(Pt(0.)), position(Absolute)]),\n    },\n  );\n\nlet make = _children => {\n  ...component,\n  didMount: _ => onAuthorized(twitchAuth => Js.log(clientIdGet(twitchAuth))),\n\n  initialState: () => [],\n\n  reducer: (action, state) =>\n    switch (action) {\n    | Click(clicked) =>\n      clicked ?\n        ReasonReact.Update([{clickedInWave: true}, ...state]) :\n        ReasonReact.NoUpdate\n    | Reset => ReasonReact.Update([])\n    },\n\n  render: self =>\n    <ReasonApollo.Provider client=Client.instance>\n      <View>\n        <HeartContainer>\n          <Heart filled=true style={styles##explodeHeart} />\n          <Heart filled=true style={styles##explodeHeart} />\n        </HeartContainer>\n        {self.state |> List.length >= 5 ?\n           <Wave onFinish={_event => self.send(Reset)} /> : ReasonReact.null}\n        <TriggerContainer onPress={_event => self.send(Click(true))} />\n        <Text style=tempCounterStyle>\n          {ReasonReact.string(string_of_int(self.state |> List.length))}\n        </Text>\n      </View>\n    </ReasonApollo.Provider>,\n};\n\nlet default = ReasonReact.wrapReasonForJs(~component, _ => make([||]));"}]}}
Read message 
{"jsonrpc":"2.0","id":223,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0109672546387ms
➡️ running bsc /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/lanceharper/Repositories/jerk-twitch/client/lib/bs/src/components/App' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src/graphql-types' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/components' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/private' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/graphql_ppx/ppx' -ppx ''\''/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/reactjs_jsx_ppx_2.exe'\''' -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/.lsp/App.ast with pwd /Users/lanceharper/Repositories/jerk-twitch/client
<< Replacing lastDefinitions for file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re
Sending response {"id": 223, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, Pervasives, HeartContainer, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 26, "character": 4}, "end": {"line": 26, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":224,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":20,"character":12},"end":{"line":20,"character":12}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00500679016113ms
Sending response {"id": 224, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":225,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.00905990600586ms
Sending response {"id": 225, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, Pervasives, HeartContainer, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 26, "character": 4}, "end": {"line": 26, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":226,"method":"textDocument/formatting","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"options":{"tabSize":2,"insertSpaces":true}}}
[server] Got a method textDocument/formatting
[server] processing took 0.0119209289551ms
Sending response {"id": 226, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re","version":146},"contentChanges":[{"text":"/* App is the actual entry point for the application. It matches on the route prop to determine which\n   sub-component to render */\nopen BsReactNative;\nopen Twitch;\n\ntype item = {clickedInWave: bool};\n\ntype state = list(item);\n\ntype clicked = bool;\n\ntype action =\n  | Click(clicked)\n  | Reset;\nlet tempCounterStyle = Style.(style([color(String(\"lightblue\"))]));\n\nlet component = ReasonReact.reducerComponent(\"App\");\n\nmodule GetAllMessages = [%graphql {|\n  {\n    getJerks\n  }\n|}];\n\nlet styles =\n  StyleSheet.create(\n    Style.{\n      \"explodeHeart\":\n        style([left(Pt(0.)), top(Pt(0.)), position(Absolute)]),\n    },\n  );\n\nlet make = _children => {\n  ...component,\n  didMount: _ => onAuthorized(twitchAuth => Js.log(clientIdGet(twitchAuth))),\n\n  initialState: () => [],\n\n  reducer: (action, state) =>\n    switch (action) {\n    | Click(clicked) =>\n      clicked ?\n        ReasonReact.Update([{clickedInWave: true}, ...state]) :\n        ReasonReact.NoUpdate\n    | Reset => ReasonReact.Update([])\n    },\n\n  render: self =>\n    <ReasonApollo.Provider client=Client.instance>\n      <View>\n        <HeartContainer>\n          <Heart filled=true style={styles##explodeHeart} />\n          <Heart filled=true style={styles##explodeHeart} />\n        </HeartContainer>\n        {self.state |> List.length >= 5 ?\n           <Wave onFinish={_event => self.send(Reset)} /> : ReasonReact.null}\n        <TriggerContainer onPress={_event => self.send(Click(true))} />\n        <Text style=tempCounterStyle>\n          {ReasonReact.string(string_of_int(self.state |> List.length))}\n        </Text>\n      </View>\n    </ReasonApollo.Provider>,\n};\n\nlet default = ReasonReact.wrapReasonForJs(~component, _ => make([||]));"}]}}
Running diagnostics for file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re
➡️ running bsc /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/lanceharper/Repositories/jerk-twitch/client/lib/bs/src/components/App' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src/graphql-types' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/components' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/private' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/graphql_ppx/ppx' -ppx ''\''/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/reactjs_jsx_ppx_2.exe'\''' -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/.lsp/App.ast with pwd /Users/lanceharper/Repositories/jerk-twitch/client
<< Replacing lastDefinitions for file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re", "diagnostics": []}}
Read message 
{"jsonrpc":"2.0","id":227,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0309944152832ms
Sending response {"id": 227, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":228,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0360012054443ms
Sending response {"id": 228, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, Pervasives, HeartContainer, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 26, "character": 4}, "end": {"line": 26, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":229,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":20,"character":12},"end":{"line":20,"character":12}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0169277191162ms
Sending response {"id": 229, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":230,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0121593475342ms
Sending response {"id": 230, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, Pervasives, HeartContainer, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 26, "character": 4}, "end": {"line": 26, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":231,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":22,"character":4},"end":{"line":22,"character":4}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0169277191162ms
Sending response {"id": 231, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re","version":148},"contentChanges":[{"text":"/* App is the actual entry point for the application. It matches on the route prop to determine which\n   sub-component to render */\nopen BsReactNative;\nopen Twitch;\n\ntype item = {clickedInWave: bool};\n\ntype state = list(item);\n\ntype clicked = bool;\n\ntype action =\n  | Click(clicked)\n  | Reset;\nlet tempCounterStyle = Style.(style([color(String(\"lightblue\"))]));\n\nlet component = ReasonReact.reducerComponent(\"App\");\n\nmodule GetAllMessages = [%graphql {|\n  {\n    getJerks\n  }\n|}];\n\n\n\nlet styles =\n  StyleSheet.create(\n    Style.{\n      \"explodeHeart\":\n        style([left(Pt(0.)), top(Pt(0.)), position(Absolute)]),\n    },\n  );\n\nlet make = _children => {\n  ...component,\n  didMount: _ => onAuthorized(twitchAuth => Js.log(clientIdGet(twitchAuth))),\n\n  initialState: () => [],\n\n  reducer: (action, state) =>\n    switch (action) {\n    | Click(clicked) =>\n      clicked ?\n        ReasonReact.Update([{clickedInWave: true}, ...state]) :\n        ReasonReact.NoUpdate\n    | Reset => ReasonReact.Update([])\n    },\n\n  render: self =>\n    <ReasonApollo.Provider client=Client.instance>\n      <View>\n        <HeartContainer>\n          <Heart filled=true style={styles##explodeHeart} />\n          <Heart filled=true style={styles##explodeHeart} />\n        </HeartContainer>\n        {self.state |> List.length >= 5 ?\n           <Wave onFinish={_event => self.send(Reset)} /> : ReasonReact.null}\n        <TriggerContainer onPress={_event => self.send(Click(true))} />\n        <Text style=tempCounterStyle>\n          {ReasonReact.string(string_of_int(self.state |> List.length))}\n        </Text>\n      </View>\n    </ReasonApollo.Provider>,\n};\n\nlet default = ReasonReact.wrapReasonForJs(~component, _ => make([||]));"}]}}
Read message 
{"jsonrpc":"2.0","id":232,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0159740447998ms
➡️ running bsc /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/lanceharper/Repositories/jerk-twitch/client/lib/bs/src/components/App' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src/graphql-types' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/components' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/private' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/graphql_ppx/ppx' -ppx ''\''/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/reactjs_jsx_ppx_2.exe'\''' -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/.lsp/App.ast with pwd /Users/lanceharper/Repositories/jerk-twitch/client
<< Replacing lastDefinitions for file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re
Sending response {"id": 232, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, Pervasives, HeartContainer, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 28, "character": 4}, "end": {"line": 28, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":233,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0100135803223ms
Sending response {"id": 233, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, Pervasives, HeartContainer, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 28, "character": 4}, "end": {"line": 28, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re","version":149},"contentChanges":[{"text":"/* App is the actual entry point for the application. It matches on the route prop to determine which\n   sub-component to render */\nopen BsReactNative;\nopen Twitch;\n\ntype item = {clickedInWave: bool};\n\ntype state = list(item);\n\ntype clicked = bool;\n\ntype action =\n  | Click(clicked)\n  | Reset;\nlet tempCounterStyle = Style.(style([color(String(\"lightblue\"))]));\n\nlet component = ReasonReact.reducerComponent(\"App\");\n\nmodule GetAllMessages = [%graphql {|\n  {\n    getJerks\n  }\n|}];\n\nmodule GetAllMessagesQuery = ReasonApollo.CreateQuery(GetAllMessages);\n\nlet styles =\n  StyleSheet.create(\n    Style.{\n      \"explodeHeart\":\n        style([left(Pt(0.)), top(Pt(0.)), position(Absolute)]),\n    },\n  );\n\nlet make = _children => {\n  ...component,\n  didMount: _ => onAuthorized(twitchAuth => Js.log(clientIdGet(twitchAuth))),\n\n  initialState: () => [],\n\n  reducer: (action, state) =>\n    switch (action) {\n    | Click(clicked) =>\n      clicked ?\n        ReasonReact.Update([{clickedInWave: true}, ...state]) :\n        ReasonReact.NoUpdate\n    | Reset => ReasonReact.Update([])\n    },\n\n  render: self =>\n    <ReasonApollo.Provider client=Client.instance>\n      <View>\n        <HeartContainer>\n          <Heart filled=true style={styles##explodeHeart} />\n          <Heart filled=true style={styles##explodeHeart} />\n        </HeartContainer>\n        {self.state |> List.length >= 5 ?\n           <Wave onFinish={_event => self.send(Reset)} /> : ReasonReact.null}\n        <TriggerContainer onPress={_event => self.send(Click(true))} />\n        <Text style=tempCounterStyle>\n          {ReasonReact.string(string_of_int(self.state |> List.length))}\n        </Text>\n      </View>\n    </ReasonApollo.Provider>,\n};\n\nlet default = ReasonReact.wrapReasonForJs(~component, _ => make([||]));"}]}}
Read message 
{"jsonrpc":"2.0","id":234,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0200271606445ms
➡️ running bsc /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/lanceharper/Repositories/jerk-twitch/client/lib/bs/src/components/App' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src/graphql-types' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/components' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/private' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/graphql_ppx/ppx' -ppx ''\''/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/reactjs_jsx_ppx_2.exe'\''' -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/.lsp/App.ast with pwd /Users/lanceharper/Repositories/jerk-twitch/client
Ident!! ReasonApollo.CreateQuery
Ident!! GetAllMessages
<< Replacing lastDefinitions for file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re
Sending response {"id": 234, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, Pervasives, HeartContainer, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 28, "character": 4}, "end": {"line": 28, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":235,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":24,"character":70},"end":{"line":24,"character":70}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00500679016113ms
Sending response {"id": 235, "jsonrpc": "2.0", "result": null}
Running diagnostics for file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re", "diagnostics": []}}
Read message 
{"jsonrpc":"2.0","id":236,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0169277191162ms
Sending response {"id": 236, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, Pervasives, HeartContainer, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 28, "character": 4}, "end": {"line": 28, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":237,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":18,"character":15}}}
[server] Got a method textDocument/hover
[server] processing took 0.0131130218506ms
Sending response {"id": 237, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":238,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":18,"character":13}}}
[server] Got a method textDocument/hover
[server] processing took 0.0250339508057ms
Sending response {"id": 238, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":239,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":18,"character":13}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.0109672546387ms
Got a loc for pos
Sending response {"id": 239, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 24, "character": 54}, "end": {"line": 24, "character": 68}}, "kind": 2}, {"range": {"start": {"line": 18, "character": 7}, "end": {"line": 18, "character": 21}}, "kind": 2}]}
Read message 
{"jsonrpc":"2.0","id":240,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":18,"character":13},"end":{"line":18,"character":21}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.014066696167ms
Sending response {"id": 240, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":241,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":18,"character":21},"end":{"line":18,"character":21}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.014066696167ms
Sending response {"id": 241, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":242,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":18,"character":21}}}
[server] Got a method textDocument/hover
[server] processing took 0.0278949737549ms
Sending response {"id": 242, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":243,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":18,"character":20}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.0109672546387ms
Got a loc for pos
Sending response {"id": 243, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 24, "character": 54}, "end": {"line": 24, "character": 68}}, "kind": 2}, {"range": {"start": {"line": 18, "character": 7}, "end": {"line": 18, "character": 21}}, "kind": 2}]}
Read message 
{"jsonrpc":"2.0","id":244,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":18,"character":13},"end":{"line":18,"character":21}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0119209289551ms
Sending response {"id": 244, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re","version":150},"contentChanges":[{"text":"/* App is the actual entry point for the application. It matches on the route prop to determine which\n   sub-component to render */\nopen BsReactNative;\nopen Twitch;\n\ntype item = {clickedInWave: bool};\n\ntype state = list(item);\n\ntype clicked = bool;\n\ntype action =\n  | Click(clicked)\n  | Reset;\nlet tempCounterStyle = Style.(style([color(String(\"lightblue\"))]));\n\nlet component = ReasonReact.reducerComponent(\"App\");\n\nmodule GetAllJ = [%graphql {|\n  {\n    getJerks\n  }\n|}];\n\nmodule GetAllMessagesQuery = ReasonApollo.CreateQuery(GetAllMessages);\n\nlet styles =\n  StyleSheet.create(\n    Style.{\n      \"explodeHeart\":\n        style([left(Pt(0.)), top(Pt(0.)), position(Absolute)]),\n    },\n  );\n\nlet make = _children => {\n  ...component,\n  didMount: _ => onAuthorized(twitchAuth => Js.log(clientIdGet(twitchAuth))),\n\n  initialState: () => [],\n\n  reducer: (action, state) =>\n    switch (action) {\n    | Click(clicked) =>\n      clicked ?\n        ReasonReact.Update([{clickedInWave: true}, ...state]) :\n        ReasonReact.NoUpdate\n    | Reset => ReasonReact.Update([])\n    },\n\n  render: self =>\n    <ReasonApollo.Provider client=Client.instance>\n      <View>\n        <HeartContainer>\n          <Heart filled=true style={styles##explodeHeart} />\n          <Heart filled=true style={styles##explodeHeart} />\n        </HeartContainer>\n        {self.state |> List.length >= 5 ?\n           <Wave onFinish={_event => self.send(Reset)} /> : ReasonReact.null}\n        <TriggerContainer onPress={_event => self.send(Click(true))} />\n        <Text style=tempCounterStyle>\n          {ReasonReact.string(string_of_int(self.state |> List.length))}\n        </Text>\n      </View>\n    </ReasonApollo.Provider>,\n};\n\nlet default = ReasonReact.wrapReasonForJs(~component, _ => make([||]));"}]}}
Read message 
{"jsonrpc":"2.0","id":245,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":18,"character":14},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.0109672546387ms
Opens folkz > 2 BsReactNative ... Twitch
Package opens Pervasives
Package opens Pervasives
FINDING /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/pervasives.cmti src /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/pervasives.mli
resolving open BsReactNative.place holder
Not local
FINDING /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/BsReactNative.cmt src 
resolving open Twitch.place holder
Not local
FINDING /Users/lanceharper/Repositories/jerk-twitch/client/lib/bs/src/components/App/Twitch.cmt src /Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/Twitch.re
Opens nows 3 file:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/pervasives.mli file:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/BsReactNative.cmt file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/Twitch.re
---------------- LOCAL VAL
 - Completing in file:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/pervasives.mli
 - Completing in file:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/BsReactNative.cmt
 - Completing in file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/Twitch.re
Sending response {"id": 245, "jsonrpc": "2.0", "result": []}
Read message 
{"jsonrpc":"2.0","id":246,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0171661376953ms
➡️ running bsc /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/lanceharper/Repositories/jerk-twitch/client/lib/bs/src/components/App' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src/graphql-types' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/components' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/private' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/graphql_ppx/ppx' -ppx ''\''/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/reactjs_jsx_ppx_2.exe'\''' -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/.lsp/App.ast with pwd /Users/lanceharper/Repositories/jerk-twitch/client
Sending response {"id": 246, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, Pervasives, HeartContainer, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 28, "character": 4}, "end": {"line": 28, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":247,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":18,"character":14},"end":{"line":18,"character":14}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.032901763916ms
Sending response {"id": 247, "jsonrpc": "2.0", "result": null}
Running diagnostics for file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re
type error here [1mFile "[1m", line 25, characters 54-68[0m[0m:
[1;31mError[0m: Unbound module GetAllMessages
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re", "diagnostics": [{"range": {"start": {"line": 24, "character": 54}, "end": {"line": 24, "character": 68}}, "message": "Error: Unbound module GetAllMessages", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","id":248,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0247955322266ms
Sending response {"id": 248, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, Pervasives, HeartContainer, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 28, "character": 4}, "end": {"line": 28, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re","version":151},"contentChanges":[{"text":"/* App is the actual entry point for the application. It matches on the route prop to determine which\n   sub-component to render */\nopen BsReactNative;\nopen Twitch;\n\ntype item = {clickedInWave: bool};\n\ntype state = list(item);\n\ntype clicked = bool;\n\ntype action =\n  | Click(clicked)\n  | Reset;\nlet tempCounterStyle = Style.(style([color(String(\"lightblue\"))]));\n\nlet component = ReasonReact.reducerComponent(\"App\");\n\nmodule GetAllJe = [%graphql {|\n  {\n    getJerks\n  }\n|}];\n\nmodule GetAllMessagesQuery = ReasonApollo.CreateQuery(GetAllMessages);\n\nlet styles =\n  StyleSheet.create(\n    Style.{\n      \"explodeHeart\":\n        style([left(Pt(0.)), top(Pt(0.)), position(Absolute)]),\n    },\n  );\n\nlet make = _children => {\n  ...component,\n  didMount: _ => onAuthorized(twitchAuth => Js.log(clientIdGet(twitchAuth))),\n\n  initialState: () => [],\n\n  reducer: (action, state) =>\n    switch (action) {\n    | Click(clicked) =>\n      clicked ?\n        ReasonReact.Update([{clickedInWave: true}, ...state]) :\n        ReasonReact.NoUpdate\n    | Reset => ReasonReact.Update([])\n    },\n\n  render: self =>\n    <ReasonApollo.Provider client=Client.instance>\n      <View>\n        <HeartContainer>\n          <Heart filled=true style={styles##explodeHeart} />\n          <Heart filled=true style={styles##explodeHeart} />\n        </HeartContainer>\n        {self.state |> List.length >= 5 ?\n           <Wave onFinish={_event => self.send(Reset)} /> : ReasonReact.null}\n        <TriggerContainer onPress={_event => self.send(Click(true))} />\n        <Text style=tempCounterStyle>\n          {ReasonReact.string(string_of_int(self.state |> List.length))}\n        </Text>\n      </View>\n    </ReasonApollo.Provider>,\n};\n\nlet default = ReasonReact.wrapReasonForJs(~component, _ => make([||]));"}]}}
Read message 
{"jsonrpc":"2.0","id":249,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":18,"character":15},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.0159740447998ms
Opens folkz > 2 BsReactNative ... Twitch
Package opens Pervasives
Package opens Pervasives
FINDING /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/pervasives.cmti src /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/pervasives.mli
resolving open BsReactNative.place holder
Not local
FINDING /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/BsReactNative.cmt src 
resolving open Twitch.place holder
Not local
FINDING /Users/lanceharper/Repositories/jerk-twitch/client/lib/bs/src/components/App/Twitch.cmt src /Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/Twitch.re
Opens nows 3 file:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/pervasives.mli file:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/BsReactNative.cmt file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/Twitch.re
---------------- LOCAL VAL
 - Completing in file:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/pervasives.mli
 - Completing in file:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/BsReactNative.cmt
 - Completing in file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/Twitch.re
Sending response {"id": 249, "jsonrpc": "2.0", "result": []}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re","version":154},"contentChanges":[{"text":"/* App is the actual entry point for the application. It matches on the route prop to determine which\n   sub-component to render */\nopen BsReactNative;\nopen Twitch;\n\ntype item = {clickedInWave: bool};\n\ntype state = list(item);\n\ntype clicked = bool;\n\ntype action =\n  | Click(clicked)\n  | Reset;\nlet tempCounterStyle = Style.(style([color(String(\"lightblue\"))]));\n\nlet component = ReasonReact.reducerComponent(\"App\");\n\nmodule GetAllJerks = [%graphql {|\n  {\n    getJerks\n  }\n|}];\n\nmodule GetAllMessagesQuery = ReasonApollo.CreateQuery(GetAllMessages);\n\nlet styles =\n  StyleSheet.create(\n    Style.{\n      \"explodeHeart\":\n        style([left(Pt(0.)), top(Pt(0.)), position(Absolute)]),\n    },\n  );\n\nlet make = _children => {\n  ...component,\n  didMount: _ => onAuthorized(twitchAuth => Js.log(clientIdGet(twitchAuth))),\n\n  initialState: () => [],\n\n  reducer: (action, state) =>\n    switch (action) {\n    | Click(clicked) =>\n      clicked ?\n        ReasonReact.Update([{clickedInWave: true}, ...state]) :\n        ReasonReact.NoUpdate\n    | Reset => ReasonReact.Update([])\n    },\n\n  render: self =>\n    <ReasonApollo.Provider client=Client.instance>\n      <View>\n        <HeartContainer>\n          <Heart filled=true style={styles##explodeHeart} />\n          <Heart filled=true style={styles##explodeHeart} />\n        </HeartContainer>\n        {self.state |> List.length >= 5 ?\n           <Wave onFinish={_event => self.send(Reset)} /> : ReasonReact.null}\n        <TriggerContainer onPress={_event => self.send(Click(true))} />\n        <Text style=tempCounterStyle>\n          {ReasonReact.string(string_of_int(self.state |> List.length))}\n        </Text>\n      </View>\n    </ReasonApollo.Provider>,\n};\n\nlet default = ReasonReact.wrapReasonForJs(~component, _ => make([||]));"}]}}
Read message 
{"jsonrpc":"2.0","id":250,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0150203704834ms
➡️ running bsc /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/lanceharper/Repositories/jerk-twitch/client/lib/bs/src/components/App' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src/graphql-types' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/components' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/private' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/graphql_ppx/ppx' -ppx ''\''/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/reactjs_jsx_ppx_2.exe'\''' -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/.lsp/App.ast with pwd /Users/lanceharper/Repositories/jerk-twitch/client
Sending response {"id": 250, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, Pervasives, HeartContainer, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 28, "character": 4}, "end": {"line": 28, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":251,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.00810623168945ms
Sending response {"id": 251, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, Pervasives, HeartContainer, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 28, "character": 4}, "end": {"line": 28, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":252,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":18,"character":18},"end":{"line":18,"character":18}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0181198120117ms
Sending response {"id": 252, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":253,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":18,"character":13}}}
[server] Got a method textDocument/hover
[server] processing took 0.0131130218506ms
Sending response {"id": 253, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":254,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":18,"character":13}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.0169277191162ms
Got a loc for pos
Sending response {"id": 254, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 18, "character": 7}, "end": {"line": 18, "character": 18}}, "kind": 2}]}
Running diagnostics for file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re
type error here [1mFile "[1m", line 25, characters 54-68[0m[0m:
[1;31mError[0m: Unbound module GetAllMessages
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re", "diagnostics": [{"range": {"start": {"line": 24, "character": 54}, "end": {"line": 24, "character": 68}}, "message": "Error: Unbound module GetAllMessages", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","id":255,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":18,"character":7},"end":{"line":18,"character":18}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0288486480713ms
Sending response {"id": 255, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":256,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":24,"character":15}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.0109672546387ms
Sending response {"id": 256, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re","version":155},"contentChanges":[{"text":"/* App is the actual entry point for the application. It matches on the route prop to determine which\n   sub-component to render */\nopen BsReactNative;\nopen Twitch;\n\ntype item = {clickedInWave: bool};\n\ntype state = list(item);\n\ntype clicked = bool;\n\ntype action =\n  | Click(clicked)\n  | Reset;\nlet tempCounterStyle = Style.(style([color(String(\"lightblue\"))]));\n\nlet component = ReasonReact.reducerComponent(\"App\");\n\nmodule GetAllJerks = [%graphql {|\n  {\n    getJerks\n  }\n|}];\n\nmodule GetAllJerks = ReasonApollo.CreateQuery(GetAllMessages);\n\nlet styles =\n  StyleSheet.create(\n    Style.{\n      \"explodeHeart\":\n        style([left(Pt(0.)), top(Pt(0.)), position(Absolute)]),\n    },\n  );\n\nlet make = _children => {\n  ...component,\n  didMount: _ => onAuthorized(twitchAuth => Js.log(clientIdGet(twitchAuth))),\n\n  initialState: () => [],\n\n  reducer: (action, state) =>\n    switch (action) {\n    | Click(clicked) =>\n      clicked ?\n        ReasonReact.Update([{clickedInWave: true}, ...state]) :\n        ReasonReact.NoUpdate\n    | Reset => ReasonReact.Update([])\n    },\n\n  render: self =>\n    <ReasonApollo.Provider client=Client.instance>\n      <View>\n        <HeartContainer>\n          <Heart filled=true style={styles##explodeHeart} />\n          <Heart filled=true style={styles##explodeHeart} />\n        </HeartContainer>\n        {self.state |> List.length >= 5 ?\n           <Wave onFinish={_event => self.send(Reset)} /> : ReasonReact.null}\n        <TriggerContainer onPress={_event => self.send(Click(true))} />\n        <Text style=tempCounterStyle>\n          {ReasonReact.string(string_of_int(self.state |> List.length))}\n        </Text>\n      </View>\n    </ReasonApollo.Provider>,\n};\n\nlet default = ReasonReact.wrapReasonForJs(~component, _ => make([||]));"}]}}
Read message 
{"jsonrpc":"2.0","id":257,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0171661376953ms
➡️ running bsc /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/lanceharper/Repositories/jerk-twitch/client/lib/bs/src/components/App' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src/graphql-types' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/components' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/private' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/graphql_ppx/ppx' -ppx ''\''/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/reactjs_jsx_ppx_2.exe'\''' -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/.lsp/App.ast with pwd /Users/lanceharper/Repositories/jerk-twitch/client
Sending response {"id": 257, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, Pervasives, HeartContainer, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 28, "character": 4}, "end": {"line": 28, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":258,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":24,"character":18},"end":{"line":24,"character":18}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00786781311035ms
Sending response {"id": 258, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":259,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0159740447998ms
Sending response {"id": 259, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, Pervasives, HeartContainer, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 28, "character": 4}, "end": {"line": 28, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":260,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":24,"character":53}}}
[server] Got a method textDocument/hover
[server] processing took 0.014066696167ms
Sending response {"id": 260, "jsonrpc": "2.0", "result": null}
Running diagnostics for file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re
type error here [1mFile "[1m", line 25, characters 7-18[0m[0m:
[1;31mError[0m: Multiple definition of the module name GetAllJerks.
       Names must be unique in a given structure or signature.
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re", "diagnostics": [{"range": {"start": {"line": 24, "character": 7}, "end": {"line": 24, "character": 18}}, "message": "Error: Multiple definition of the module name GetAllJerks.\n       Names must be unique in a given structure or signature.", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","id":261,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":24,"character":53}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.0221729278564ms
Sending response {"id": 261, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re","version":156},"contentChanges":[{"text":"/* App is the actual entry point for the application. It matches on the route prop to determine which\n   sub-component to render */\nopen BsReactNative;\nopen Twitch;\n\ntype item = {clickedInWave: bool};\n\ntype state = list(item);\n\ntype clicked = bool;\n\ntype action =\n  | Click(clicked)\n  | Reset;\nlet tempCounterStyle = Style.(style([color(String(\"lightblue\"))]));\n\nlet component = ReasonReact.reducerComponent(\"App\");\n\nmodule GetAllJerks = [%graphql {|\n  {\n    getJerks\n  }\n|}];\n\nmodule GetAllJerks = ReasonApollo.CreateQuery(GetAllJerks);\n\nlet styles =\n  StyleSheet.create(\n    Style.{\n      \"explodeHeart\":\n        style([left(Pt(0.)), top(Pt(0.)), position(Absolute)]),\n    },\n  );\n\nlet make = _children => {\n  ...component,\n  didMount: _ => onAuthorized(twitchAuth => Js.log(clientIdGet(twitchAuth))),\n\n  initialState: () => [],\n\n  reducer: (action, state) =>\n    switch (action) {\n    | Click(clicked) =>\n      clicked ?\n        ReasonReact.Update([{clickedInWave: true}, ...state]) :\n        ReasonReact.NoUpdate\n    | Reset => ReasonReact.Update([])\n    },\n\n  render: self =>\n    <ReasonApollo.Provider client=Client.instance>\n      <View>\n        <HeartContainer>\n          <Heart filled=true style={styles##explodeHeart} />\n          <Heart filled=true style={styles##explodeHeart} />\n        </HeartContainer>\n        {self.state |> List.length >= 5 ?\n           <Wave onFinish={_event => self.send(Reset)} /> : ReasonReact.null}\n        <TriggerContainer onPress={_event => self.send(Click(true))} />\n        <Text style=tempCounterStyle>\n          {ReasonReact.string(string_of_int(self.state |> List.length))}\n        </Text>\n      </View>\n    </ReasonApollo.Provider>,\n};\n\nlet default = ReasonReact.wrapReasonForJs(~component, _ => make([||]));"}]}}
Read message 
{"jsonrpc":"2.0","id":262,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0181198120117ms
➡️ running bsc /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/lanceharper/Repositories/jerk-twitch/client/lib/bs/src/components/App' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src/graphql-types' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/components' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/private' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/graphql_ppx/ppx' -ppx ''\''/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/reactjs_jsx_ppx_2.exe'\''' -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/.lsp/App.ast with pwd /Users/lanceharper/Repositories/jerk-twitch/client
Sending response {"id": 262, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, Pervasives, HeartContainer, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 28, "character": 4}, "end": {"line": 28, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":263,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":24,"character":57},"end":{"line":24,"character":57}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00786781311035ms
Sending response {"id": 263, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":264,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0178813934326ms
Sending response {"id": 264, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, Pervasives, HeartContainer, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 28, "character": 4}, "end": {"line": 28, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":265,"method":"textDocument/formatting","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"options":{"tabSize":2,"insertSpaces":true}}}
[server] Got a method textDocument/formatting
[server] processing took 0.00977516174316ms
Sending response {"id": 265, "jsonrpc": "2.0", "result": null}
Running diagnostics for file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re
type error here [1mFile "[1m", line 25, characters 7-18[0m[0m:
[1;31mError[0m: Multiple definition of the module name GetAllJerks.
       Names must be unique in a given structure or signature.
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re", "diagnostics": [{"range": {"start": {"line": 24, "character": 7}, "end": {"line": 24, "character": 18}}, "message": "Error: Multiple definition of the module name GetAllJerks.\n       Names must be unique in a given structure or signature.", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re","version":156},"contentChanges":[{"text":"/* App is the actual entry point for the application. It matches on the route prop to determine which\n   sub-component to render */\nopen BsReactNative;\nopen Twitch;\n\ntype item = {clickedInWave: bool};\n\ntype state = list(item);\n\ntype clicked = bool;\n\ntype action =\n  | Click(clicked)\n  | Reset;\nlet tempCounterStyle = Style.(style([color(String(\"lightblue\"))]));\n\nlet component = ReasonReact.reducerComponent(\"App\");\n\nmodule GetAllJerks = [%graphql {|\n  {\n    getJerks\n  }\n|}];\n\nmodule GetAllJerks = ReasonApollo.CreateQuery(GetAllJerks);\n\nlet styles =\n  StyleSheet.create(\n    Style.{\n      \"explodeHeart\":\n        style([left(Pt(0.)), top(Pt(0.)), position(Absolute)]),\n    },\n  );\n\nlet make = _children => {\n  ...component,\n  didMount: _ => onAuthorized(twitchAuth => Js.log(clientIdGet(twitchAuth))),\n\n  initialState: () => [],\n\n  reducer: (action, state) =>\n    switch (action) {\n    | Click(clicked) =>\n      clicked ?\n        ReasonReact.Update([{clickedInWave: true}, ...state]) :\n        ReasonReact.NoUpdate\n    | Reset => ReasonReact.Update([])\n    },\n\n  render: self =>\n    <ReasonApollo.Provider client=Client.instance>\n      <View>\n        <HeartContainer>\n          <Heart filled=true style={styles##explodeHeart} />\n          <Heart filled=true style={styles##explodeHeart} />\n        </HeartContainer>\n        {self.state |> List.length >= 5 ?\n           <Wave onFinish={_event => self.send(Reset)} /> : ReasonReact.null}\n        <TriggerContainer onPress={_event => self.send(Click(true))} />\n        <Text style=tempCounterStyle>\n          {ReasonReact.string(string_of_int(self.state |> List.length))}\n        </Text>\n      </View>\n    </ReasonApollo.Provider>,\n};\n\nlet default = ReasonReact.wrapReasonForJs(~component, _ => make([||]));"}]}}
Running diagnostics for file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re
➡️ running bsc /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/lanceharper/Repositories/jerk-twitch/client/lib/bs/src/components/App' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src/graphql-types' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/components' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/private' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/graphql_ppx/ppx' -ppx ''\''/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/reactjs_jsx_ppx_2.exe'\''' -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/.lsp/App.ast with pwd /Users/lanceharper/Repositories/jerk-twitch/client
type error here [1mFile "[1m", line 25, characters 7-18[0m[0m:
[1;31mError[0m: Multiple definition of the module name GetAllJerks.
       Names must be unique in a given structure or signature.
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re", "diagnostics": [{"range": {"start": {"line": 24, "character": 7}, "end": {"line": 24, "character": 18}}, "message": "Error: Multiple definition of the module name GetAllJerks.\n       Names must be unique in a given structure or signature.", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","id":266,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":24,"character":53}}}
[server] Got a method textDocument/definition
[server] processing took 0.0100135803223ms
Sending response {"id": 266, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":267,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":24,"character":18}}}
[server] Got a method textDocument/hover
[server] processing took 0.014066696167ms
Sending response {"id": 267, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":268,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":24,"character":18}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.0131130218506ms
Sending response {"id": 268, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":269,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":24,"character":18}}}
[server] Got a method textDocument/hover
[server] processing took 0.0190734863281ms
Sending response {"id": 269, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":270,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":24,"character":18},"end":{"line":24,"character":18}},"context":{"diagnostics":[{"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":18}},"message":"Error: Multiple definition of the module name GetAllJerks.\n       Names must be unique in a given structure or signature.","severity":1}]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.018835067749ms
Sending response {"id": 270, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re","version":157},"contentChanges":[{"text":"/* App is the actual entry point for the application. It matches on the route prop to determine which\n   sub-component to render */\nopen BsReactNative;\nopen Twitch;\n\ntype item = {clickedInWave: bool};\n\ntype state = list(item);\n\ntype clicked = bool;\n\ntype action =\n  | Click(clicked)\n  | Reset;\nlet tempCounterStyle = Style.(style([color(String(\"lightblue\"))]));\n\nlet component = ReasonReact.reducerComponent(\"App\");\n\nmodule GetAllJerks = [%graphql {|\n  {\n    getJerks\n  }\n|}];\n\nmodule GetAllJerksQ = ReasonApollo.CreateQuery(GetAllJerks);\n\nlet styles =\n  StyleSheet.create(\n    Style.{\n      \"explodeHeart\":\n        style([left(Pt(0.)), top(Pt(0.)), position(Absolute)]),\n    },\n  );\n\nlet make = _children => {\n  ...component,\n  didMount: _ => onAuthorized(twitchAuth => Js.log(clientIdGet(twitchAuth))),\n\n  initialState: () => [],\n\n  reducer: (action, state) =>\n    switch (action) {\n    | Click(clicked) =>\n      clicked ?\n        ReasonReact.Update([{clickedInWave: true}, ...state]) :\n        ReasonReact.NoUpdate\n    | Reset => ReasonReact.Update([])\n    },\n\n  render: self =>\n    <ReasonApollo.Provider client=Client.instance>\n      <View>\n        <HeartContainer>\n          <Heart filled=true style={styles##explodeHeart} />\n          <Heart filled=true style={styles##explodeHeart} />\n        </HeartContainer>\n        {self.state |> List.length >= 5 ?\n           <Wave onFinish={_event => self.send(Reset)} /> : ReasonReact.null}\n        <TriggerContainer onPress={_event => self.send(Click(true))} />\n        <Text style=tempCounterStyle>\n          {ReasonReact.string(string_of_int(self.state |> List.length))}\n        </Text>\n      </View>\n    </ReasonApollo.Provider>,\n};\n\nlet default = ReasonReact.wrapReasonForJs(~component, _ => make([||]));"}]}}
Read message 
{"jsonrpc":"2.0","id":271,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":24,"character":19},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.00905990600586ms
Opens folkz > 2 BsReactNative ... Twitch
Package opens Pervasives
Package opens Pervasives
FINDING /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/pervasives.cmti src /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/pervasives.mli
resolving open BsReactNative.place holder
Not local
FINDING /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/BsReactNative.cmt src 
resolving open Twitch.place holder
Not local
FINDING /Users/lanceharper/Repositories/jerk-twitch/client/lib/bs/src/components/App/Twitch.cmt src /Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/Twitch.re
Opens nows 3 file:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/pervasives.mli file:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/BsReactNative.cmt file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/Twitch.re
---------------- LOCAL VAL
 - Completing in file:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/pervasives.mli
 - Completing in file:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/BsReactNative.cmt
 - Completing in file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/Twitch.re
Sending response {"id": 271, "jsonrpc": "2.0", "result": []}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re","version":158},"contentChanges":[{"text":"/* App is the actual entry point for the application. It matches on the route prop to determine which\n   sub-component to render */\nopen BsReactNative;\nopen Twitch;\n\ntype item = {clickedInWave: bool};\n\ntype state = list(item);\n\ntype clicked = bool;\n\ntype action =\n  | Click(clicked)\n  | Reset;\nlet tempCounterStyle = Style.(style([color(String(\"lightblue\"))]));\n\nlet component = ReasonReact.reducerComponent(\"App\");\n\nmodule GetAllJerks = [%graphql {|\n  {\n    getJerks\n  }\n|}];\n\nmodule GetAllJerksQu = ReasonApollo.CreateQuery(GetAllJerks);\n\nlet styles =\n  StyleSheet.create(\n    Style.{\n      \"explodeHeart\":\n        style([left(Pt(0.)), top(Pt(0.)), position(Absolute)]),\n    },\n  );\n\nlet make = _children => {\n  ...component,\n  didMount: _ => onAuthorized(twitchAuth => Js.log(clientIdGet(twitchAuth))),\n\n  initialState: () => [],\n\n  reducer: (action, state) =>\n    switch (action) {\n    | Click(clicked) =>\n      clicked ?\n        ReasonReact.Update([{clickedInWave: true}, ...state]) :\n        ReasonReact.NoUpdate\n    | Reset => ReasonReact.Update([])\n    },\n\n  render: self =>\n    <ReasonApollo.Provider client=Client.instance>\n      <View>\n        <HeartContainer>\n          <Heart filled=true style={styles##explodeHeart} />\n          <Heart filled=true style={styles##explodeHeart} />\n        </HeartContainer>\n        {self.state |> List.length >= 5 ?\n           <Wave onFinish={_event => self.send(Reset)} /> : ReasonReact.null}\n        <TriggerContainer onPress={_event => self.send(Click(true))} />\n        <Text style=tempCounterStyle>\n          {ReasonReact.string(string_of_int(self.state |> List.length))}\n        </Text>\n      </View>\n    </ReasonApollo.Provider>,\n};\n\nlet default = ReasonReact.wrapReasonForJs(~component, _ => make([||]));"}]}}
Read message 
{"jsonrpc":"2.0","id":272,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":24,"character":20},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.00905990600586ms
Opens folkz > 2 BsReactNative ... Twitch
Package opens Pervasives
Package opens Pervasives
FINDING /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/pervasives.cmti src /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/pervasives.mli
resolving open BsReactNative.place holder
Not local
FINDING /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/BsReactNative.cmt src 
resolving open Twitch.place holder
Not local
FINDING /Users/lanceharper/Repositories/jerk-twitch/client/lib/bs/src/components/App/Twitch.cmt src /Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/Twitch.re
Opens nows 3 file:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/pervasives.mli file:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/BsReactNative.cmt file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/Twitch.re
---------------- LOCAL VAL
 - Completing in file:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/pervasives.mli
 - Completing in file:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/BsReactNative.cmt
 - Completing in file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/Twitch.re
Sending response {"id": 272, "jsonrpc": "2.0", "result": []}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re","version":159},"contentChanges":[{"text":"/* App is the actual entry point for the application. It matches on the route prop to determine which\n   sub-component to render */\nopen BsReactNative;\nopen Twitch;\n\ntype item = {clickedInWave: bool};\n\ntype state = list(item);\n\ntype clicked = bool;\n\ntype action =\n  | Click(clicked)\n  | Reset;\nlet tempCounterStyle = Style.(style([color(String(\"lightblue\"))]));\n\nlet component = ReasonReact.reducerComponent(\"App\");\n\nmodule GetAllJerks = [%graphql {|\n  {\n    getJerks\n  }\n|}];\n\nmodule GetAllJerksQue = ReasonApollo.CreateQuery(GetAllJerks);\n\nlet styles =\n  StyleSheet.create(\n    Style.{\n      \"explodeHeart\":\n        style([left(Pt(0.)), top(Pt(0.)), position(Absolute)]),\n    },\n  );\n\nlet make = _children => {\n  ...component,\n  didMount: _ => onAuthorized(twitchAuth => Js.log(clientIdGet(twitchAuth))),\n\n  initialState: () => [],\n\n  reducer: (action, state) =>\n    switch (action) {\n    | Click(clicked) =>\n      clicked ?\n        ReasonReact.Update([{clickedInWave: true}, ...state]) :\n        ReasonReact.NoUpdate\n    | Reset => ReasonReact.Update([])\n    },\n\n  render: self =>\n    <ReasonApollo.Provider client=Client.instance>\n      <View>\n        <HeartContainer>\n          <Heart filled=true style={styles##explodeHeart} />\n          <Heart filled=true style={styles##explodeHeart} />\n        </HeartContainer>\n        {self.state |> List.length >= 5 ?\n           <Wave onFinish={_event => self.send(Reset)} /> : ReasonReact.null}\n        <TriggerContainer onPress={_event => self.send(Click(true))} />\n        <Text style=tempCounterStyle>\n          {ReasonReact.string(string_of_int(self.state |> List.length))}\n        </Text>\n      </View>\n    </ReasonApollo.Provider>,\n};\n\nlet default = ReasonReact.wrapReasonForJs(~component, _ => make([||]));"}]}}
Read message 
{"jsonrpc":"2.0","id":273,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":24,"character":21},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.0109672546387ms
Opens folkz > 2 BsReactNative ... Twitch
Package opens Pervasives
Package opens Pervasives
FINDING /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/pervasives.cmti src /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/pervasives.mli
resolving open BsReactNative.place holder
Not local
FINDING /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/BsReactNative.cmt src 
resolving open Twitch.place holder
Not local
FINDING /Users/lanceharper/Repositories/jerk-twitch/client/lib/bs/src/components/App/Twitch.cmt src /Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/Twitch.re
Opens nows 3 file:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/pervasives.mli file:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/BsReactNative.cmt file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/Twitch.re
---------------- LOCAL VAL
 - Completing in file:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/pervasives.mli
 - Completing in file:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/BsReactNative.cmt
 - Completing in file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/Twitch.re
Sending response {"id": 273, "jsonrpc": "2.0", "result": []}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re","version":160},"contentChanges":[{"text":"/* App is the actual entry point for the application. It matches on the route prop to determine which\n   sub-component to render */\nopen BsReactNative;\nopen Twitch;\n\ntype item = {clickedInWave: bool};\n\ntype state = list(item);\n\ntype clicked = bool;\n\ntype action =\n  | Click(clicked)\n  | Reset;\nlet tempCounterStyle = Style.(style([color(String(\"lightblue\"))]));\n\nlet component = ReasonReact.reducerComponent(\"App\");\n\nmodule GetAllJerks = [%graphql {|\n  {\n    getJerks\n  }\n|}];\n\nmodule GetAllJerksQuey = ReasonApollo.CreateQuery(GetAllJerks);\n\nlet styles =\n  StyleSheet.create(\n    Style.{\n      \"explodeHeart\":\n        style([left(Pt(0.)), top(Pt(0.)), position(Absolute)]),\n    },\n  );\n\nlet make = _children => {\n  ...component,\n  didMount: _ => onAuthorized(twitchAuth => Js.log(clientIdGet(twitchAuth))),\n\n  initialState: () => [],\n\n  reducer: (action, state) =>\n    switch (action) {\n    | Click(clicked) =>\n      clicked ?\n        ReasonReact.Update([{clickedInWave: true}, ...state]) :\n        ReasonReact.NoUpdate\n    | Reset => ReasonReact.Update([])\n    },\n\n  render: self =>\n    <ReasonApollo.Provider client=Client.instance>\n      <View>\n        <HeartContainer>\n          <Heart filled=true style={styles##explodeHeart} />\n          <Heart filled=true style={styles##explodeHeart} />\n        </HeartContainer>\n        {self.state |> List.length >= 5 ?\n           <Wave onFinish={_event => self.send(Reset)} /> : ReasonReact.null}\n        <TriggerContainer onPress={_event => self.send(Click(true))} />\n        <Text style=tempCounterStyle>\n          {ReasonReact.string(string_of_int(self.state |> List.length))}\n        </Text>\n      </View>\n    </ReasonApollo.Provider>,\n};\n\nlet default = ReasonReact.wrapReasonForJs(~component, _ => make([||]));"}]}}
Read message 
{"jsonrpc":"2.0","id":274,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":24,"character":22},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.00786781311035ms
Opens folkz > 2 BsReactNative ... Twitch
Package opens Pervasives
Package opens Pervasives
FINDING /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/pervasives.cmti src /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/pervasives.mli
resolving open BsReactNative.place holder
Not local
FINDING /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/BsReactNative.cmt src 
resolving open Twitch.place holder
Not local
FINDING /Users/lanceharper/Repositories/jerk-twitch/client/lib/bs/src/components/App/Twitch.cmt src /Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/Twitch.re
Opens nows 3 file:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/pervasives.mli file:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/BsReactNative.cmt file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/Twitch.re
---------------- LOCAL VAL
 - Completing in file:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/pervasives.mli
 - Completing in file:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/BsReactNative.cmt
 - Completing in file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/Twitch.re
Sending response {"id": 274, "jsonrpc": "2.0", "result": []}
Read message 
{"jsonrpc":"2.0","id":275,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0150203704834ms
➡️ running bsc /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/lanceharper/Repositories/jerk-twitch/client/lib/bs/src/components/App' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src/graphql-types' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/components' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/private' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/graphql_ppx/ppx' -ppx ''\''/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/reactjs_jsx_ppx_2.exe'\''' -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/.lsp/App.ast with pwd /Users/lanceharper/Repositories/jerk-twitch/client
Ident!! ReasonApollo.CreateQuery
Ident!! GetAllJerks
<< Replacing lastDefinitions for file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re
Sending response {"id": 275, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, Pervasives, HeartContainer, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 28, "character": 4}, "end": {"line": 28, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":276,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":24,"character":22},"end":{"line":24,"character":22}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00500679016113ms
Sending response {"id": 276, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":277,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.00691413879395ms
Sending response {"id": 277, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, Pervasives, HeartContainer, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 28, "character": 4}, "end": {"line": 28, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re","version":162},"contentChanges":[{"text":"/* App is the actual entry point for the application. It matches on the route prop to determine which\n   sub-component to render */\nopen BsReactNative;\nopen Twitch;\n\ntype item = {clickedInWave: bool};\n\ntype state = list(item);\n\ntype clicked = bool;\n\ntype action =\n  | Click(clicked)\n  | Reset;\nlet tempCounterStyle = Style.(style([color(String(\"lightblue\"))]));\n\nlet component = ReasonReact.reducerComponent(\"App\");\n\nmodule GetAllJerks = [%graphql {|\n  {\n    getJerks\n  }\n|}];\n\nmodule GetAllJerksQuer = ReasonApollo.CreateQuery(GetAllJerks);\n\nlet styles =\n  StyleSheet.create(\n    Style.{\n      \"explodeHeart\":\n        style([left(Pt(0.)), top(Pt(0.)), position(Absolute)]),\n    },\n  );\n\nlet make = _children => {\n  ...component,\n  didMount: _ => onAuthorized(twitchAuth => Js.log(clientIdGet(twitchAuth))),\n\n  initialState: () => [],\n\n  reducer: (action, state) =>\n    switch (action) {\n    | Click(clicked) =>\n      clicked ?\n        ReasonReact.Update([{clickedInWave: true}, ...state]) :\n        ReasonReact.NoUpdate\n    | Reset => ReasonReact.Update([])\n    },\n\n  render: self =>\n    <ReasonApollo.Provider client=Client.instance>\n      <View>\n        <HeartContainer>\n          <Heart filled=true style={styles##explodeHeart} />\n          <Heart filled=true style={styles##explodeHeart} />\n        </HeartContainer>\n        {self.state |> List.length >= 5 ?\n           <Wave onFinish={_event => self.send(Reset)} /> : ReasonReact.null}\n        <TriggerContainer onPress={_event => self.send(Click(true))} />\n        <Text style=tempCounterStyle>\n          {ReasonReact.string(string_of_int(self.state |> List.length))}\n        </Text>\n      </View>\n    </ReasonApollo.Provider>,\n};\n\nlet default = ReasonReact.wrapReasonForJs(~component, _ => make([||]));"}]}}
Read message 
{"jsonrpc":"2.0","id":278,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":24,"character":22},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.0100135803223ms
Opens folkz > 2 BsReactNative ... Twitch
Package opens Pervasives
Package opens Pervasives
FINDING /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/pervasives.cmti src /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/pervasives.mli
resolving open BsReactNative.place holder
Not local
FINDING /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/BsReactNative.cmt src 
resolving open Twitch.place holder
Not local
FINDING /Users/lanceharper/Repositories/jerk-twitch/client/lib/bs/src/components/App/Twitch.cmt src /Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/Twitch.re
Opens nows 3 file:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/pervasives.mli file:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/BsReactNative.cmt file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/Twitch.re
---------------- LOCAL VAL
 - Completing in file:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/pervasives.mli
 - Completing in file:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/BsReactNative.cmt
 - Completing in file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/Twitch.re
Sending response {"id": 278, "jsonrpc": "2.0", "result": []}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re","version":163},"contentChanges":[{"text":"/* App is the actual entry point for the application. It matches on the route prop to determine which\n   sub-component to render */\nopen BsReactNative;\nopen Twitch;\n\ntype item = {clickedInWave: bool};\n\ntype state = list(item);\n\ntype clicked = bool;\n\ntype action =\n  | Click(clicked)\n  | Reset;\nlet tempCounterStyle = Style.(style([color(String(\"lightblue\"))]));\n\nlet component = ReasonReact.reducerComponent(\"App\");\n\nmodule GetAllJerks = [%graphql {|\n  {\n    getJerks\n  }\n|}];\n\nmodule GetAllJerksQuery = ReasonApollo.CreateQuery(GetAllJerks);\n\nlet styles =\n  StyleSheet.create(\n    Style.{\n      \"explodeHeart\":\n        style([left(Pt(0.)), top(Pt(0.)), position(Absolute)]),\n    },\n  );\n\nlet make = _children => {\n  ...component,\n  didMount: _ => onAuthorized(twitchAuth => Js.log(clientIdGet(twitchAuth))),\n\n  initialState: () => [],\n\n  reducer: (action, state) =>\n    switch (action) {\n    | Click(clicked) =>\n      clicked ?\n        ReasonReact.Update([{clickedInWave: true}, ...state]) :\n        ReasonReact.NoUpdate\n    | Reset => ReasonReact.Update([])\n    },\n\n  render: self =>\n    <ReasonApollo.Provider client=Client.instance>\n      <View>\n        <HeartContainer>\n          <Heart filled=true style={styles##explodeHeart} />\n          <Heart filled=true style={styles##explodeHeart} />\n        </HeartContainer>\n        {self.state |> List.length >= 5 ?\n           <Wave onFinish={_event => self.send(Reset)} /> : ReasonReact.null}\n        <TriggerContainer onPress={_event => self.send(Click(true))} />\n        <Text style=tempCounterStyle>\n          {ReasonReact.string(string_of_int(self.state |> List.length))}\n        </Text>\n      </View>\n    </ReasonApollo.Provider>,\n};\n\nlet default = ReasonReact.wrapReasonForJs(~component, _ => make([||]));"}]}}
Read message 
{"jsonrpc":"2.0","id":279,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.00882148742676ms
➡️ running bsc /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/lanceharper/Repositories/jerk-twitch/client/lib/bs/src/components/App' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src/graphql-types' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/components' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/private' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/graphql_ppx/ppx' -ppx ''\''/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/reactjs_jsx_ppx_2.exe'\''' -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/.lsp/App.ast with pwd /Users/lanceharper/Repositories/jerk-twitch/client
Ident!! ReasonApollo.CreateQuery
Ident!! GetAllJerks
<< Replacing lastDefinitions for file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re
Sending response {"id": 279, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, Pervasives, HeartContainer, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 28, "character": 4}, "end": {"line": 28, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":280,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":24,"character":23},"end":{"line":24,"character":23}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00500679016113ms
Sending response {"id": 280, "jsonrpc": "2.0", "result": null}
Running diagnostics for file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re", "diagnostics": []}}
Read message 
{"jsonrpc":"2.0","id":281,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0109672546387ms
Sending response {"id": 281, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, Pervasives, HeartContainer, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 28, "character": 4}, "end": {"line": 28, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":282,"method":"textDocument/formatting","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"options":{"tabSize":2,"insertSpaces":true}}}
[server] Got a method textDocument/formatting
[server] processing took 0.00905990600586ms
Sending response {"id": 282, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":283,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":24,"character":23},"end":{"line":24,"character":23}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0190734863281ms
Sending response {"id": 283, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re","version":163},"contentChanges":[{"text":"/* App is the actual entry point for the application. It matches on the route prop to determine which\n   sub-component to render */\nopen BsReactNative;\nopen Twitch;\n\ntype item = {clickedInWave: bool};\n\ntype state = list(item);\n\ntype clicked = bool;\n\ntype action =\n  | Click(clicked)\n  | Reset;\nlet tempCounterStyle = Style.(style([color(String(\"lightblue\"))]));\n\nlet component = ReasonReact.reducerComponent(\"App\");\n\nmodule GetAllJerks = [%graphql {|\n  {\n    getJerks\n  }\n|}];\n\nmodule GetAllJerksQuery = ReasonApollo.CreateQuery(GetAllJerks);\n\nlet styles =\n  StyleSheet.create(\n    Style.{\n      \"explodeHeart\":\n        style([left(Pt(0.)), top(Pt(0.)), position(Absolute)]),\n    },\n  );\n\nlet make = _children => {\n  ...component,\n  didMount: _ => onAuthorized(twitchAuth => Js.log(clientIdGet(twitchAuth))),\n\n  initialState: () => [],\n\n  reducer: (action, state) =>\n    switch (action) {\n    | Click(clicked) =>\n      clicked ?\n        ReasonReact.Update([{clickedInWave: true}, ...state]) :\n        ReasonReact.NoUpdate\n    | Reset => ReasonReact.Update([])\n    },\n\n  render: self =>\n    <ReasonApollo.Provider client=Client.instance>\n      <View>\n        <HeartContainer>\n          <Heart filled=true style={styles##explodeHeart} />\n          <Heart filled=true style={styles##explodeHeart} />\n        </HeartContainer>\n        {self.state |> List.length >= 5 ?\n           <Wave onFinish={_event => self.send(Reset)} /> : ReasonReact.null}\n        <TriggerContainer onPress={_event => self.send(Click(true))} />\n        <Text style=tempCounterStyle>\n          {ReasonReact.string(string_of_int(self.state |> List.length))}\n        </Text>\n      </View>\n    </ReasonApollo.Provider>,\n};\n\nlet default = ReasonReact.wrapReasonForJs(~component, _ => make([||]));"}]}}
Read message 
{"jsonrpc":"2.0","id":284,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":24,"character":64},"end":{"line":24,"character":64}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00596046447754ms
➡️ running bsc /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/lanceharper/Repositories/jerk-twitch/client/lib/bs/src/components/App' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src/graphql-types' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/components' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/private' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/graphql_ppx/ppx' -ppx ''\''/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/reactjs_jsx_ppx_2.exe'\''' -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/.lsp/App.ast with pwd /Users/lanceharper/Repositories/jerk-twitch/client
Ident!! ReasonApollo.CreateQuery
Ident!! GetAllJerks
<< Replacing lastDefinitions for file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re
Sending response {"id": 284, "jsonrpc": "2.0", "result": null}
Running diagnostics for file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re", "diagnostics": []}}
Read message 
{"jsonrpc":"2.0","id":285,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":24,"character":17}}}
[server] Got a method textDocument/hover
[server] processing took 0.00810623168945ms
Sending response {"id": 285, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":286,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":24,"character":18}}}
[server] Got a method textDocument/definition
[server] processing took 0.0159740447998ms
Got a loc for pos
Sending response {"id": 286, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":287,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":59,"character":21}}}
[server] Got a method textDocument/hover
[server] processing took 0.0178813934326ms
FINDING /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/BsReactNative.cmt src 
FINDING /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/style-BsReactNative.cmti src /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/style.rei
Trying for declared Value 1015 in file file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re
Sending response {"id": 287, "jsonrpc": "2.0", "result": {"range": {"start": {"line": 59, "character": 20}, "end": {"line": 59, "character": 36}}, "contents": {"kind": "markdown", "value": "```\nBsReactNative.Style.t\n```\n\n```\ntype t\n```\n\n<root>/client/src/components/App/App.re"}}}
Read message 
{"jsonrpc":"2.0","id":288,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":50,"character":50},"end":{"line":50,"character":50}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0171661376953ms
Sending response {"id": 288, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re","version":164},"contentChanges":[{"text":"/* App is the actual entry point for the application. It matches on the route prop to determine which\n   sub-component to render */\nopen BsReactNative;\nopen Twitch;\n\ntype item = {clickedInWave: bool};\n\ntype state = list(item);\n\ntype clicked = bool;\n\ntype action =\n  | Click(clicked)\n  | Reset;\nlet tempCounterStyle = Style.(style([color(String(\"lightblue\"))]));\n\nlet component = ReasonReact.reducerComponent(\"App\");\n\nmodule GetAllJerks = [%graphql {|\n  {\n    getJerks\n  }\n|}];\n\nmodule GetAllJerksQuery = ReasonApollo.CreateQuery(GetAllJerks);\n\nlet styles =\n  StyleSheet.create(\n    Style.{\n      \"explodeHeart\":\n        style([left(Pt(0.)), top(Pt(0.)), position(Absolute)]),\n    },\n  );\n\nlet make = _children => {\n  ...component,\n  didMount: _ => onAuthorized(twitchAuth => Js.log(clientIdGet(twitchAuth))),\n\n  initialState: () => [],\n\n  reducer: (action, state) =>\n    switch (action) {\n    | Click(clicked) =>\n      clicked ?\n        ReasonReact.Update([{clickedInWave: true}, ...state]) :\n        ReasonReact.NoUpdate\n    | Reset => ReasonReact.Update([])\n    },\n\n  render: self =>\n    <ReasonApollo.Provider client=Client.instance>\n    \n      <View>\n        <HeartContainer>\n          <Heart filled=true style={styles##explodeHeart} />\n          <Heart filled=true style={styles##explodeHeart} />\n        </HeartContainer>\n        {self.state |> List.length >= 5 ?\n           <Wave onFinish={_event => self.send(Reset)} /> : ReasonReact.null}\n        <TriggerContainer onPress={_event => self.send(Click(true))} />\n        <Text style=tempCounterStyle>\n          {ReasonReact.string(string_of_int(self.state |> List.length))}\n        </Text>\n      </View>\n    </ReasonApollo.Provider>,\n};\n\nlet default = ReasonReact.wrapReasonForJs(~component, _ => make([||]));"}]}}
Read message 
{"jsonrpc":"2.0","id":289,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0150203704834ms
➡️ running bsc /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/lanceharper/Repositories/jerk-twitch/client/lib/bs/src/components/App' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src/graphql-types' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/components' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/private' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/graphql_ppx/ppx' -ppx ''\''/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/reactjs_jsx_ppx_2.exe'\''' -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/.lsp/App.ast with pwd /Users/lanceharper/Repositories/jerk-twitch/client
Ident!! ReasonApollo.CreateQuery
Ident!! GetAllJerks
<< Replacing lastDefinitions for file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re
Sending response {"id": 289, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, Pervasives, HeartContainer, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 28, "character": 4}, "end": {"line": 28, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":290,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.00810623168945ms
Sending response {"id": 290, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, Pervasives, HeartContainer, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 28, "character": 4}, "end": {"line": 28, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re","version":165},"contentChanges":[{"text":"/* App is the actual entry point for the application. It matches on the route prop to determine which\n   sub-component to render */\nopen BsReactNative;\nopen Twitch;\n\ntype item = {clickedInWave: bool};\n\ntype state = list(item);\n\ntype clicked = bool;\n\ntype action =\n  | Click(clicked)\n  | Reset;\nlet tempCounterStyle = Style.(style([color(String(\"lightblue\"))]));\n\nlet component = ReasonReact.reducerComponent(\"App\");\n\nmodule GetAllJerks = [%graphql {|\n  {\n    getJerks\n  }\n|}];\n\nmodule GetAllJerksQuery = ReasonApollo.CreateQuery(GetAllJerks);\n\nlet styles =\n  StyleSheet.create(\n    Style.{\n      \"explodeHeart\":\n        style([left(Pt(0.)), top(Pt(0.)), position(Absolute)]),\n    },\n  );\n\nlet make = _children => {\n  ...component,\n  didMount: _ => onAuthorized(twitchAuth => Js.log(clientIdGet(twitchAuth))),\n\n  initialState: () => [],\n\n  reducer: (action, state) =>\n    switch (action) {\n    | Click(clicked) =>\n      clicked ?\n        ReasonReact.Update([{clickedInWave: true}, ...state]) :\n        ReasonReact.NoUpdate\n    | Reset => ReasonReact.Update([])\n    },\n\n  render: self =>\n    <ReasonApollo.Provider client=Client.instance>\n      \n      <View>\n        <HeartContainer>\n          <Heart filled=true style={styles##explodeHeart} />\n          <Heart filled=true style={styles##explodeHeart} />\n        </HeartContainer>\n        {self.state |> List.length >= 5 ?\n           <Wave onFinish={_event => self.send(Reset)} /> : ReasonReact.null}\n        <TriggerContainer onPress={_event => self.send(Click(true))} />\n        <Text style=tempCounterStyle>\n          {ReasonReact.string(string_of_int(self.state |> List.length))}\n        </Text>\n      </View>\n    </ReasonApollo.Provider>,\n};\n\nlet default = ReasonReact.wrapReasonForJs(~component, _ => make([||]));"}]}}
Read message 
{"jsonrpc":"2.0","id":291,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0178813934326ms
➡️ running bsc /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/lanceharper/Repositories/jerk-twitch/client/lib/bs/src/components/App' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src/graphql-types' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/components' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/private' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/graphql_ppx/ppx' -ppx ''\''/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/reactjs_jsx_ppx_2.exe'\''' -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/.lsp/App.ast with pwd /Users/lanceharper/Repositories/jerk-twitch/client
Ident!! ReasonApollo.CreateQuery
Ident!! GetAllJerks
<< Replacing lastDefinitions for file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re
Sending response {"id": 291, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, Pervasives, HeartContainer, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 28, "character": 4}, "end": {"line": 28, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":292,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.00810623168945ms
Sending response {"id": 292, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, Pervasives, HeartContainer, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 28, "character": 4}, "end": {"line": 28, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re","version":166},"contentChanges":[{"text":"/* App is the actual entry point for the application. It matches on the route prop to determine which\n   sub-component to render */\nopen BsReactNative;\nopen Twitch;\n\ntype item = {clickedInWave: bool};\n\ntype state = list(item);\n\ntype clicked = bool;\n\ntype action =\n  | Click(clicked)\n  | Reset;\nlet tempCounterStyle = Style.(style([color(String(\"lightblue\"))]));\n\nlet component = ReasonReact.reducerComponent(\"App\");\n\nmodule GetAllJerks = [%graphql {|\n  {\n    getJerks\n  }\n|}];\n\nmodule GetAllJerksQuery = ReasonApollo.CreateQuery(GetAllJerks);\n\nlet styles =\n  StyleSheet.create(\n    Style.{\n      \"explodeHeart\":\n        style([left(Pt(0.)), top(Pt(0.)), position(Absolute)]),\n    },\n  );\n\nlet make = _children => {\n  ...component,\n  didMount: _ => onAuthorized(twitchAuth => Js.log(clientIdGet(twitchAuth))),\n\n  initialState: () => [],\n\n  reducer: (action, state) =>\n    switch (action) {\n    | Click(clicked) =>\n      clicked ?\n        ReasonReact.Update([{clickedInWave: true}, ...state]) :\n        ReasonReact.NoUpdate\n    | Reset => ReasonReact.Update([])\n    },\n\n  render: self =>\n    <ReasonApollo.Provider client=Client.instance>\n      <GetAllMessagesQuery>\n      ...{\n        ({result, subscribeToMore}) => switch result {\n      <View>\n        <HeartContainer>\n          <Heart filled=true style={styles##explodeHeart} />\n          <Heart filled=true style={styles##explodeHeart} />\n        </HeartContainer>\n        {self.state |> List.length >= 5 ?\n           <Wave onFinish={_event => self.send(Reset)} /> : ReasonReact.null}\n        <TriggerContainer onPress={_event => self.send(Click(true))} />\n        <Text style=tempCounterStyle>\n          {ReasonReact.string(string_of_int(self.state |> List.length))}\n        </Text>\n      </View>\n    </ReasonApollo.Provider>,\n};\n\nlet default = ReasonReact.wrapReasonForJs(~component, _ => make([||]));"}]}}
Read message 
{"jsonrpc":"2.0","id":293,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0181198120117ms
➡️ running bsc /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/lanceharper/Repositories/jerk-twitch/client/lib/bs/src/components/App' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src/graphql-types' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/components' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/private' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/graphql_ppx/ppx' -ppx ''\''/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/reactjs_jsx_ppx_2.exe'\''' -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/.lsp/App.ast with pwd /Users/lanceharper/Repositories/jerk-twitch/client
Sending response {"id": 293, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, Pervasives, HeartContainer, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 28, "character": 4}, "end": {"line": 28, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":294,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":53,"character":54},"end":{"line":53,"character":54}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00810623168945ms
Sending response {"id": 294, "jsonrpc": "2.0", "result": null}
Running diagnostics for file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re", "diagnostics": [{"range": {"start": {"line": 54, "character": 6}, "end": {"line": 54, "character": 7}}, "message": "Error: Syntax error: '}' expected", "severity": 1}, {"range": {"start": {"line": 52, "character": 9}, "end": {"line": 52, "character": 10}}, "message": "Error: This '{' might be unmatched", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","id":295,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0171661376953ms
Sending response {"id": 295, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, Pervasives, HeartContainer, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 28, "character": 4}, "end": {"line": 28, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":296,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":53,"character":54},"end":{"line":53,"character":54}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.014066696167ms
Sending response {"id": 296, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":297,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":56,"character":43}}}
[server] Got a method textDocument/hover
[server] processing took 0.0178813934326ms
Sending response {"id": 297, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":298,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":24,"character":18}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00905990600586ms
Sending response {"id": 298, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":299,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":24,"character":7},"end":{"line":24,"character":23}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0181198120117ms
Sending response {"id": 299, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":300,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":51,"character":18}}}
[server] Got a method textDocument/hover
[server] processing took 0.0178813934326ms
Sending response {"id": 300, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":301,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":51,"character":18}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.0109672546387ms
Sending response {"id": 301, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re","version":167},"contentChanges":[{"text":"/* App is the actual entry point for the application. It matches on the route prop to determine which\n   sub-component to render */\nopen BsReactNative;\nopen Twitch;\n\ntype item = {clickedInWave: bool};\n\ntype state = list(item);\n\ntype clicked = bool;\n\ntype action =\n  | Click(clicked)\n  | Reset;\nlet tempCounterStyle = Style.(style([color(String(\"lightblue\"))]));\n\nlet component = ReasonReact.reducerComponent(\"App\");\n\nmodule GetAllJerks = [%graphql {|\n  {\n    getJerks\n  }\n|}];\n\nmodule GetAllJerksQuery = ReasonApollo.CreateQuery(GetAllJerks);\n\nlet styles =\n  StyleSheet.create(\n    Style.{\n      \"explodeHeart\":\n        style([left(Pt(0.)), top(Pt(0.)), position(Absolute)]),\n    },\n  );\n\nlet make = _children => {\n  ...component,\n  didMount: _ => onAuthorized(twitchAuth => Js.log(clientIdGet(twitchAuth))),\n\n  initialState: () => [],\n\n  reducer: (action, state) =>\n    switch (action) {\n    | Click(clicked) =>\n      clicked ?\n        ReasonReact.Update([{clickedInWave: true}, ...state]) :\n        ReasonReact.NoUpdate\n    | Reset => ReasonReact.Update([])\n    },\n\n  render: self =>\n    <ReasonApollo.Provider client=Client.instance>\n      <GetAllJerksQuery>\n      ...{\n        ({result, subscribeToMore}) => switch result {\n      <View>\n        <HeartContainer>\n          <Heart filled=true style={styles##explodeHeart} />\n          <Heart filled=true style={styles##explodeHeart} />\n        </HeartContainer>\n        {self.state |> List.length >= 5 ?\n           <Wave onFinish={_event => self.send(Reset)} /> : ReasonReact.null}\n        <TriggerContainer onPress={_event => self.send(Click(true))} />\n        <Text style=tempCounterStyle>\n          {ReasonReact.string(string_of_int(self.state |> List.length))}\n        </Text>\n      </View>\n    </ReasonApollo.Provider>,\n};\n\nlet default = ReasonReact.wrapReasonForJs(~component, _ => make([||]));"}]}}
Read message 
{"jsonrpc":"2.0","id":302,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0181198120117ms
➡️ running bsc /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/lanceharper/Repositories/jerk-twitch/client/lib/bs/src/components/App' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src/graphql-types' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/components' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/private' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/graphql_ppx/ppx' -ppx ''\''/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/reactjs_jsx_ppx_2.exe'\''' -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/.lsp/App.ast with pwd /Users/lanceharper/Repositories/jerk-twitch/client
Sending response {"id": 302, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, Pervasives, HeartContainer, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 28, "character": 4}, "end": {"line": 28, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":303,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":51,"character":23},"end":{"line":51,"character":23}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0238418579102ms
Sending response {"id": 303, "jsonrpc": "2.0", "result": null}
Running diagnostics for file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re", "diagnostics": [{"range": {"start": {"line": 54, "character": 6}, "end": {"line": 54, "character": 7}}, "message": "Error: Syntax error: '}' expected", "severity": 1}, {"range": {"start": {"line": 52, "character": 9}, "end": {"line": 52, "character": 10}}, "message": "Error: This '{' might be unmatched", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","id":304,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0391006469727ms
Sending response {"id": 304, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, Pervasives, HeartContainer, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 28, "character": 4}, "end": {"line": 28, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":305,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":53,"character":54},"end":{"line":53,"character":54}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0209808349609ms
Sending response {"id": 305, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":306,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":59,"character":40}}}
[server] Got a method textDocument/hover
[server] processing took 0.0150203704834ms
Sending response {"id": 306, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re","version":168},"contentChanges":[{"text":"/* App is the actual entry point for the application. It matches on the route prop to determine which\n   sub-component to render */\nopen BsReactNative;\nopen Twitch;\n\ntype item = {clickedInWave: bool};\n\ntype state = list(item);\n\ntype clicked = bool;\n\ntype action =\n  | Click(clicked)\n  | Reset;\nlet tempCounterStyle = Style.(style([color(String(\"lightblue\"))]));\n\nlet component = ReasonReact.reducerComponent(\"App\");\n\nmodule GetAllJerks = [%graphql {|\n  {\n    getJerks\n  }\n|}];\n\nmodule GetAllJerksQuery = ReasonApollo.CreateQuery(GetAllJerks);\n\nlet styles =\n  StyleSheet.create(\n    Style.{\n      \"explodeHeart\":\n        style([left(Pt(0.)), top(Pt(0.)), position(Absolute)]),\n    },\n  );\n\nlet make = _children => {\n  ...component,\n  didMount: _ => onAuthorized(twitchAuth => Js.log(clientIdGet(twitchAuth))),\n\n  initialState: () => [],\n\n  reducer: (action, state) =>\n    switch (action) {\n    | Click(clicked) =>\n      clicked ?\n        ReasonReact.Update([{clickedInWave: true}, ...state]) :\n        ReasonReact.NoUpdate\n    | Reset => ReasonReact.Update([])\n    },\n\n  render: self =>\n    <ReasonApollo.Provider client=Client.instance>\n      <GetAllJerksQuery>\n      ...{\n        ({result, subscribeToMore}) => switch result {\n          \n      <View>\n        <HeartContainer>\n          <Heart filled=true style={styles##explodeHeart} />\n          <Heart filled=true style={styles##explodeHeart} />\n        </HeartContainer>\n        {self.state |> List.length >= 5 ?\n           <Wave onFinish={_event => self.send(Reset)} /> : ReasonReact.null}\n        <TriggerContainer onPress={_event => self.send(Click(true))} />\n        <Text style=tempCounterStyle>\n          {ReasonReact.string(string_of_int(self.state |> List.length))}\n        </Text>\n      </View>\n    </ReasonApollo.Provider>,\n};\n\nlet default = ReasonReact.wrapReasonForJs(~component, _ => make([||]));"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re","version":169},"contentChanges":[{"text":"/* App is the actual entry point for the application. It matches on the route prop to determine which\n   sub-component to render */\nopen BsReactNative;\nopen Twitch;\n\ntype item = {clickedInWave: bool};\n\ntype state = list(item);\n\ntype clicked = bool;\n\ntype action =\n  | Click(clicked)\n  | Reset;\nlet tempCounterStyle = Style.(style([color(String(\"lightblue\"))]));\n\nlet component = ReasonReact.reducerComponent(\"App\");\n\nmodule GetAllJerks = [%graphql {|\n  {\n    getJerks\n  }\n|}];\n\nmodule GetAllJerksQuery = ReasonApollo.CreateQuery(GetAllJerks);\n\nlet styles =\n  StyleSheet.create(\n    Style.{\n      \"explodeHeart\":\n        style([left(Pt(0.)), top(Pt(0.)), position(Absolute)]),\n    },\n  );\n\nlet make = _children => {\n  ...component,\n  didMount: _ => onAuthorized(twitchAuth => Js.log(clientIdGet(twitchAuth))),\n\n  initialState: () => [],\n\n  reducer: (action, state) =>\n    switch (action) {\n    | Click(clicked) =>\n      clicked ?\n        ReasonReact.Update([{clickedInWave: true}, ...state]) :\n        ReasonReact.NoUpdate\n    | Reset => ReasonReact.Update([])\n    },\n\n  render: self =>\n    <ReasonApollo.Provider client=Client.instance>\n      <GetAllJerksQuery>\n      ...{\n        ({result, subscribeToMore}) => switch result {\n           | Loading => <div> {\"Loading\" |> ReasonReact.string} </div>\n            | Error(_e) => <div> {\"Error\" |> ReasonReact.string} </div>\n            | Data(response) => \n              <Messages \n                onLoad={\n                  () => {\n                  let _unsub = subscribeToMore(\n                    ~document=messageAddedASTQuery,\n                    ~updateQuery={(prev, next) => {\n                      let addNewMessageJS = [%bs.raw {|\n                          function(prev, next) {\n                            if(!next.subscriptionData.data || !next.subscriptionData.data.messageAdded)\n                              return prev;\n                            return Object.assign({}, prev, {\n                              messages: prev.messages.concat(next.subscriptionData.data.messageAdded)\n                            });\n                          }\n                      |}];\n                      addNewMessageJS(prev, next);\n                    }},\n                    ()\n                  )\n                }\n                } \n                messages=(response##messages) \n              />\n          } \n      }\n    </GetAllMessagesQuery>\n      <View>\n        <HeartContainer>\n          <Heart filled=true style={styles##explodeHeart} />\n          <Heart filled=true style={styles##explodeHeart} />\n        </HeartContainer>\n        {self.state |> List.length >= 5 ?\n           <Wave onFinish={_event => self.send(Reset)} /> : ReasonReact.null}\n        <TriggerContainer onPress={_event => self.send(Click(true))} />\n        <Text style=tempCounterStyle>\n          {ReasonReact.string(string_of_int(self.state |> List.length))}\n        </Text>\n      </View>\n    </ReasonApollo.Provider>,\n};\n\nlet default = ReasonReact.wrapReasonForJs(~component, _ => make([||]));"}]}}
Read message 
{"jsonrpc":"2.0","id":307,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0269412994385ms
➡️ running bsc /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/lanceharper/Repositories/jerk-twitch/client/lib/bs/src/components/App' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src/graphql-types' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/components' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/private' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/graphql_ppx/ppx' -ppx ''\''/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/reactjs_jsx_ppx_2.exe'\''' -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/.lsp/App.ast with pwd /Users/lanceharper/Repositories/jerk-twitch/client
Sending response {"id": 307, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, Pervasives, HeartContainer, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 28, "character": 4}, "end": {"line": 28, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":308,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":82,"character":26},"end":{"line":82,"character":26}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00619888305664ms
Sending response {"id": 308, "jsonrpc": "2.0", "result": null}
Running diagnostics for file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re", "diagnostics": [{"range": {"start": {"line": 51, "character": 6}, "end": {"line": 82, "character": 26}}, "message": "Error: Start tag <GetAllJerksQuery> does not match end tag </GetAllMessagesQuery>", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","id":309,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0162124633789ms
Sending response {"id": 309, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, Pervasives, HeartContainer, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 28, "character": 4}, "end": {"line": 28, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":310,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":82,"character":26},"end":{"line":82,"character":26}},"context":{"diagnostics":[{"range":{"start":{"line":51,"character":6},"end":{"line":82,"character":26}},"message":"Error: Start tag <GetAllJerksQuery> does not match end tag </GetAllMessagesQuery>","severity":1}]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00786781311035ms
Sending response {"id": 310, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":311,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":59,"character":16}}}
[server] Got a method textDocument/hover
[server] processing took 0.0138282775879ms
Sending response {"id": 311, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":312,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":54,"character":12},"end":{"line":54,"character":12}},"context":{"diagnostics":[{"range":{"start":{"line":51,"character":6},"end":{"line":82,"character":26}},"message":"Error: Start tag <GetAllJerksQuery> does not match end tag </GetAllMessagesQuery>","severity":1}]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0100135803223ms
Sending response {"id": 312, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":313,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":53,"character":15}}}
[server] Got a method textDocument/hover
[server] processing took 0.0119209289551ms
Sending response {"id": 313, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":314,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":58,"character":17}}}
[server] Got a method textDocument/hover
[server] processing took 0.0131130218506ms
Sending response {"id": 314, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":315,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":58,"character":17}}}
[server] Got a method textDocument/definition
[server] processing took 0.00786781311035ms
Sending response {"id": 315, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":316,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":61,"character":27}}}
[server] Got a method textDocument/hover
[server] processing took 0.0119209289551ms
Sending response {"id": 316, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":317,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":56,"character":14}}}
[server] Got a method textDocument/hover
[server] processing took 0.0100135803223ms
Sending response {"id": 317, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":318,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":52,"character":6}}}
[server] Got a method textDocument/hover
[server] processing took 0.0190734863281ms
Sending response {"id": 318, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":319,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":51,"character":6},"end":{"line":95,"character":29}},"context":{"diagnostics":[{"range":{"start":{"line":51,"character":6},"end":{"line":82,"character":26}},"message":"Error: Start tag <GetAllJerksQuery> does not match end tag </GetAllMessagesQuery>","severity":1}]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00810623168945ms
Sending response {"id": 319, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":320,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":51,"character":6},"end":{"line":85,"character":31}},"context":{"diagnostics":[{"range":{"start":{"line":51,"character":6},"end":{"line":82,"character":26}},"message":"Error: Start tag <GetAllJerksQuery> does not match end tag </GetAllMessagesQuery>","severity":1}]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0119209289551ms
Sending response {"id": 320, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":321,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":51,"character":6},"end":{"line":84,"character":24}},"context":{"diagnostics":[{"range":{"start":{"line":51,"character":6},"end":{"line":82,"character":26}},"message":"Error: Start tag <GetAllJerksQuery> does not match end tag </GetAllMessagesQuery>","severity":1}]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0119209289551ms
Sending response {"id": 321, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":322,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":51,"character":6},"end":{"line":82,"character":24}},"context":{"diagnostics":[{"range":{"start":{"line":51,"character":6},"end":{"line":82,"character":26}},"message":"Error: Start tag <GetAllJerksQuery> does not match end tag </GetAllMessagesQuery>","severity":1}]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0131130218506ms
Sending response {"id": 322, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":323,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":51,"character":6},"end":{"line":82,"character":25}},"context":{"diagnostics":[{"range":{"start":{"line":51,"character":6},"end":{"line":82,"character":26}},"message":"Error: Start tag <GetAllJerksQuery> does not match end tag </GetAllMessagesQuery>","severity":1}]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0147819519043ms
Sending response {"id": 323, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":324,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":51,"character":6},"end":{"line":82,"character":26}},"context":{"diagnostics":[{"range":{"start":{"line":51,"character":6},"end":{"line":82,"character":26}},"message":"Error: Start tag <GetAllJerksQuery> does not match end tag </GetAllMessagesQuery>","severity":1}]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0119209289551ms
Sending response {"id": 324, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re","version":170},"contentChanges":[{"text":"/* App is the actual entry point for the application. It matches on the route prop to determine which\n   sub-component to render */\nopen BsReactNative;\nopen Twitch;\n\ntype item = {clickedInWave: bool};\n\ntype state = list(item);\n\ntype clicked = bool;\n\ntype action =\n  | Click(clicked)\n  | Reset;\nlet tempCounterStyle = Style.(style([color(String(\"lightblue\"))]));\n\nlet component = ReasonReact.reducerComponent(\"App\");\n\nmodule GetAllJerks = [%graphql {|\n  {\n    getJerks\n  }\n|}];\n\nmodule GetAllJerksQuery = ReasonApollo.CreateQuery(GetAllJerks);\n\nlet styles =\n  StyleSheet.create(\n    Style.{\n      \"explodeHeart\":\n        style([left(Pt(0.)), top(Pt(0.)), position(Absolute)]),\n    },\n  );\n\nlet make = _children => {\n  ...component,\n  didMount: _ => onAuthorized(twitchAuth => Js.log(clientIdGet(twitchAuth))),\n\n  initialState: () => [],\n\n  reducer: (action, state) =>\n    switch (action) {\n    | Click(clicked) =>\n      clicked ?\n        ReasonReact.Update([{clickedInWave: true}, ...state]) :\n        ReasonReact.NoUpdate\n    | Reset => ReasonReact.Update([])\n    },\n\n  render: self =>\n    <ReasonApollo.Provider client=Client.instance>\n      <GetAllMessagesQuery>\n      ...{\n        ({result, subscribeToMore}) => switch result {\n            | Loading => <div> {\"Loading\" |> ReasonReact.string} </div>\n            | Error(_e) => <div> {\"Error\" |> ReasonReact.string} </div>\n            | Data(response) => \n              <Messages \n                onLoad={\n                  () => {\n                  let _unsub = subscribeToMore(\n                    ~document=messageAddedASTQuery,\n                    ~updateQuery={(prev, next) => {\n                      let addNewMessageJS = [%bs.raw {|\n                          function(prev, next) {\n                            if(!next.subscriptionData.data || !next.subscriptionData.data.messageAdded)\n                              return prev;\n                            return Object.assign({}, prev, {\n                              messages: prev.messages.concat(next.subscriptionData.data.messageAdded)\n                            });\n                          }\n                      |}];\n                      addNewMessageJS(prev, next);\n                    }},\n                    ()\n                  )\n                }\n                } \n                messages=(response##messages) \n              />\n          } \n      }\n    </GetAllMessagesQuery>\n\n      <View>\n        <HeartContainer>\n          <Heart filled=true style={styles##explodeHeart} />\n          <Heart filled=true style={styles##explodeHeart} />\n        </HeartContainer>\n        {self.state |> List.length >= 5 ?\n           <Wave onFinish={_event => self.send(Reset)} /> : ReasonReact.null}\n        <TriggerContainer onPress={_event => self.send(Click(true))} />\n        <Text style=tempCounterStyle>\n          {ReasonReact.string(string_of_int(self.state |> List.length))}\n        </Text>\n      </View>\n    </ReasonApollo.Provider>,\n};\n\nlet default = ReasonReact.wrapReasonForJs(~component, _ => make([||]));"}]}}
Read message 
{"jsonrpc":"2.0","id":325,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0190734863281ms
➡️ running bsc /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/lanceharper/Repositories/jerk-twitch/client/lib/bs/src/components/App' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src/graphql-types' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/components' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/private' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/graphql_ppx/ppx' -ppx ''\''/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/reactjs_jsx_ppx_2.exe'\''' -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/.lsp/App.ast with pwd /Users/lanceharper/Repositories/jerk-twitch/client
Ident!! ReasonApollo.CreateQuery
Ident!! GetAllJerks
Sending response {"id": 325, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, Pervasives, HeartContainer, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 28, "character": 4}, "end": {"line": 28, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":326,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.00619888305664ms
Sending response {"id": 326, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, Pervasives, HeartContainer, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 28, "character": 4}, "end": {"line": 28, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Running diagnostics for file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re
type error here [1mFile "[1m", line 52, characters 7-26[0m[0m:
[1;31mError[0m: Unbound module GetAllMessagesQuery
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re", "diagnostics": [{"range": {"start": {"line": 51, "character": 7}, "end": {"line": 51, "character": 26}}, "message": "Error: Unbound module GetAllMessagesQuery", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","id":327,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":51,"character":14}}}
[server] Got a method textDocument/hover
[server] processing took 0.0119209289551ms
FINDING /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/lib/bs/src/ReasonReact.cmti src /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/src/ReasonReact.rei
Sending response {"id": 327, "jsonrpc": "2.0", "result": {"range": {"start": {"line": 51, "character": 7}, "end": {"line": 51, "character": 18}}, "contents": {"kind": "markdown", "value": "```\nmodule ReasonReact = {\n  type reactClass\n  type reactElement\n  type reactRef\n  let null: reactElement;\n  let string: string => reactElement;\n  let array: array(reactElement) => reactElement;\n  let refToJsObj: reactRef => Js.t(< .. >);\n  let createElement: (\n  reactClass,\n  ~?props: option(Js.t(< .. >)),\n  array(reactElement)\n) => reactElement;\n  let cloneElement: (\n  reactElement,\n  ~?props: option(Js.t(< .. >)),\n  array(reactElement)\n) => reactElement;\n  type renderNotImplemented = | RenderNotImplemented\n\n  type stateless = unit\n  type noRetainedProps\n  type actionless = unit\n  type update('state, 'retainedProps, 'action) = \n  | NoUpdate\n  | Update('state)\n  | SideEffects(\n    self('state, 'retainedProps, 'action) => unit\n  )\n  | UpdateWithSideEffects(\n    'state,\n    self('state, 'retainedProps, 'action) => unit\n  )\n\n  type self('state, 'retainedProps, 'action) = {\n  handle: 'payload.\n  ('payload -> ('state, 'retainedProps, 'action) self -> unit) ->\n  'payload -> unit,\n  state: 'state,\n  retainedProps: 'retainedProps,\n  send: 'action => unit,\n  onUnmount: unit => unit => unit\n}\n  type reactClassInternal\n  type jsElementWrapped\n  type oldNewSelf('state, 'retainedProps, 'action) = {\n  oldSelf: self('state, 'retainedProps, 'action),\n  newSelf: self('state, 'retainedProps, 'action)\n}\n  type componentSpec(\n  'state,\n  'initialState,\n  'retainedProps,\n  'initialRetainedProps,\n  'action\n) = {\n  debugName: string,\n  reactClassInternal: reactClassInternal,\n  mut handedOffState: Pervasives.ref(option('state)),\n  willReceiveProps: self(\n    'state,\n    'retainedProps,\n    'action\n  ) => 'state,\n  didMount: self('state, 'retainedProps, 'action) => unit,\n  didUpdate: oldNewSelf(\n    'state,\n    'retainedProps,\n    'action\n  ) => unit,\n  willUnmount: self(\n    'state,\n    'retainedProps,\n    'action\n  ) => unit,\n  willUpdate: oldNewSelf(\n    'state,\n    'retainedProps,\n    'action\n  ) => unit,\n  shouldUpdate: oldNewSelf(\n    'state,\n    'retainedProps,\n    'action\n  ) => bool,\n  render: self(\n    'state,\n    'retainedProps,\n    'action\n  ) => reactElement,\n  initialState: unit => 'initialState,\n  retainedProps: 'initialRetainedProps,\n  reducer: ('action, 'state) => update(\n    'state,\n    'retainedProps,\n    'action\n  ),\n  jsElementWrapped: jsElementWrapped\n}\n  type component(\n  'state,\n  'retainedProps,\n  'action\n) = componentSpec(\n  'state,\n  'state,\n  'retainedProps,\n  'retainedProps,\n  'action\n)\n  let statelessComponent: string => componentSpec(\n  stateless,\n  stateless,\n  noRetainedProps,\n  noRetainedProps,\n  actionless\n);\n  let statelessComponentWithRetainedProps: string => componentSpec(\n  stateless,\n  stateless,\n  'retainedProps,\n  noRetainedProps,\n  actionless\n);\n  let reducerComponent: string => componentSpec(\n  'state,\n  stateless,\n  noRetainedProps,\n  noRetainedProps,\n  'action\n);\n  let reducerComponentWithRetainedProps: string => componentSpec(\n  'state,\n  stateless,\n  'retainedProps,\n  noRetainedProps,\n  'action\n);\n  let element: (\n  ~?key: option(string),\n  ~?ref: option(\n    Js.nullable(reactRef) => unit\n  ),\n  component(\n    'state,\n    'retainedProps,\n    'action\n  )\n) => reactElement;\n  type jsPropsToReason(\n  'jsProps,\n  'state,\n  'retainedProps,\n  'action\n) = 'jsProps => component('state, 'retainedProps, 'action)\n  let wrapReasonForJs: (\n  ~component: componentSpec(\n    'state,\n    'initialState,\n    'retainedProps,\n    'initialRetainedProps,\n    'action\n  ),\n  jsPropsToReason(\n    'a,\n    'b,\n    'c,\n    'd\n  )\n) => reactClass;\n  let createDomElement: (\n  string,\n  ~props: Js.t(< .. >),\n  array(reactElement)\n) => reactElement;\n  let wrapJsForReason: (\n  ~reactClass: reactClass,\n  ~props: 'a,\n  'b\n) => component(\n  stateless,\n  noRetainedProps,\n  actionless\n);\n  module Router;\n  let fragment: 'a;\n}\n```"}}}
Read message 
{"jsonrpc":"2.0","id":328,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":51,"character":22}}}
[server] Got a method textDocument/hover
[server] processing took 0.0269412994385ms
Getting global ReasonReact
FINDING /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/lib/bs/src/ReasonReact.cmti src /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/src/ReasonReact.rei
Getting for 1058 in element
Trying for declared Value 1058 in file file:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/src/ReasonReact.rei
Yes!! got it
Sending response {"id": 328, "jsonrpc": "2.0", "result": {"range": {"start": {"line": 51, "character": 19}, "end": {"line": 51, "character": 26}}, "contents": {"kind": "markdown", "value": "```\n(\n  ~?key: option(string),\n  ~?ref: option(\n    Js.nullable(\n      ReasonReact.reactRef\n    ) => unit\n  ),\n  ReasonReact.component(\n    'state,\n    'retainedProps,\n    'action\n  )\n) => ReasonReact.reactElement\n```\n\n<root>/client/node_modules/reason-react/src/ReasonReact.rei"}}}
Read message 
{"jsonrpc":"2.0","id":329,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":51,"character":20}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00882148742676ms
Got a loc for pos
Sending response {"id": 329, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 50, "character": 19}, "end": {"line": 50, "character": 26}}, "kind": 2}, {"range": {"start": {"line": 51, "character": 19}, "end": {"line": 51, "character": 26}}, "kind": 2}]}
Read message 
{"jsonrpc":"2.0","id":330,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":51,"character":20},"end":{"line":51,"character":20}},"context":{"diagnostics":[{"range":{"start":{"line":51,"character":7},"end":{"line":51,"character":26}},"message":"Error: Unbound module GetAllMessagesQuery","severity":1}]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0150203704834ms
Sending response {"id": 330, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":331,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":51,"character":21}}}
[server] Got a method textDocument/hover
[server] processing took 0.0169277191162ms
Getting global ReasonReact
FINDING /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/lib/bs/src/ReasonReact.cmti src /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/src/ReasonReact.rei
Getting for 1058 in element
Trying for declared Value 1058 in file file:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/src/ReasonReact.rei
Yes!! got it
Sending response {"id": 331, "jsonrpc": "2.0", "result": {"range": {"start": {"line": 51, "character": 19}, "end": {"line": 51, "character": 26}}, "contents": {"kind": "markdown", "value": "```\n(\n  ~?key: option(string),\n  ~?ref: option(\n    Js.nullable(\n      ReasonReact.reactRef\n    ) => unit\n  ),\n  ReasonReact.component(\n    'state,\n    'retainedProps,\n    'action\n  )\n) => ReasonReact.reactElement\n```\n\n<root>/client/node_modules/reason-react/src/ReasonReact.rei"}}}
Read message 
{"jsonrpc":"2.0","id":332,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":51,"character":21},"end":{"line":51,"character":21}},"context":{"diagnostics":[{"range":{"start":{"line":51,"character":7},"end":{"line":51,"character":26}},"message":"Error: Unbound module GetAllMessagesQuery","severity":1}]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0190734863281ms
Sending response {"id": 332, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re","version":183},"contentChanges":[{"text":"/* App is the actual entry point for the application. It matches on the route prop to determine which\n   sub-component to render */\nopen BsReactNative;\nopen Twitch;\n\ntype item = {clickedInWave: bool};\n\ntype state = list(item);\n\ntype clicked = bool;\n\ntype action =\n  | Click(clicked)\n  | Reset;\nlet tempCounterStyle = Style.(style([color(String(\"lightblue\"))]));\n\nlet component = ReasonReact.reducerComponent(\"App\");\n\nmodule GetAllJerks = [%graphql {|\n  {\n    getJerks\n  }\n|}];\n\nmodule GetAllJerksQuery = ReasonApollo.CreateQuery(GetAllJerks);\n\nlet styles =\n  StyleSheet.create(\n    Style.{\n      \"explodeHeart\":\n        style([left(Pt(0.)), top(Pt(0.)), position(Absolute)]),\n    },\n  );\n\nlet make = _children => {\n  ...component,\n  didMount: _ => onAuthorized(twitchAuth => Js.log(clientIdGet(twitchAuth))),\n\n  initialState: () => [],\n\n  reducer: (action, state) =>\n    switch (action) {\n    | Click(clicked) =>\n      clicked ?\n        ReasonReact.Update([{clickedInWave: true}, ...state]) :\n        ReasonReact.NoUpdate\n    | Reset => ReasonReact.Update([])\n    },\n\n  render: self =>\n    <ReasonApollo.Provider client=Client.instance>\n      <GetAllJerksQuery>\n      ...{\n        ({result, subscribeToMore}) => switch result {\n            | Loading => <div> {\"Loading\" |> ReasonReact.string} </div>\n            | Error(_e) => <div> {\"Error\" |> ReasonReact.string} </div>\n            | Data(response) => \n              <Messages \n                onLoad={\n                  () => {\n                  let _unsub = subscribeToMore(\n                    ~document=messageAddedASTQuery,\n                    ~updateQuery={(prev, next) => {\n                      let addNewMessageJS = [%bs.raw {|\n                          function(prev, next) {\n                            if(!next.subscriptionData.data || !next.subscriptionData.data.messageAdded)\n                              return prev;\n                            return Object.assign({}, prev, {\n                              messages: prev.messages.concat(next.subscriptionData.data.messageAdded)\n                            });\n                          }\n                      |}];\n                      addNewMessageJS(prev, next);\n                    }},\n                    ()\n                  )\n                }\n                } \n                messages=(response##messages) \n              />\n          } \n      }\n    </GetAllMessagesQuery>\n\n      <View>\n        <HeartContainer>\n          <Heart filled=true style={styles##explodeHeart} />\n          <Heart filled=true style={styles##explodeHeart} />\n        </HeartContainer>\n        {self.state |> List.length >= 5 ?\n           <Wave onFinish={_event => self.send(Reset)} /> : ReasonReact.null}\n        <TriggerContainer onPress={_event => self.send(Click(true))} />\n        <Text style=tempCounterStyle>\n          {ReasonReact.string(string_of_int(self.state |> List.length))}\n        </Text>\n      </View>\n    </ReasonApollo.Provider>,\n};\n\nlet default = ReasonReact.wrapReasonForJs(~component, _ => make([||]));"}]}}
Read message 
{"jsonrpc":"2.0","id":333,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0200271606445ms
➡️ running bsc /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/lanceharper/Repositories/jerk-twitch/client/lib/bs/src/components/App' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src/graphql-types' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/components' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/private' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/graphql_ppx/ppx' -ppx ''\''/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/reactjs_jsx_ppx_2.exe'\''' -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/.lsp/App.ast with pwd /Users/lanceharper/Repositories/jerk-twitch/client
Sending response {"id": 333, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, Pervasives, HeartContainer, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 28, "character": 4}, "end": {"line": 28, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":334,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":51,"character":18},"end":{"line":51,"character":18}},"context":{"diagnostics":[{"range":{"start":{"line":51,"character":7},"end":{"line":51,"character":26}},"message":"Error: Unbound module GetAllMessagesQuery","severity":1}]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00810623168945ms
Sending response {"id": 334, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":335,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0169277191162ms
Sending response {"id": 335, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, Pervasives, HeartContainer, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 28, "character": 4}, "end": {"line": 28, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":336,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":51,"character":21}}}
[server] Got a method textDocument/hover
[server] processing took 0.0128746032715ms
Sending response {"id": 336, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":337,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":51,"character":22}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.0121593475342ms
Sending response {"id": 337, "jsonrpc": "2.0", "result": null}
Running diagnostics for file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re", "diagnostics": [{"range": {"start": {"line": 51, "character": 6}, "end": {"line": 82, "character": 26}}, "message": "Error: Start tag <GetAllJerksQuery> does not match end tag </GetAllMessagesQuery>", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","id":338,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":51,"character":7},"end":{"line":51,"character":23}},"context":{"diagnostics":[{"range":{"start":{"line":51,"character":6},"end":{"line":82,"character":26}},"message":"Error: Start tag <GetAllJerksQuery> does not match end tag </GetAllMessagesQuery>","severity":1}]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.046968460083ms
Sending response {"id": 338, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":339,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":82,"character":21}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.0100135803223ms
Sending response {"id": 339, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re","version":184},"contentChanges":[{"text":"/* App is the actual entry point for the application. It matches on the route prop to determine which\n   sub-component to render */\nopen BsReactNative;\nopen Twitch;\n\ntype item = {clickedInWave: bool};\n\ntype state = list(item);\n\ntype clicked = bool;\n\ntype action =\n  | Click(clicked)\n  | Reset;\nlet tempCounterStyle = Style.(style([color(String(\"lightblue\"))]));\n\nlet component = ReasonReact.reducerComponent(\"App\");\n\nmodule GetAllJerks = [%graphql {|\n  {\n    getJerks\n  }\n|}];\n\nmodule GetAllJerksQuery = ReasonApollo.CreateQuery(GetAllJerks);\n\nlet styles =\n  StyleSheet.create(\n    Style.{\n      \"explodeHeart\":\n        style([left(Pt(0.)), top(Pt(0.)), position(Absolute)]),\n    },\n  );\n\nlet make = _children => {\n  ...component,\n  didMount: _ => onAuthorized(twitchAuth => Js.log(clientIdGet(twitchAuth))),\n\n  initialState: () => [],\n\n  reducer: (action, state) =>\n    switch (action) {\n    | Click(clicked) =>\n      clicked ?\n        ReasonReact.Update([{clickedInWave: true}, ...state]) :\n        ReasonReact.NoUpdate\n    | Reset => ReasonReact.Update([])\n    },\n\n  render: self =>\n    <ReasonApollo.Provider client=Client.instance>\n      <GetAllJerksQuery>\n      ...{\n        ({result, subscribeToMore}) => switch result {\n            | Loading => <div> {\"Loading\" |> ReasonReact.string} </div>\n            | Error(_e) => <div> {\"Error\" |> ReasonReact.string} </div>\n            | Data(response) => \n              <Messages \n                onLoad={\n                  () => {\n                  let _unsub = subscribeToMore(\n                    ~document=messageAddedASTQuery,\n                    ~updateQuery={(prev, next) => {\n                      let addNewMessageJS = [%bs.raw {|\n                          function(prev, next) {\n                            if(!next.subscriptionData.data || !next.subscriptionData.data.messageAdded)\n                              return prev;\n                            return Object.assign({}, prev, {\n                              messages: prev.messages.concat(next.subscriptionData.data.messageAdded)\n                            });\n                          }\n                      |}];\n                      addNewMessageJS(prev, next);\n                    }},\n                    ()\n                  )\n                }\n                } \n                messages=(response##messages) \n              />\n          } \n      }\n    </GetAllJerksQuery>\n\n      <View>\n        <HeartContainer>\n          <Heart filled=true style={styles##explodeHeart} />\n          <Heart filled=true style={styles##explodeHeart} />\n        </HeartContainer>\n        {self.state |> List.length >= 5 ?\n           <Wave onFinish={_event => self.send(Reset)} /> : ReasonReact.null}\n        <TriggerContainer onPress={_event => self.send(Click(true))} />\n        <Text style=tempCounterStyle>\n          {ReasonReact.string(string_of_int(self.state |> List.length))}\n        </Text>\n      </View>\n    </ReasonApollo.Provider>,\n};\n\nlet default = ReasonReact.wrapReasonForJs(~component, _ => make([||]));"}]}}
Read message 
{"jsonrpc":"2.0","id":340,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0159740447998ms
➡️ running bsc /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/lanceharper/Repositories/jerk-twitch/client/lib/bs/src/components/App' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src/graphql-types' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/components' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/private' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/graphql_ppx/ppx' -ppx ''\''/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/reactjs_jsx_ppx_2.exe'\''' -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/.lsp/App.ast with pwd /Users/lanceharper/Repositories/jerk-twitch/client
Ident!! ReasonApollo.CreateQuery
Ident!! GetAllJerks
Sending response {"id": 340, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, Pervasives, HeartContainer, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 28, "character": 4}, "end": {"line": 28, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":341,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":82,"character":22},"end":{"line":82,"character":22}},"context":{"diagnostics":[{"range":{"start":{"line":51,"character":6},"end":{"line":82,"character":26}},"message":"Error: Start tag <GetAllJerksQuery> does not match end tag </GetAllMessagesQuery>","severity":1}]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00810623168945ms
Sending response {"id": 341, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":342,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.00905990600586ms
Sending response {"id": 342, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, Pervasives, HeartContainer, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 28, "character": 4}, "end": {"line": 28, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":343,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":82,"character":22}}}
[server] Got a method textDocument/hover
[server] processing took 0.0100135803223ms
Sending response {"id": 343, "jsonrpc": "2.0", "result": null}
Running diagnostics for file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re
type error here [1mFile "[1m", line 58, characters 15-23[0m[0m:
[1;31mError[0m: Unbound module Messages
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re", "diagnostics": [{"range": {"start": {"line": 57, "character": 15}, "end": {"line": 57, "character": 23}}, "message": "Error: Unbound module Messages", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","id":344,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":82,"character":22},"end":{"line":82,"character":22}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0231266021729ms
Sending response {"id": 344, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":345,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":56,"character":28}}}
[server] Got a method textDocument/hover
[server] processing took 0.0190734863281ms
Sending response {"id": 345, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":346,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":55,"character":31}}}
[server] Got a method textDocument/hover
[server] processing took 0.014066696167ms
Sending response {"id": 346, "jsonrpc": "2.0", "result": {"range": {"start": {"line": 55, "character": 27}, "end": {"line": 55, "character": 31}}, "contents": {"kind": "markdown", "value": "string"}}}
Read message 
{"jsonrpc":"2.0","id":347,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":56,"character":27}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.0178813934326ms
Got a loc for pos
Sending response {"id": 347, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 56, "character": 19}, "end": {"line": 56, "character": 27}}, "kind": 2}]}
Read message 
{"jsonrpc":"2.0","id":348,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":56,"character":27},"end":{"line":56,"character":27}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.02121925354ms
Sending response {"id": 348, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":349,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":55,"character":27}}}
[server] Got a method textDocument/hover
[server] processing took 0.0200271606445ms
Sending response {"id": 349, "jsonrpc": "2.0", "result": {"range": {"start": {"line": 55, "character": 27}, "end": {"line": 55, "character": 31}}, "contents": {"kind": "markdown", "value": "string"}}}
Read message 
{"jsonrpc":"2.0","id":350,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":54,"character":27}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.0119209289551ms
Got a loc for pos
Sending response {"id": 350, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re","version":185},"contentChanges":[{"text":"/* App is the actual entry point for the application. It matches on the route prop to determine which\n   sub-component to render */\nopen BsReactNative;\nopen Twitch;\n\ntype item = {clickedInWave: bool};\n\ntype state = list(item);\n\ntype clicked = bool;\n\ntype action =\n  | Click(clicked)\n  | Reset;\nlet tempCounterStyle = Style.(style([color(String(\"lightblue\"))]));\n\nlet component = ReasonReact.reducerComponent(\"App\");\n\nmodule GetAllJerks = [%graphql {|\n  {\n    getJerks\n  }\n|}];\n\nmodule GetAllJerksQuery = ReasonApollo.CreateQuery(GetAllJerks);\n\nlet styles =\n  StyleSheet.create(\n    Style.{\n      \"explodeHeart\":\n        style([left(Pt(0.)), top(Pt(0.)), position(Absolute)]),\n    },\n  );\n\nlet make = _children => {\n  ...component,\n  didMount: _ => onAuthorized(twitchAuth => Js.log(clientIdGet(twitchAuth))),\n\n  initialState: () => [],\n\n  reducer: (action, state) =>\n    switch (action) {\n    | Click(clicked) =>\n      clicked ?\n        ReasonReact.Update([{clickedInWave: true}, ...state]) :\n        ReasonReact.NoUpdate\n    | Reset => ReasonReact.Update([])\n    },\n\n  render: self =>\n    <ReasonApollo.Provider client=Client.instance>\n      <GetAllJerksQuery>\n      ...{\n        ({result, subscribeToMore}) => switch result {\n            | Loading => <V> {\"Loading\" |> ReasonReact.string} </div>\n            | Error(_e) => <div> {\"Error\" |> ReasonReact.string} </div>\n            | Data(response) => \n              <Messages \n                onLoad={\n                  () => {\n                  let _unsub = subscribeToMore(\n                    ~document=messageAddedASTQuery,\n                    ~updateQuery={(prev, next) => {\n                      let addNewMessageJS = [%bs.raw {|\n                          function(prev, next) {\n                            if(!next.subscriptionData.data || !next.subscriptionData.data.messageAdded)\n                              return prev;\n                            return Object.assign({}, prev, {\n                              messages: prev.messages.concat(next.subscriptionData.data.messageAdded)\n                            });\n                          }\n                      |}];\n                      addNewMessageJS(prev, next);\n                    }},\n                    ()\n                  )\n                }\n                } \n                messages=(response##messages) \n              />\n          } \n      }\n    </GetAllJerksQuery>\n\n      <View>\n        <HeartContainer>\n          <Heart filled=true style={styles##explodeHeart} />\n          <Heart filled=true style={styles##explodeHeart} />\n        </HeartContainer>\n        {self.state |> List.length >= 5 ?\n           <Wave onFinish={_event => self.send(Reset)} /> : ReasonReact.null}\n        <TriggerContainer onPress={_event => self.send(Click(true))} />\n        <Text style=tempCounterStyle>\n          {ReasonReact.string(string_of_int(self.state |> List.length))}\n        </Text>\n      </View>\n    </ReasonApollo.Provider>,\n};\n\nlet default = ReasonReact.wrapReasonForJs(~component, _ => make([||]));"}]}}
Read message 
{"jsonrpc":"2.0","id":351,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":54,"character":27},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.00905990600586ms
Opens folkz > 2 BsReactNative ... Twitch
Package opens Pervasives
Package opens Pervasives
FINDING /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/pervasives.cmti src /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/pervasives.mli
resolving open BsReactNative.place holder
Not local
FINDING /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/BsReactNative.cmt src 
resolving open Twitch.place holder
Not local
FINDING /Users/lanceharper/Repositories/jerk-twitch/client/lib/bs/src/components/App/Twitch.cmt src /Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/Twitch.re
Opens nows 3 file:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/pervasives.mli file:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/BsReactNative.cmt file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/Twitch.re
---------------- LOCAL VAL
 - Completing in file:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/pervasives.mli
 - Completing in file:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/BsReactNative.cmt
 - Completing in file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/Twitch.re
Sending response {"id": 351, "jsonrpc": "2.0", "result": [{"label": "View", "kind": 9, "detail": "module", "documentation": "No docs\n\nfile:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/BsReactNative.cmt:1"}, {"label": "ViewPagerAndroid", "kind": 9, "detail": "module", "documentation": "No docs\n\nfile:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/BsReactNative.cmt:1"}, {"label": "Vibration", "kind": 9, "detail": "module", "documentation": "No docs\n\nfile:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/BsReactNative.cmt:1"}]}
Read message 
{"jsonrpc":"2.0","id":352,"method":"completionItem/resolve","params":{"label":"Vibration","detail":"module","documentation":"No docs\n\nfile:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/BsReactNative.cmt:1","insertTextFormat":1,"kind":9}}
[server] Got a method completionItem/resolve
[server] processing took 0.0169277191162ms
Sending response {"id": 352, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re","version":187},"contentChanges":[{"text":"/* App is the actual entry point for the application. It matches on the route prop to determine which\n   sub-component to render */\nopen BsReactNative;\nopen Twitch;\n\ntype item = {clickedInWave: bool};\n\ntype state = list(item);\n\ntype clicked = bool;\n\ntype action =\n  | Click(clicked)\n  | Reset;\nlet tempCounterStyle = Style.(style([color(String(\"lightblue\"))]));\n\nlet component = ReasonReact.reducerComponent(\"App\");\n\nmodule GetAllJerks = [%graphql {|\n  {\n    getJerks\n  }\n|}];\n\nmodule GetAllJerksQuery = ReasonApollo.CreateQuery(GetAllJerks);\n\nlet styles =\n  StyleSheet.create(\n    Style.{\n      \"explodeHeart\":\n        style([left(Pt(0.)), top(Pt(0.)), position(Absolute)]),\n    },\n  );\n\nlet make = _children => {\n  ...component,\n  didMount: _ => onAuthorized(twitchAuth => Js.log(clientIdGet(twitchAuth))),\n\n  initialState: () => [],\n\n  reducer: (action, state) =>\n    switch (action) {\n    | Click(clicked) =>\n      clicked ?\n        ReasonReact.Update([{clickedInWave: true}, ...state]) :\n        ReasonReact.NoUpdate\n    | Reset => ReasonReact.Update([])\n    },\n\n  render: self =>\n    <ReasonApollo.Provider client=Client.instance>\n      <GetAllJerksQuery>\n      ...{\n        ({result, subscribeToMore}) => switch result {\n            | Loading => <Vie> {\"Loading\" |> ReasonReact.string} </div>\n            | Error(_e) => <div> {\"Error\" |> ReasonReact.string} </div>\n            | Data(response) => \n              <Messages \n                onLoad={\n                  () => {\n                  let _unsub = subscribeToMore(\n                    ~document=messageAddedASTQuery,\n                    ~updateQuery={(prev, next) => {\n                      let addNewMessageJS = [%bs.raw {|\n                          function(prev, next) {\n                            if(!next.subscriptionData.data || !next.subscriptionData.data.messageAdded)\n                              return prev;\n                            return Object.assign({}, prev, {\n                              messages: prev.messages.concat(next.subscriptionData.data.messageAdded)\n                            });\n                          }\n                      |}];\n                      addNewMessageJS(prev, next);\n                    }},\n                    ()\n                  )\n                }\n                } \n                messages=(response##messages) \n              />\n          } \n      }\n    </GetAllJerksQuery>\n\n      <View>\n        <HeartContainer>\n          <Heart filled=true style={styles##explodeHeart} />\n          <Heart filled=true style={styles##explodeHeart} />\n        </HeartContainer>\n        {self.state |> List.length >= 5 ?\n           <Wave onFinish={_event => self.send(Reset)} /> : ReasonReact.null}\n        <TriggerContainer onPress={_event => self.send(Click(true))} />\n        <Text style=tempCounterStyle>\n          {ReasonReact.string(string_of_int(self.state |> List.length))}\n        </Text>\n      </View>\n    </ReasonApollo.Provider>,\n};\n\nlet default = ReasonReact.wrapReasonForJs(~component, _ => make([||]));"}]}}
Read message 
{"jsonrpc":"2.0","id":353,"method":"completionItem/resolve","params":{"label":"View","detail":"module","documentation":"No docs\n\nfile:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/BsReactNative.cmt:1","insertTextFormat":1,"kind":9}}
[server] Got a method completionItem/resolve
[server] processing took 0.00810623168945ms
Sending response {"id": 353, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re","version":188},"contentChanges":[{"text":"/* App is the actual entry point for the application. It matches on the route prop to determine which\n   sub-component to render */\nopen BsReactNative;\nopen Twitch;\n\ntype item = {clickedInWave: bool};\n\ntype state = list(item);\n\ntype clicked = bool;\n\ntype action =\n  | Click(clicked)\n  | Reset;\nlet tempCounterStyle = Style.(style([color(String(\"lightblue\"))]));\n\nlet component = ReasonReact.reducerComponent(\"App\");\n\nmodule GetAllJerks = [%graphql {|\n  {\n    getJerks\n  }\n|}];\n\nmodule GetAllJerksQuery = ReasonApollo.CreateQuery(GetAllJerks);\n\nlet styles =\n  StyleSheet.create(\n    Style.{\n      \"explodeHeart\":\n        style([left(Pt(0.)), top(Pt(0.)), position(Absolute)]),\n    },\n  );\n\nlet make = _children => {\n  ...component,\n  didMount: _ => onAuthorized(twitchAuth => Js.log(clientIdGet(twitchAuth))),\n\n  initialState: () => [],\n\n  reducer: (action, state) =>\n    switch (action) {\n    | Click(clicked) =>\n      clicked ?\n        ReasonReact.Update([{clickedInWave: true}, ...state]) :\n        ReasonReact.NoUpdate\n    | Reset => ReasonReact.Update([])\n    },\n\n  render: self =>\n    <ReasonApollo.Provider client=Client.instance>\n      <GetAllJerksQuery>\n      ...{\n        ({result, subscribeToMore}) => switch result {\n            | Loading => <View> {\"Loading\" |> ReasonReact.string} </div>\n            | Error(_e) => <div> {\"Error\" |> ReasonReact.string} </div>\n            | Data(response) => \n              <Messages \n                onLoad={\n                  () => {\n                  let _unsub = subscribeToMore(\n                    ~document=messageAddedASTQuery,\n                    ~updateQuery={(prev, next) => {\n                      let addNewMessageJS = [%bs.raw {|\n                          function(prev, next) {\n                            if(!next.subscriptionData.data || !next.subscriptionData.data.messageAdded)\n                              return prev;\n                            return Object.assign({}, prev, {\n                              messages: prev.messages.concat(next.subscriptionData.data.messageAdded)\n                            });\n                          }\n                      |}];\n                      addNewMessageJS(prev, next);\n                    }},\n                    ()\n                  )\n                }\n                } \n                messages=(response##messages) \n              />\n          } \n      }\n    </GetAllJerksQuery>\n\n      <View>\n        <HeartContainer>\n          <Heart filled=true style={styles##explodeHeart} />\n          <Heart filled=true style={styles##explodeHeart} />\n        </HeartContainer>\n        {self.state |> List.length >= 5 ?\n           <Wave onFinish={_event => self.send(Reset)} /> : ReasonReact.null}\n        <TriggerContainer onPress={_event => self.send(Click(true))} />\n        <Text style=tempCounterStyle>\n          {ReasonReact.string(string_of_int(self.state |> List.length))}\n        </Text>\n      </View>\n    </ReasonApollo.Provider>,\n};\n\nlet default = ReasonReact.wrapReasonForJs(~component, _ => make([||]));"}]}}
Read message 
{"jsonrpc":"2.0","id":354,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0121593475342ms
➡️ running bsc /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/lanceharper/Repositories/jerk-twitch/client/lib/bs/src/components/App' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src/graphql-types' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/components' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/private' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/graphql_ppx/ppx' -ppx ''\''/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/reactjs_jsx_ppx_2.exe'\''' -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/.lsp/App.ast with pwd /Users/lanceharper/Repositories/jerk-twitch/client
Sending response {"id": 354, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, Pervasives, HeartContainer, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 28, "character": 4}, "end": {"line": 28, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":355,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":54,"character":30},"end":{"line":54,"character":30}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00596046447754ms
Sending response {"id": 355, "jsonrpc": "2.0", "result": null}
Running diagnostics for file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re", "diagnostics": [{"range": {"start": {"line": 54, "character": 25}, "end": {"line": 54, "character": 72}}, "message": "Error: Start tag <View> does not match end tag </div>", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","id":356,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.00905990600586ms
Sending response {"id": 356, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, Pervasives, HeartContainer, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 28, "character": 4}, "end": {"line": 28, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":357,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":54,"character":72}}}
[server] Got a method textDocument/hover
[server] processing took 0.0109672546387ms
Sending response {"id": 357, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":358,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":54,"character":71}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.0271797180176ms
Sending response {"id": 358, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re","version":189},"contentChanges":[{"text":"/* App is the actual entry point for the application. It matches on the route prop to determine which\n   sub-component to render */\nopen BsReactNative;\nopen Twitch;\n\ntype item = {clickedInWave: bool};\n\ntype state = list(item);\n\ntype clicked = bool;\n\ntype action =\n  | Click(clicked)\n  | Reset;\nlet tempCounterStyle = Style.(style([color(String(\"lightblue\"))]));\n\nlet component = ReasonReact.reducerComponent(\"App\");\n\nmodule GetAllJerks = [%graphql {|\n  {\n    getJerks\n  }\n|}];\n\nmodule GetAllJerksQuery = ReasonApollo.CreateQuery(GetAllJerks);\n\nlet styles =\n  StyleSheet.create(\n    Style.{\n      \"explodeHeart\":\n        style([left(Pt(0.)), top(Pt(0.)), position(Absolute)]),\n    },\n  );\n\nlet make = _children => {\n  ...component,\n  didMount: _ => onAuthorized(twitchAuth => Js.log(clientIdGet(twitchAuth))),\n\n  initialState: () => [],\n\n  reducer: (action, state) =>\n    switch (action) {\n    | Click(clicked) =>\n      clicked ?\n        ReasonReact.Update([{clickedInWave: true}, ...state]) :\n        ReasonReact.NoUpdate\n    | Reset => ReasonReact.Update([])\n    },\n\n  render: self =>\n    <ReasonApollo.Provider client=Client.instance>\n      <GetAllJerksQuery>\n      ...{\n        ({result, subscribeToMore}) => switch result {\n            | Loading => <View> {\"Loading\" |> ReasonReact.string} </V>\n            | Error(_e) => <div> {\"Error\" |> ReasonReact.string} </div>\n            | Data(response) => \n              <Messages \n                onLoad={\n                  () => {\n                  let _unsub = subscribeToMore(\n                    ~document=messageAddedASTQuery,\n                    ~updateQuery={(prev, next) => {\n                      let addNewMessageJS = [%bs.raw {|\n                          function(prev, next) {\n                            if(!next.subscriptionData.data || !next.subscriptionData.data.messageAdded)\n                              return prev;\n                            return Object.assign({}, prev, {\n                              messages: prev.messages.concat(next.subscriptionData.data.messageAdded)\n                            });\n                          }\n                      |}];\n                      addNewMessageJS(prev, next);\n                    }},\n                    ()\n                  )\n                }\n                } \n                messages=(response##messages) \n              />\n          } \n      }\n    </GetAllJerksQuery>\n\n      <View>\n        <HeartContainer>\n          <Heart filled=true style={styles##explodeHeart} />\n          <Heart filled=true style={styles##explodeHeart} />\n        </HeartContainer>\n        {self.state |> List.length >= 5 ?\n           <Wave onFinish={_event => self.send(Reset)} /> : ReasonReact.null}\n        <TriggerContainer onPress={_event => self.send(Click(true))} />\n        <Text style=tempCounterStyle>\n          {ReasonReact.string(string_of_int(self.state |> List.length))}\n        </Text>\n      </View>\n    </ReasonApollo.Provider>,\n};\n\nlet default = ReasonReact.wrapReasonForJs(~component, _ => make([||]));"}]}}
Read message 
{"jsonrpc":"2.0","id":359,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":54,"character":69},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.00596046447754ms
Opens folkz > 2 BsReactNative ... Twitch
Package opens Pervasives
Package opens Pervasives
FINDING /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/pervasives.cmti src /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/pervasives.mli
resolving open BsReactNative.place holder
Not local
FINDING /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/BsReactNative.cmt src 
resolving open Twitch.place holder
Not local
FINDING /Users/lanceharper/Repositories/jerk-twitch/client/lib/bs/src/components/App/Twitch.cmt src /Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/Twitch.re
Opens nows 3 file:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/pervasives.mli file:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/BsReactNative.cmt file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/Twitch.re
---------------- LOCAL VAL
 - Completing in file:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/pervasives.mli
 - Completing in file:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/BsReactNative.cmt
 - Completing in file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/Twitch.re
Sending response {"id": 359, "jsonrpc": "2.0", "result": [{"label": "View", "kind": 9, "detail": "module", "documentation": "No docs\n\nfile:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/BsReactNative.cmt:1"}, {"label": "ViewPagerAndroid", "kind": 9, "detail": "module", "documentation": "No docs\n\nfile:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/BsReactNative.cmt:1"}, {"label": "Vibration", "kind": 9, "detail": "module", "documentation": "No docs\n\nfile:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/BsReactNative.cmt:1"}]}
Read message 
{"jsonrpc":"2.0","id":360,"method":"completionItem/resolve","params":{"label":"Vibration","detail":"module","documentation":"No docs\n\nfile:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/BsReactNative.cmt:1","insertTextFormat":1,"kind":9}}
[server] Got a method completionItem/resolve
[server] processing took 0.00786781311035ms
Sending response {"id": 360, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re","version":191},"contentChanges":[{"text":"/* App is the actual entry point for the application. It matches on the route prop to determine which\n   sub-component to render */\nopen BsReactNative;\nopen Twitch;\n\ntype item = {clickedInWave: bool};\n\ntype state = list(item);\n\ntype clicked = bool;\n\ntype action =\n  | Click(clicked)\n  | Reset;\nlet tempCounterStyle = Style.(style([color(String(\"lightblue\"))]));\n\nlet component = ReasonReact.reducerComponent(\"App\");\n\nmodule GetAllJerks = [%graphql {|\n  {\n    getJerks\n  }\n|}];\n\nmodule GetAllJerksQuery = ReasonApollo.CreateQuery(GetAllJerks);\n\nlet styles =\n  StyleSheet.create(\n    Style.{\n      \"explodeHeart\":\n        style([left(Pt(0.)), top(Pt(0.)), position(Absolute)]),\n    },\n  );\n\nlet make = _children => {\n  ...component,\n  didMount: _ => onAuthorized(twitchAuth => Js.log(clientIdGet(twitchAuth))),\n\n  initialState: () => [],\n\n  reducer: (action, state) =>\n    switch (action) {\n    | Click(clicked) =>\n      clicked ?\n        ReasonReact.Update([{clickedInWave: true}, ...state]) :\n        ReasonReact.NoUpdate\n    | Reset => ReasonReact.Update([])\n    },\n\n  render: self =>\n    <ReasonApollo.Provider client=Client.instance>\n      <GetAllJerksQuery>\n      ...{\n        ({result, subscribeToMore}) => switch result {\n            | Loading => <View> {\"Loading\" |> ReasonReact.string} </Vie>\n            | Error(_e) => <div> {\"Error\" |> ReasonReact.string} </div>\n            | Data(response) => \n              <Messages \n                onLoad={\n                  () => {\n                  let _unsub = subscribeToMore(\n                    ~document=messageAddedASTQuery,\n                    ~updateQuery={(prev, next) => {\n                      let addNewMessageJS = [%bs.raw {|\n                          function(prev, next) {\n                            if(!next.subscriptionData.data || !next.subscriptionData.data.messageAdded)\n                              return prev;\n                            return Object.assign({}, prev, {\n                              messages: prev.messages.concat(next.subscriptionData.data.messageAdded)\n                            });\n                          }\n                      |}];\n                      addNewMessageJS(prev, next);\n                    }},\n                    ()\n                  )\n                }\n                } \n                messages=(response##messages) \n              />\n          } \n      }\n    </GetAllJerksQuery>\n\n      <View>\n        <HeartContainer>\n          <Heart filled=true style={styles##explodeHeart} />\n          <Heart filled=true style={styles##explodeHeart} />\n        </HeartContainer>\n        {self.state |> List.length >= 5 ?\n           <Wave onFinish={_event => self.send(Reset)} /> : ReasonReact.null}\n        <TriggerContainer onPress={_event => self.send(Click(true))} />\n        <Text style=tempCounterStyle>\n          {ReasonReact.string(string_of_int(self.state |> List.length))}\n        </Text>\n      </View>\n    </ReasonApollo.Provider>,\n};\n\nlet default = ReasonReact.wrapReasonForJs(~component, _ => make([||]));"}]}}
Read message 
{"jsonrpc":"2.0","id":361,"method":"completionItem/resolve","params":{"label":"View","detail":"module","documentation":"No docs\n\nfile:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/BsReactNative.cmt:1","insertTextFormat":1,"kind":9}}
[server] Got a method completionItem/resolve
[server] processing took 0.00596046447754ms
Sending response {"id": 361, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re","version":192},"contentChanges":[{"text":"/* App is the actual entry point for the application. It matches on the route prop to determine which\n   sub-component to render */\nopen BsReactNative;\nopen Twitch;\n\ntype item = {clickedInWave: bool};\n\ntype state = list(item);\n\ntype clicked = bool;\n\ntype action =\n  | Click(clicked)\n  | Reset;\nlet tempCounterStyle = Style.(style([color(String(\"lightblue\"))]));\n\nlet component = ReasonReact.reducerComponent(\"App\");\n\nmodule GetAllJerks = [%graphql {|\n  {\n    getJerks\n  }\n|}];\n\nmodule GetAllJerksQuery = ReasonApollo.CreateQuery(GetAllJerks);\n\nlet styles =\n  StyleSheet.create(\n    Style.{\n      \"explodeHeart\":\n        style([left(Pt(0.)), top(Pt(0.)), position(Absolute)]),\n    },\n  );\n\nlet make = _children => {\n  ...component,\n  didMount: _ => onAuthorized(twitchAuth => Js.log(clientIdGet(twitchAuth))),\n\n  initialState: () => [],\n\n  reducer: (action, state) =>\n    switch (action) {\n    | Click(clicked) =>\n      clicked ?\n        ReasonReact.Update([{clickedInWave: true}, ...state]) :\n        ReasonReact.NoUpdate\n    | Reset => ReasonReact.Update([])\n    },\n\n  render: self =>\n    <ReasonApollo.Provider client=Client.instance>\n      <GetAllJerksQuery>\n      ...{\n        ({result, subscribeToMore}) => switch result {\n            | Loading => <View> {\"Loading\" |> ReasonReact.string} </View>\n            | Error(_e) => <div> {\"Error\" |> ReasonReact.string} </div>\n            | Data(response) => \n              <Messages \n                onLoad={\n                  () => {\n                  let _unsub = subscribeToMore(\n                    ~document=messageAddedASTQuery,\n                    ~updateQuery={(prev, next) => {\n                      let addNewMessageJS = [%bs.raw {|\n                          function(prev, next) {\n                            if(!next.subscriptionData.data || !next.subscriptionData.data.messageAdded)\n                              return prev;\n                            return Object.assign({}, prev, {\n                              messages: prev.messages.concat(next.subscriptionData.data.messageAdded)\n                            });\n                          }\n                      |}];\n                      addNewMessageJS(prev, next);\n                    }},\n                    ()\n                  )\n                }\n                } \n                messages=(response##messages) \n              />\n          } \n      }\n    </GetAllJerksQuery>\n\n      <View>\n        <HeartContainer>\n          <Heart filled=true style={styles##explodeHeart} />\n          <Heart filled=true style={styles##explodeHeart} />\n        </HeartContainer>\n        {self.state |> List.length >= 5 ?\n           <Wave onFinish={_event => self.send(Reset)} /> : ReasonReact.null}\n        <TriggerContainer onPress={_event => self.send(Click(true))} />\n        <Text style=tempCounterStyle>\n          {ReasonReact.string(string_of_int(self.state |> List.length))}\n        </Text>\n      </View>\n    </ReasonApollo.Provider>,\n};\n\nlet default = ReasonReact.wrapReasonForJs(~component, _ => make([||]));"}]}}
Read message 
{"jsonrpc":"2.0","id":362,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0109672546387ms
➡️ running bsc /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/lanceharper/Repositories/jerk-twitch/client/lib/bs/src/components/App' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src/graphql-types' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/components' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/private' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/graphql_ppx/ppx' -ppx ''\''/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/reactjs_jsx_ppx_2.exe'\''' -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/.lsp/App.ast with pwd /Users/lanceharper/Repositories/jerk-twitch/client
Ident!! ReasonApollo.CreateQuery
Ident!! GetAllJerks
Sending response {"id": 362, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, Pervasives, HeartContainer, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 28, "character": 4}, "end": {"line": 28, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":363,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":54,"character":72},"end":{"line":54,"character":72}},"context":{"diagnostics":[{"range":{"start":{"line":54,"character":25},"end":{"line":54,"character":72}},"message":"Error: Start tag <View> does not match end tag </div>","severity":1}]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00596046447754ms
Sending response {"id": 363, "jsonrpc": "2.0", "result": null}
Running diagnostics for file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re
type error here [1mFile "[1m", line 58, characters 15-23[0m[0m:
[1;31mError[0m: Unbound module Messages
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re", "diagnostics": [{"range": {"start": {"line": 57, "character": 15}, "end": {"line": 57, "character": 23}}, "message": "Error: Unbound module Messages", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","id":364,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0190734863281ms
Sending response {"id": 364, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, Pervasives, HeartContainer, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 28, "character": 4}, "end": {"line": 28, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":365,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":54,"character":29}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00596046447754ms
Got a loc for pos
Sending response {"id": 365, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 54, "character": 26}, "end": {"line": 54, "character": 30}}, "kind": 2}]}
Read message 
{"jsonrpc":"2.0","id":366,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":54,"character":26},"end":{"line":54,"character":30}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0309944152832ms
Sending response {"id": 366, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":367,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":54,"character":29}}}
[server] Got a method textDocument/definition
[server] processing took 0.0128746032715ms
Got a loc for pos
Global defn BsReactNative View.make : Value
FINDING /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/BsReactNative.cmt src 
FINDING /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/components/view-BsReactNative.cmti src /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/view.rei
Got stamp 1014
INCLUDED MODULE
NOT FOUND
Inner uri file:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/view.rei
Sending response {"id": 367, "jsonrpc": "2.0", "result": {"uri": "file:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/view.rei", "range": {"start": {"line": 1, "character": 2}, "end": {"line": 57, "character": 5}}}}
Read message 
{"jsonrpc":"2.0","id":368,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":55,"character":29}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00691413879395ms
Got a loc for pos
Sending response {"id": 368, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re","version":193},"contentChanges":[{"text":"/* App is the actual entry point for the application. It matches on the route prop to determine which\n   sub-component to render */\nopen BsReactNative;\nopen Twitch;\n\ntype item = {clickedInWave: bool};\n\ntype state = list(item);\n\ntype clicked = bool;\n\ntype action =\n  | Click(clicked)\n  | Reset;\nlet tempCounterStyle = Style.(style([color(String(\"lightblue\"))]));\n\nlet component = ReasonReact.reducerComponent(\"App\");\n\nmodule GetAllJerks = [%graphql {|\n  {\n    getJerks\n  }\n|}];\n\nmodule GetAllJerksQuery = ReasonApollo.CreateQuery(GetAllJerks);\n\nlet styles =\n  StyleSheet.create(\n    Style.{\n      \"explodeHeart\":\n        style([left(Pt(0.)), top(Pt(0.)), position(Absolute)]),\n    },\n  );\n\nlet make = _children => {\n  ...component,\n  didMount: _ => onAuthorized(twitchAuth => Js.log(clientIdGet(twitchAuth))),\n\n  initialState: () => [],\n\n  reducer: (action, state) =>\n    switch (action) {\n    | Click(clicked) =>\n      clicked ?\n        ReasonReact.Update([{clickedInWave: true}, ...state]) :\n        ReasonReact.NoUpdate\n    | Reset => ReasonReact.Update([])\n    },\n\n  render: self =>\n    <ReasonApollo.Provider client=Client.instance>\n      <GetAllJerksQuery>\n      ...{\n        ({result, subscribeToMore}) => switch result {\n            | Loading => <View> {\"Loading\" |> ReasonReact.string} </View>\n            | Error(_e) => <View> {\"Error\" |> ReasonReact.string} </div>\n            | Data(response) => \n              <Messages \n                onLoad={\n                  () => {\n                  let _unsub = subscribeToMore(\n                    ~document=messageAddedASTQuery,\n                    ~updateQuery={(prev, next) => {\n                      let addNewMessageJS = [%bs.raw {|\n                          function(prev, next) {\n                            if(!next.subscriptionData.data || !next.subscriptionData.data.messageAdded)\n                              return prev;\n                            return Object.assign({}, prev, {\n                              messages: prev.messages.concat(next.subscriptionData.data.messageAdded)\n                            });\n                          }\n                      |}];\n                      addNewMessageJS(prev, next);\n                    }},\n                    ()\n                  )\n                }\n                } \n                messages=(response##messages) \n              />\n          } \n      }\n    </GetAllJerksQuery>\n\n      <View>\n        <HeartContainer>\n          <Heart filled=true style={styles##explodeHeart} />\n          <Heart filled=true style={styles##explodeHeart} />\n        </HeartContainer>\n        {self.state |> List.length >= 5 ?\n           <Wave onFinish={_event => self.send(Reset)} /> : ReasonReact.null}\n        <TriggerContainer onPress={_event => self.send(Click(true))} />\n        <Text style=tempCounterStyle>\n          {ReasonReact.string(string_of_int(self.state |> List.length))}\n        </Text>\n      </View>\n    </ReasonApollo.Provider>,\n};\n\nlet default = ReasonReact.wrapReasonForJs(~component, _ => make([||]));"}]}}
Read message 
{"jsonrpc":"2.0","id":369,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0109672546387ms
➡️ running bsc /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/lanceharper/Repositories/jerk-twitch/client/lib/bs/src/components/App' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src/graphql-types' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/components' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/private' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/graphql_ppx/ppx' -ppx ''\''/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/reactjs_jsx_ppx_2.exe'\''' -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/.lsp/App.ast with pwd /Users/lanceharper/Repositories/jerk-twitch/client
Sending response {"id": 369, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, Pervasives, HeartContainer, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 28, "character": 4}, "end": {"line": 28, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":370,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":55,"character":32},"end":{"line":55,"character":32}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00500679016113ms
Sending response {"id": 370, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":371,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0178813934326ms
Sending response {"id": 371, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, Pervasives, HeartContainer, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 28, "character": 4}, "end": {"line": 28, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Running diagnostics for file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re", "diagnostics": [{"range": {"start": {"line": 55, "character": 27}, "end": {"line": 55, "character": 72}}, "message": "Error: Start tag <View> does not match end tag </div>", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","id":372,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":55,"character":68}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00715255737305ms
Sending response {"id": 372, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re","version":194},"contentChanges":[{"text":"/* App is the actual entry point for the application. It matches on the route prop to determine which\n   sub-component to render */\nopen BsReactNative;\nopen Twitch;\n\ntype item = {clickedInWave: bool};\n\ntype state = list(item);\n\ntype clicked = bool;\n\ntype action =\n  | Click(clicked)\n  | Reset;\nlet tempCounterStyle = Style.(style([color(String(\"lightblue\"))]));\n\nlet component = ReasonReact.reducerComponent(\"App\");\n\nmodule GetAllJerks = [%graphql {|\n  {\n    getJerks\n  }\n|}];\n\nmodule GetAllJerksQuery = ReasonApollo.CreateQuery(GetAllJerks);\n\nlet styles =\n  StyleSheet.create(\n    Style.{\n      \"explodeHeart\":\n        style([left(Pt(0.)), top(Pt(0.)), position(Absolute)]),\n    },\n  );\n\nlet make = _children => {\n  ...component,\n  didMount: _ => onAuthorized(twitchAuth => Js.log(clientIdGet(twitchAuth))),\n\n  initialState: () => [],\n\n  reducer: (action, state) =>\n    switch (action) {\n    | Click(clicked) =>\n      clicked ?\n        ReasonReact.Update([{clickedInWave: true}, ...state]) :\n        ReasonReact.NoUpdate\n    | Reset => ReasonReact.Update([])\n    },\n\n  render: self =>\n    <ReasonApollo.Provider client=Client.instance>\n      <GetAllJerksQuery>\n      ...{\n        ({result, subscribeToMore}) => switch result {\n            | Loading => <View> {\"Loading\" |> ReasonReact.string} </View>\n            | Error(_e) => <View> {\"Error\" |> ReasonReact.string} </View>\n            | Data(response) => \n              <Messages \n                onLoad={\n                  () => {\n                  let _unsub = subscribeToMore(\n                    ~document=messageAddedASTQuery,\n                    ~updateQuery={(prev, next) => {\n                      let addNewMessageJS = [%bs.raw {|\n                          function(prev, next) {\n                            if(!next.subscriptionData.data || !next.subscriptionData.data.messageAdded)\n                              return prev;\n                            return Object.assign({}, prev, {\n                              messages: prev.messages.concat(next.subscriptionData.data.messageAdded)\n                            });\n                          }\n                      |}];\n                      addNewMessageJS(prev, next);\n                    }},\n                    ()\n                  )\n                }\n                } \n                messages=(response##messages) \n              />\n          } \n      }\n    </GetAllJerksQuery>\n\n      <View>\n        <HeartContainer>\n          <Heart filled=true style={styles##explodeHeart} />\n          <Heart filled=true style={styles##explodeHeart} />\n        </HeartContainer>\n        {self.state |> List.length >= 5 ?\n           <Wave onFinish={_event => self.send(Reset)} /> : ReasonReact.null}\n        <TriggerContainer onPress={_event => self.send(Click(true))} />\n        <Text style=tempCounterStyle>\n          {ReasonReact.string(string_of_int(self.state |> List.length))}\n        </Text>\n      </View>\n    </ReasonApollo.Provider>,\n};\n\nlet default = ReasonReact.wrapReasonForJs(~component, _ => make([||]));"}]}}
Read message 
{"jsonrpc":"2.0","id":373,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.00882148742676ms
➡️ running bsc /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/lanceharper/Repositories/jerk-twitch/client/lib/bs/src/components/App' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src/graphql-types' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/components' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/private' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/graphql_ppx/ppx' -ppx ''\''/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/reactjs_jsx_ppx_2.exe'\''' -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/.lsp/App.ast with pwd /Users/lanceharper/Repositories/jerk-twitch/client
Ident!! ReasonApollo.CreateQuery
Ident!! GetAllJerks
Sending response {"id": 373, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, Pervasives, HeartContainer, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 28, "character": 4}, "end": {"line": 28, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":374,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":55,"character":72},"end":{"line":55,"character":72}},"context":{"diagnostics":[{"range":{"start":{"line":55,"character":27},"end":{"line":55,"character":72}},"message":"Error: Start tag <View> does not match end tag </div>","severity":1}]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00619888305664ms
Sending response {"id": 374, "jsonrpc": "2.0", "result": null}
Running diagnostics for file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re
type error here [1mFile "[1m", line 58, characters 15-23[0m[0m:
[1;31mError[0m: Unbound module Messages
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re", "diagnostics": [{"range": {"start": {"line": 57, "character": 15}, "end": {"line": 57, "character": 23}}, "message": "Error: Unbound module Messages", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","id":375,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0109672546387ms
Sending response {"id": 375, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, Pervasives, HeartContainer, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 28, "character": 4}, "end": {"line": 28, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":376,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":55,"character":72},"end":{"line":55,"character":72}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00905990600586ms
Sending response {"id": 376, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":377,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":63,"character":29}}}
[server] Got a method textDocument/hover
[server] processing took 0.0269412994385ms
Sending response {"id": 377, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":378,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":87,"character":9}}}
[server] Got a method textDocument/hover
[server] processing took 0.0100135803223ms
Sending response {"id": 378, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":379,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":84,"character":6},"end":{"line":95,"character":13}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0109672546387ms
Sending response {"id": 379, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re","version":195},"contentChanges":[{"text":"/* App is the actual entry point for the application. It matches on the route prop to determine which\n   sub-component to render */\nopen BsReactNative;\nopen Twitch;\n\ntype item = {clickedInWave: bool};\n\ntype state = list(item);\n\ntype clicked = bool;\n\ntype action =\n  | Click(clicked)\n  | Reset;\nlet tempCounterStyle = Style.(style([color(String(\"lightblue\"))]));\n\nlet component = ReasonReact.reducerComponent(\"App\");\n\nmodule GetAllJerks = [%graphql {|\n  {\n    getJerks\n  }\n|}];\n\nmodule GetAllJerksQuery = ReasonApollo.CreateQuery(GetAllJerks);\n\nlet styles =\n  StyleSheet.create(\n    Style.{\n      \"explodeHeart\":\n        style([left(Pt(0.)), top(Pt(0.)), position(Absolute)]),\n    },\n  );\n\nlet make = _children => {\n  ...component,\n  didMount: _ => onAuthorized(twitchAuth => Js.log(clientIdGet(twitchAuth))),\n\n  initialState: () => [],\n\n  reducer: (action, state) =>\n    switch (action) {\n    | Click(clicked) =>\n      clicked ?\n        ReasonReact.Update([{clickedInWave: true}, ...state]) :\n        ReasonReact.NoUpdate\n    | Reset => ReasonReact.Update([])\n    },\n\n  render: self =>\n    <ReasonApollo.Provider client=Client.instance>\n      <GetAllJerksQuery>\n      ...{\n        ({result, subscribeToMore}) => switch result {\n            | Loading => <View> {\"Loading\" |> ReasonReact.string} </View>\n            | Error(_e) => <View> {\"Error\" |> ReasonReact.string} </View>\n            | Data(response) => \n              <Messages \n                onLoad={\n                  () => {\n                  let _unsub = subscribeToMore(\n                    ~document=messageAddedASTQuery,\n                    ~updateQuery={(prev, next) => {\n                      let addNewMessageJS = [%bs.raw {|\n                          function(prev, next) {\n                            if(!next.subscriptionData.data || !next.subscriptionData.data.messageAdded)\n                              return prev;\n                            return Object.assign({}, prev, {\n                              messages: prev.messages.concat(next.subscriptionData.data.messageAdded)\n                            });\n                          }\n                      |}];\n                      addNewMessageJS(prev, next);\n                    }},\n                    ()\n                  )\n                }\n                } \n                messages=(response##messages) \n              />\n          } \n      }\n    </GetAllJerksQuery>\n\n      \n    </ReasonApollo.Provider>,\n};\n\nlet default = ReasonReact.wrapReasonForJs(~component, _ => make([||]));"}]}}
Read message 
{"jsonrpc":"2.0","id":380,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.00691413879395ms
➡️ running bsc /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/lanceharper/Repositories/jerk-twitch/client/lib/bs/src/components/App' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src/graphql-types' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/components' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/private' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/graphql_ppx/ppx' -ppx ''\''/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/reactjs_jsx_ppx_2.exe'\''' -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/.lsp/App.ast with pwd /Users/lanceharper/Repositories/jerk-twitch/client
Ident!! ReasonApollo.CreateQuery
Ident!! GetAllJerks
Sending response {"id": 380, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, Pervasives, HeartContainer, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 28, "character": 4}, "end": {"line": 28, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":381,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.00500679016113ms
Sending response {"id": 381, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, Pervasives, HeartContainer, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 28, "character": 4}, "end": {"line": 28, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Running diagnostics for file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re
type error here [1mFile "[1m", line 58, characters 15-23[0m[0m:
[1;31mError[0m: Unbound module Messages
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re", "diagnostics": [{"range": {"start": {"line": 57, "character": 15}, "end": {"line": 57, "character": 23}}, "message": "Error: Unbound module Messages", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","id":382,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":82,"character":23},"end":{"line":82,"character":23}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0119209289551ms
Sending response {"id": 382, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":383,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":57,"character":14}}}
[server] Got a method textDocument/hover
[server] processing took 0.0121593475342ms
FINDING /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/lib/bs/src/ReasonReact.cmti src /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/src/ReasonReact.rei
Sending response {"id": 383, "jsonrpc": "2.0", "result": {"range": {"start": {"line": 57, "character": 4}, "end": {"line": 57, "character": 15}}, "contents": {"kind": "markdown", "value": "```\nmodule ReasonReact = {\n  type reactClass\n  type reactElement\n  type reactRef\n  let null: reactElement;\n  let string: string => reactElement;\n  let array: array(reactElement) => reactElement;\n  let refToJsObj: reactRef => Js.t(< .. >);\n  let createElement: (\n  reactClass,\n  ~?props: option(Js.t(< .. >)),\n  array(reactElement)\n) => reactElement;\n  let cloneElement: (\n  reactElement,\n  ~?props: option(Js.t(< .. >)),\n  array(reactElement)\n) => reactElement;\n  type renderNotImplemented = | RenderNotImplemented\n\n  type stateless = unit\n  type noRetainedProps\n  type actionless = unit\n  type update('state, 'retainedProps, 'action) = \n  | NoUpdate\n  | Update('state)\n  | SideEffects(\n    self('state, 'retainedProps, 'action) => unit\n  )\n  | UpdateWithSideEffects(\n    'state,\n    self('state, 'retainedProps, 'action) => unit\n  )\n\n  type self('state, 'retainedProps, 'action) = {\n  handle: 'payload.\n  ('payload -> ('state, 'retainedProps, 'action) self -> unit) ->\n  'payload -> unit,\n  state: 'state,\n  retainedProps: 'retainedProps,\n  send: 'action => unit,\n  onUnmount: unit => unit => unit\n}\n  type reactClassInternal\n  type jsElementWrapped\n  type oldNewSelf('state, 'retainedProps, 'action) = {\n  oldSelf: self('state, 'retainedProps, 'action),\n  newSelf: self('state, 'retainedProps, 'action)\n}\n  type componentSpec(\n  'state,\n  'initialState,\n  'retainedProps,\n  'initialRetainedProps,\n  'action\n) = {\n  debugName: string,\n  reactClassInternal: reactClassInternal,\n  mut handedOffState: Pervasives.ref(option('state)),\n  willReceiveProps: self(\n    'state,\n    'retainedProps,\n    'action\n  ) => 'state,\n  didMount: self('state, 'retainedProps, 'action) => unit,\n  didUpdate: oldNewSelf(\n    'state,\n    'retainedProps,\n    'action\n  ) => unit,\n  willUnmount: self(\n    'state,\n    'retainedProps,\n    'action\n  ) => unit,\n  willUpdate: oldNewSelf(\n    'state,\n    'retainedProps,\n    'action\n  ) => unit,\n  shouldUpdate: oldNewSelf(\n    'state,\n    'retainedProps,\n    'action\n  ) => bool,\n  render: self(\n    'state,\n    'retainedProps,\n    'action\n  ) => reactElement,\n  initialState: unit => 'initialState,\n  retainedProps: 'initialRetainedProps,\n  reducer: ('action, 'state) => update(\n    'state,\n    'retainedProps,\n    'action\n  ),\n  jsElementWrapped: jsElementWrapped\n}\n  type component(\n  'state,\n  'retainedProps,\n  'action\n) = componentSpec(\n  'state,\n  'state,\n  'retainedProps,\n  'retainedProps,\n  'action\n)\n  let statelessComponent: string => componentSpec(\n  stateless,\n  stateless,\n  noRetainedProps,\n  noRetainedProps,\n  actionless\n);\n  let statelessComponentWithRetainedProps: string => componentSpec(\n  stateless,\n  stateless,\n  'retainedProps,\n  noRetainedProps,\n  actionless\n);\n  let reducerComponent: string => componentSpec(\n  'state,\n  stateless,\n  noRetainedProps,\n  noRetainedProps,\n  'action\n);\n  let reducerComponentWithRetainedProps: string => componentSpec(\n  'state,\n  stateless,\n  'retainedProps,\n  noRetainedProps,\n  'action\n);\n  let element: (\n  ~?key: option(string),\n  ~?ref: option(\n    Js.nullable(reactRef) => unit\n  ),\n  component(\n    'state,\n    'retainedProps,\n    'action\n  )\n) => reactElement;\n  type jsPropsToReason(\n  'jsProps,\n  'state,\n  'retainedProps,\n  'action\n) = 'jsProps => component('state, 'retainedProps, 'action)\n  let wrapReasonForJs: (\n  ~component: componentSpec(\n    'state,\n    'initialState,\n    'retainedProps,\n    'initialRetainedProps,\n    'action\n  ),\n  jsPropsToReason(\n    'a,\n    'b,\n    'c,\n    'd\n  )\n) => reactClass;\n  let createDomElement: (\n  string,\n  ~props: Js.t(< .. >),\n  array(reactElement)\n) => reactElement;\n  let wrapJsForReason: (\n  ~reactClass: reactClass,\n  ~props: 'a,\n  'b\n) => component(\n  stateless,\n  noRetainedProps,\n  actionless\n);\n  module Router;\n  let fragment: 'a;\n}\n```"}}}
Read message 
{"jsonrpc":"2.0","id":384,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":57,"character":14},"end":{"line":70,"character":27}},"context":{"diagnostics":[{"range":{"start":{"line":57,"character":15},"end":{"line":57,"character":23}},"message":"Error: Unbound module Messages","severity":1}]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0190734863281ms
Sending response {"id": 384, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":385,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":70,"character":25}}}
[server] Got a method textDocument/hover
[server] processing took 0.0200271606445ms
Sending response {"id": 385, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":386,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":57,"character":14},"end":{"line":71,"character":26}},"context":{"diagnostics":[{"range":{"start":{"line":57,"character":15},"end":{"line":57,"character":23}},"message":"Error: Unbound module Messages","severity":1}]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0169277191162ms
Sending response {"id": 386, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":387,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":57,"character":14},"end":{"line":79,"character":16}},"context":{"diagnostics":[{"range":{"start":{"line":57,"character":15},"end":{"line":57,"character":23}},"message":"Error: Unbound module Messages","severity":1}]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0169277191162ms
Sending response {"id": 387, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re","version":196},"contentChanges":[{"text":"/* App is the actual entry point for the application. It matches on the route prop to determine which\n   sub-component to render */\nopen BsReactNative;\nopen Twitch;\n\ntype item = {clickedInWave: bool};\n\ntype state = list(item);\n\ntype clicked = bool;\n\ntype action =\n  | Click(clicked)\n  | Reset;\nlet tempCounterStyle = Style.(style([color(String(\"lightblue\"))]));\n\nlet component = ReasonReact.reducerComponent(\"App\");\n\nmodule GetAllJerks = [%graphql {|\n  {\n    getJerks\n  }\n|}];\n\nmodule GetAllJerksQuery = ReasonApollo.CreateQuery(GetAllJerks);\n\nlet styles =\n  StyleSheet.create(\n    Style.{\n      \"explodeHeart\":\n        style([left(Pt(0.)), top(Pt(0.)), position(Absolute)]),\n    },\n  );\n\nlet make = _children => {\n  ...component,\n  didMount: _ => onAuthorized(twitchAuth => Js.log(clientIdGet(twitchAuth))),\n\n  initialState: () => [],\n\n  reducer: (action, state) =>\n    switch (action) {\n    | Click(clicked) =>\n      clicked ?\n        ReasonReact.Update([{clickedInWave: true}, ...state]) :\n        ReasonReact.NoUpdate\n    | Reset => ReasonReact.Update([])\n    },\n\n  render: self =>\n    <ReasonApollo.Provider client=Client.instance>\n      <GetAllJerksQuery>\n      ...{\n        ({result, subscribeToMore}) => switch result {\n            | Loading => <View> {\"Loading\" |> ReasonReact.string} </View>\n            | Error(_e) => <View> {\"Error\" |> ReasonReact.string} </View>\n            | Data(response) => \n              <View>\n        <HeartContainer>\n          <Heart filled=true style={styles##explodeHeart} />\n          <Heart filled=true style={styles##explodeHeart} />\n        </HeartContainer>\n        {self.state |> List.length >= 5 ?\n           <Wave onFinish={_event => self.send(Reset)} /> : ReasonReact.null}\n        <TriggerContainer onPress={_event => self.send(Click(true))} />\n        <Text style=tempCounterStyle>\n          {ReasonReact.string(string_of_int(self.state |> List.length))}\n        </Text>\n      </View>\n          } \n      }\n    </GetAllJerksQuery>\n\n      \n    </ReasonApollo.Provider>,\n};\n\nlet default = ReasonReact.wrapReasonForJs(~component, _ => make([||]));"}]}}
Read message 
{"jsonrpc":"2.0","id":388,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0112056732178ms
➡️ running bsc /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/lanceharper/Repositories/jerk-twitch/client/lib/bs/src/components/App' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src/graphql-types' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/components' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/private' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/graphql_ppx/ppx' -ppx ''\''/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/reactjs_jsx_ppx_2.exe'\''' -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/.lsp/App.ast with pwd /Users/lanceharper/Repositories/jerk-twitch/client
Ident!! ReasonApollo.CreateQuery
Ident!! GetAllJerks
<< Replacing lastDefinitions for file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re
Sending response {"id": 388, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, Pervasives, HeartContainer, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 28, "character": 4}, "end": {"line": 28, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":389,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":68,"character":13},"end":{"line":68,"character":13}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00596046447754ms
Sending response {"id": 389, "jsonrpc": "2.0", "result": null}
Running diagnostics for file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re", "diagnostics": [{"range": {"start": {"line": 53, "character": 18}, "end": {"line": 53, "character": 33}}, "message": "Warning 27: unused variable subscribeToMore.", "severity": 2}, {"range": {"start": {"line": 56, "character": 19}, "end": {"line": 56, "character": 27}}, "message": "Warning 27: unused variable response.", "severity": 2}]}}
Read message 
{"jsonrpc":"2.0","id":390,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0219345092773ms
Sending response {"id": 390, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, Pervasives, HeartContainer, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 28, "character": 4}, "end": {"line": 28, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":391,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":68,"character":13},"end":{"line":68,"character":13}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0100135803223ms
Sending response {"id": 391, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":392,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":62,"character":30}}}
[server] Got a method textDocument/definition
[server] processing took 0.00810623168945ms
Got a loc for pos
Global defn List length : Value
FINDING /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/list.cmti src /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/list.mli
Got stamp 1008
Inner uri file:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/list.mli
Sending response {"id": 392, "jsonrpc": "2.0", "result": {"uri": "file:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/list.mli", "range": {"start": {"line": 26, "character": 4}, "end": {"line": 26, "character": 10}}}}
Read message 
{"jsonrpc":"2.0","id":393,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":62,"character":30}}}
[server] Got a method textDocument/hover
[server] processing took 0.0100135803223ms
Getting global List
FINDING /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/list.cmti src /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/list.mli
Getting for 1008 in length
Trying for declared Value 1008 in file file:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/list.mli
Yes!! got it
Sending response {"id": 393, "jsonrpc": "2.0", "result": {"range": {"start": {"line": 62, "character": 28}, "end": {"line": 62, "character": 34}}, "contents": {"kind": "markdown", "value": "```\nlist('a) => int\n```\n\nReturn the length \\(number of elements\\) of the given list.\n\n\n\n<root>/client/node_modules/bs-platform/lib/ocaml/list.mli"}}}
Read message 
{"jsonrpc":"2.0","id":394,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":56,"character":24}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00786781311035ms
Got a loc for pos
Sending response {"id": 394, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 56, "character": 19}, "end": {"line": 56, "character": 27}}, "kind": 2}]}
Read message 
{"jsonrpc":"2.0","id":395,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":56,"character":19},"end":{"line":56,"character":27}},"context":{"diagnostics":[{"range":{"start":{"line":56,"character":19},"end":{"line":56,"character":27}},"message":"Warning 27: unused variable response.","severity":2}]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.014066696167ms
Sending response {"id": 395, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re","version":197},"contentChanges":[{"text":"/* App is the actual entry point for the application. It matches on the route prop to determine which\n   sub-component to render */\nopen BsReactNative;\nopen Twitch;\n\ntype item = {clickedInWave: bool};\n\ntype state = list(item);\n\ntype clicked = bool;\n\ntype action =\n  | Click(clicked)\n  | Reset;\nlet tempCounterStyle = Style.(style([color(String(\"lightblue\"))]));\n\nlet component = ReasonReact.reducerComponent(\"App\");\n\nmodule GetAllJerks = [%graphql {|\n  {\n    getJerks\n  }\n|}];\n\nmodule GetAllJerksQuery = ReasonApollo.CreateQuery(GetAllJerks);\n\nlet styles =\n  StyleSheet.create(\n    Style.{\n      \"explodeHeart\":\n        style([left(Pt(0.)), top(Pt(0.)), position(Absolute)]),\n    },\n  );\n\nlet make = _children => {\n  ...component,\n  didMount: _ => onAuthorized(twitchAuth => Js.log(clientIdGet(twitchAuth))),\n\n  initialState: () => [],\n\n  reducer: (action, state) =>\n    switch (action) {\n    | Click(clicked) =>\n      clicked ?\n        ReasonReact.Update([{clickedInWave: true}, ...state]) :\n        ReasonReact.NoUpdate\n    | Reset => ReasonReact.Update([])\n    },\n\n  render: self =>\n    <ReasonApollo.Provider client=Client.instance>\n      <GetAllJerksQuery>\n      ...{\n        ({result, subscribeToMore}) => switch result {\n            | Loading => <View> {\"Loading\" |> ReasonReact.string} </View>\n            | Error(_e) => <View> {\"Error\" |> ReasonReact.string} </View>\n            | Data(_) => \n              <View>\n        <HeartContainer>\n          <Heart filled=true style={styles##explodeHeart} />\n          <Heart filled=true style={styles##explodeHeart} />\n        </HeartContainer>\n        {self.state |> List.length >= 5 ?\n           <Wave onFinish={_event => self.send(Reset)} /> : ReasonReact.null}\n        <TriggerContainer onPress={_event => self.send(Click(true))} />\n        <Text style=tempCounterStyle>\n          {ReasonReact.string(string_of_int(self.state |> List.length))}\n        </Text>\n      </View>\n          } \n      }\n    </GetAllJerksQuery>\n\n      \n    </ReasonApollo.Provider>,\n};\n\nlet default = ReasonReact.wrapReasonForJs(~component, _ => make([||]));"}]}}
Read message 
{"jsonrpc":"2.0","id":396,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0109672546387ms
➡️ running bsc /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/lanceharper/Repositories/jerk-twitch/client/lib/bs/src/components/App' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src/graphql-types' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/components' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/private' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/graphql_ppx/ppx' -ppx ''\''/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/reactjs_jsx_ppx_2.exe'\''' -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/.lsp/App.ast with pwd /Users/lanceharper/Repositories/jerk-twitch/client
Ident!! ReasonApollo.CreateQuery
Ident!! GetAllJerks
<< Replacing lastDefinitions for file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re
Sending response {"id": 396, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, Pervasives, HeartContainer, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 28, "character": 4}, "end": {"line": 28, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":397,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":56,"character":20},"end":{"line":56,"character":20}},"context":{"diagnostics":[{"range":{"start":{"line":56,"character":19},"end":{"line":56,"character":27}},"message":"Warning 27: unused variable response.","severity":2}]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00500679016113ms
Sending response {"id": 397, "jsonrpc": "2.0", "result": null}
Running diagnostics for file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re", "diagnostics": [{"range": {"start": {"line": 53, "character": 18}, "end": {"line": 53, "character": 33}}, "message": "Warning 27: unused variable subscribeToMore.", "severity": 2}]}}
Read message 
{"jsonrpc":"2.0","id":398,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0240802764893ms
Sending response {"id": 398, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, Pervasives, HeartContainer, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 28, "character": 4}, "end": {"line": 28, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":399,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":54,"character":26}}}
[server] Got a method textDocument/hover
[server] processing took 0.00882148742676ms
Getting global BsReactNative
FINDING /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/BsReactNative.cmt src 
FINDING /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/components/view-BsReactNative.cmti src /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/view.rei
Getting for 1014 in make
Trying for declared Value 1014 in file file:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/view.rei
Yes!! got it
Sending response {"id": 399, "jsonrpc": "2.0", "result": {"range": {"start": {"line": 54, "character": 26}, "end": {"line": 54, "character": 30}}, "contents": {"kind": "markdown", "value": "```\n(\n  ~?accessibilityLabel: option(string),\n  ~?accessible: option(bool),\n  ~?hitSlop: option(\n    BsReactNative.Types.insets\n  ),\n  ~?onAccessibilityTap: option(\n    unit => unit\n  ),\n  ~?onLayout: option(\n    BsReactNative.RNEvent.NativeLayoutEvent.t => unit\n  ),\n  ~?onMagicTap: option(unit => unit),\n  ~?responderHandlers: option(\n    BsReactNative.Types.touchResponderHandlers\n  ),\n  ~?pointerEvents: option(\n    [ `none | `boxOnly | `auto | `boxNone ]\n  ),\n  ~?removeClippedSubviews: option(bool),\n  ~?style: option(\n    BsReactNative.Style.t\n  ),\n  ~?testID: option(string),\n  ~?accessibilityComponentType: option(\n    [ `button | `none | `radiobutton_checked | `radiobutton_unchecked ]\n  ),\n  ~?accessibilityLiveRegion: option(\n    [ `none | `polite | `assertive ]\n  ),\n  ~?collapsable: option(bool),\n  ~?importantForAccessibility: option(\n    [ `no | `yes | `noHideDescendants | `auto ]\n  ),\n  ~?needsOffscreenAlphaCompositing: option(\n    bool\n  ),\n  ~?renderToHardwareTextureAndroid: option(\n    bool\n  ),\n  ~?accessibilityTraits: option(\n    list(\n      [ `frequentUpdates\n| `adjustable\n| `image\n| `button\n| `none\n| `header\n| `plays\n| `text\n| `startsMedia\n| `link\n| `disabled\n| `pageTurn\n| `selected\n| `summary\n| `search\n| `allowsDirectInteraction\n| `key ]\n    )\n  ),\n  ~?accessibilityViewIsModal: option(\n    bool\n  ),\n  ~?shouldRasterizeIOS: option(bool),\n  array(\n    ReasonReact.reactElement\n  )\n) => ReasonReact.component(\n  ReasonReact.stateless,\n  ReasonReact.noRetainedProps,\n  unit\n)\n```\n\n<root>/client/node_modules/bs-react-native/src/components/view.rei"}}}
Read message 
{"jsonrpc":"2.0","id":400,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":53,"character":17},"end":{"line":53,"character":33}},"context":{"diagnostics":[{"range":{"start":{"line":53,"character":18},"end":{"line":53,"character":33}},"message":"Warning 27: unused variable subscribeToMore.","severity":2}]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0171661376953ms
Sending response {"id": 400, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":401,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":53,"character":33}}}
[server] Got a method textDocument/hover
[server] processing took 0.0109672546387ms
Trying for declared Value 1081 in file file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re
Sending response {"id": 401, "jsonrpc": "2.0", "result": {"range": {"start": {"line": 53, "character": 18}, "end": {"line": 53, "character": 33}}, "contents": {"kind": "markdown", "value": "```\n(\n  ~document: ReasonApolloTypes.queryString,\n  ~?variables: option(Js.Json.t),\n  ~?updateQuery: option(\n    ReasonApolloQuery.updateQuerySubscriptionT\n  ),\n  ~?onError: option(\n    ReasonApolloQuery.onErrorT\n  ),\n  unit,\n  unit\n) => unit\n```\n\n<root>/client/src/components/App/App.re"}}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re","version":198},"contentChanges":[{"text":"/* App is the actual entry point for the application. It matches on the route prop to determine which\n   sub-component to render */\nopen BsReactNative;\nopen Twitch;\n\ntype item = {clickedInWave: bool};\n\ntype state = list(item);\n\ntype clicked = bool;\n\ntype action =\n  | Click(clicked)\n  | Reset;\nlet tempCounterStyle = Style.(style([color(String(\"lightblue\"))]));\n\nlet component = ReasonReact.reducerComponent(\"App\");\n\nmodule GetAllJerks = [%graphql {|\n  {\n    getJerks\n  }\n|}];\n\nmodule GetAllJerksQuery = ReasonApollo.CreateQuery(GetAllJerks);\n\nlet styles =\n  StyleSheet.create(\n    Style.{\n      \"explodeHeart\":\n        style([left(Pt(0.)), top(Pt(0.)), position(Absolute)]),\n    },\n  );\n\nlet make = _children => {\n  ...component,\n  didMount: _ => onAuthorized(twitchAuth => Js.log(clientIdGet(twitchAuth))),\n\n  initialState: () => [],\n\n  reducer: (action, state) =>\n    switch (action) {\n    | Click(clicked) =>\n      clicked ?\n        ReasonReact.Update([{clickedInWave: true}, ...state]) :\n        ReasonReact.NoUpdate\n    | Reset => ReasonReact.Update([])\n    },\n\n  render: self =>\n    <ReasonApollo.Provider client=Client.instance>\n      <GetAllJerksQuery>\n      ...{\n        ({result, }) => switch result {\n            | Loading => <View> {\"Loading\" |> ReasonReact.string} </View>\n            | Error(_e) => <View> {\"Error\" |> ReasonReact.string} </View>\n            | Data(_) => \n              <View>\n        <HeartContainer>\n          <Heart filled=true style={styles##explodeHeart} />\n          <Heart filled=true style={styles##explodeHeart} />\n        </HeartContainer>\n        {self.state |> List.length >= 5 ?\n           <Wave onFinish={_event => self.send(Reset)} /> : ReasonReact.null}\n        <TriggerContainer onPress={_event => self.send(Click(true))} />\n        <Text style=tempCounterStyle>\n          {ReasonReact.string(string_of_int(self.state |> List.length))}\n        </Text>\n      </View>\n          } \n      }\n    </GetAllJerksQuery>\n\n      \n    </ReasonApollo.Provider>,\n};\n\nlet default = ReasonReact.wrapReasonForJs(~component, _ => make([||]));"}]}}
Read message 
{"jsonrpc":"2.0","id":402,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0109672546387ms
➡️ running bsc /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/lanceharper/Repositories/jerk-twitch/client/lib/bs/src/components/App' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src/graphql-types' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/components' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/private' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/graphql_ppx/ppx' -ppx ''\''/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/reactjs_jsx_ppx_2.exe'\''' -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/.lsp/App.ast with pwd /Users/lanceharper/Repositories/jerk-twitch/client
Ident!! ReasonApollo.CreateQuery
Ident!! GetAllJerks
<< Replacing lastDefinitions for file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re
Sending response {"id": 402, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, Pervasives, HeartContainer, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 28, "character": 4}, "end": {"line": 28, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":403,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":53,"character":18},"end":{"line":53,"character":18}},"context":{"diagnostics":[{"range":{"start":{"line":53,"character":18},"end":{"line":53,"character":33}},"message":"Warning 27: unused variable subscribeToMore.","severity":2}]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00596046447754ms
Sending response {"id": 403, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":404,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0109672546387ms
Sending response {"id": 404, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, Pervasives, HeartContainer, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 28, "character": 4}, "end": {"line": 28, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re","version":199},"contentChanges":[{"text":"/* App is the actual entry point for the application. It matches on the route prop to determine which\n   sub-component to render */\nopen BsReactNative;\nopen Twitch;\n\ntype item = {clickedInWave: bool};\n\ntype state = list(item);\n\ntype clicked = bool;\n\ntype action =\n  | Click(clicked)\n  | Reset;\nlet tempCounterStyle = Style.(style([color(String(\"lightblue\"))]));\n\nlet component = ReasonReact.reducerComponent(\"App\");\n\nmodule GetAllJerks = [%graphql {|\n  {\n    getJerks\n  }\n|}];\n\nmodule GetAllJerksQuery = ReasonApollo.CreateQuery(GetAllJerks);\n\nlet styles =\n  StyleSheet.create(\n    Style.{\n      \"explodeHeart\":\n        style([left(Pt(0.)), top(Pt(0.)), position(Absolute)]),\n    },\n  );\n\nlet make = _children => {\n  ...component,\n  didMount: _ => onAuthorized(twitchAuth => Js.log(clientIdGet(twitchAuth))),\n\n  initialState: () => [],\n\n  reducer: (action, state) =>\n    switch (action) {\n    | Click(clicked) =>\n      clicked ?\n        ReasonReact.Update([{clickedInWave: true}, ...state]) :\n        ReasonReact.NoUpdate\n    | Reset => ReasonReact.Update([])\n    },\n\n  render: self =>\n    <ReasonApollo.Provider client=Client.instance>\n      <GetAllJerksQuery>\n      ...{\n        ({result, +}) => switch result {\n            | Loading => <View> {\"Loading\" |> ReasonReact.string} </View>\n            | Error(_e) => <View> {\"Error\" |> ReasonReact.string} </View>\n            | Data(_) => \n              <View>\n        <HeartContainer>\n          <Heart filled=true style={styles##explodeHeart} />\n          <Heart filled=true style={styles##explodeHeart} />\n        </HeartContainer>\n        {self.state |> List.length >= 5 ?\n           <Wave onFinish={_event => self.send(Reset)} /> : ReasonReact.null}\n        <TriggerContainer onPress={_event => self.send(Click(true))} />\n        <Text style=tempCounterStyle>\n          {ReasonReact.string(string_of_int(self.state |> List.length))}\n        </Text>\n      </View>\n          } \n      }\n    </GetAllJerksQuery>\n\n      \n    </ReasonApollo.Provider>,\n};\n\nlet default = ReasonReact.wrapReasonForJs(~component, _ => make([||]));"}]}}
Read message 
{"jsonrpc":"2.0","id":405,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.00810623168945ms
➡️ running bsc /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/lanceharper/Repositories/jerk-twitch/client/lib/bs/src/components/App' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src/graphql-types' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/components' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/private' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/graphql_ppx/ppx' -ppx ''\''/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/reactjs_jsx_ppx_2.exe'\''' -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/.lsp/App.ast with pwd /Users/lanceharper/Repositories/jerk-twitch/client
Sending response {"id": 405, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, Pervasives, HeartContainer, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 28, "character": 4}, "end": {"line": 28, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":406,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":53,"character":19},"end":{"line":53,"character":19}},"context":{"diagnostics":[{"range":{"start":{"line":53,"character":18},"end":{"line":53,"character":33}},"message":"Warning 27: unused variable subscribeToMore.","severity":2}]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00596046447754ms
Sending response {"id": 406, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":407,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0109672546387ms
Sending response {"id": 407, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, Pervasives, HeartContainer, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 28, "character": 4}, "end": {"line": 28, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Running diagnostics for file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re", "diagnostics": [{"range": {"start": {"line": 53, "character": 18}, "end": {"line": 53, "character": 19}}, "message": "Error: Syntax error: '}' expected", "severity": 1}, {"range": {"start": {"line": 53, "character": 9}, "end": {"line": 53, "character": 10}}, "message": "Error: This '{' might be unmatched", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re","version":200},"contentChanges":[{"text":"/* App is the actual entry point for the application. It matches on the route prop to determine which\n   sub-component to render */\nopen BsReactNative;\nopen Twitch;\n\ntype item = {clickedInWave: bool};\n\ntype state = list(item);\n\ntype clicked = bool;\n\ntype action =\n  | Click(clicked)\n  | Reset;\nlet tempCounterStyle = Style.(style([color(String(\"lightblue\"))]));\n\nlet component = ReasonReact.reducerComponent(\"App\");\n\nmodule GetAllJerks = [%graphql {|\n  {\n    getJerks\n  }\n|}];\n\nmodule GetAllJerksQuery = ReasonApollo.CreateQuery(GetAllJerks);\n\nlet styles =\n  StyleSheet.create(\n    Style.{\n      \"explodeHeart\":\n        style([left(Pt(0.)), top(Pt(0.)), position(Absolute)]),\n    },\n  );\n\nlet make = _children => {\n  ...component,\n  didMount: _ => onAuthorized(twitchAuth => Js.log(clientIdGet(twitchAuth))),\n\n  initialState: () => [],\n\n  reducer: (action, state) =>\n    switch (action) {\n    | Click(clicked) =>\n      clicked ?\n        ReasonReact.Update([{clickedInWave: true}, ...state]) :\n        ReasonReact.NoUpdate\n    | Reset => ReasonReact.Update([])\n    },\n\n  render: self =>\n    <ReasonApollo.Provider client=Client.instance>\n      <GetAllJerksQuery>\n      ...{\n        ({result, }) => switch result {\n            | Loading => <View> {\"Loading\" |> ReasonReact.string} </View>\n            | Error(_e) => <View> {\"Error\" |> ReasonReact.string} </View>\n            | Data(_) => \n              <View>\n        <HeartContainer>\n          <Heart filled=true style={styles##explodeHeart} />\n          <Heart filled=true style={styles##explodeHeart} />\n        </HeartContainer>\n        {self.state |> List.length >= 5 ?\n           <Wave onFinish={_event => self.send(Reset)} /> : ReasonReact.null}\n        <TriggerContainer onPress={_event => self.send(Click(true))} />\n        <Text style=tempCounterStyle>\n          {ReasonReact.string(string_of_int(self.state |> List.length))}\n        </Text>\n      </View>\n          } \n      }\n    </GetAllJerksQuery>\n\n      \n    </ReasonApollo.Provider>,\n};\n\nlet default = ReasonReact.wrapReasonForJs(~component, _ => make([||]));"}]}}
Read message 
{"jsonrpc":"2.0","id":408,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0109672546387ms
➡️ running bsc /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/lanceharper/Repositories/jerk-twitch/client/lib/bs/src/components/App' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src/graphql-types' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/components' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/private' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/graphql_ppx/ppx' -ppx ''\''/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/reactjs_jsx_ppx_2.exe'\''' -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/.lsp/App.ast with pwd /Users/lanceharper/Repositories/jerk-twitch/client
Ident!! ReasonApollo.CreateQuery
Ident!! GetAllJerks
<< Replacing lastDefinitions for file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re
Sending response {"id": 408, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, Pervasives, HeartContainer, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 28, "character": 4}, "end": {"line": 28, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":409,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0219345092773ms
Sending response {"id": 409, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, Pervasives, HeartContainer, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 28, "character": 4}, "end": {"line": 28, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":410,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":53,"character":18},"end":{"line":53,"character":18}},"context":{"diagnostics":[{"range":{"start":{"line":53,"character":18},"end":{"line":53,"character":19}},"message":"Error: Syntax error: '}' expected","severity":1}]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0119209289551ms
Sending response {"id": 410, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re","version":201},"contentChanges":[{"text":"/* App is the actual entry point for the application. It matches on the route prop to determine which\n   sub-component to render */\nopen BsReactNative;\nopen Twitch;\n\ntype item = {clickedInWave: bool};\n\ntype state = list(item);\n\ntype clicked = bool;\n\ntype action =\n  | Click(clicked)\n  | Reset;\nlet tempCounterStyle = Style.(style([color(String(\"lightblue\"))]));\n\nlet component = ReasonReact.reducerComponent(\"App\");\n\nmodule GetAllJerks = [%graphql {|\n  {\n    getJerks\n  }\n|}];\n\nmodule GetAllJerksQuery = ReasonApollo.CreateQuery(GetAllJerks);\n\nlet styles =\n  StyleSheet.create(\n    Style.{\n      \"explodeHeart\":\n        style([left(Pt(0.)), top(Pt(0.)), position(Absolute)]),\n    },\n  );\n\nlet make = _children => {\n  ...component,\n  didMount: _ => onAuthorized(twitchAuth => Js.log(clientIdGet(twitchAuth))),\n\n  initialState: () => [],\n\n  reducer: (action, state) =>\n    switch (action) {\n    | Click(clicked) =>\n      clicked ?\n        ReasonReact.Update([{clickedInWave: true}, ...state]) :\n        ReasonReact.NoUpdate\n    | Reset => ReasonReact.Update([])\n    },\n\n  render: self =>\n    <ReasonApollo.Provider client=Client.instance>\n      <GetAllJerksQuery>\n      ...{\n        ({result, _}) => switch result {\n            | Loading => <View> {\"Loading\" |> ReasonReact.string} </View>\n            | Error(_e) => <View> {\"Error\" |> ReasonReact.string} </View>\n            | Data(_) => \n              <View>\n        <HeartContainer>\n          <Heart filled=true style={styles##explodeHeart} />\n          <Heart filled=true style={styles##explodeHeart} />\n        </HeartContainer>\n        {self.state |> List.length >= 5 ?\n           <Wave onFinish={_event => self.send(Reset)} /> : ReasonReact.null}\n        <TriggerContainer onPress={_event => self.send(Click(true))} />\n        <Text style=tempCounterStyle>\n          {ReasonReact.string(string_of_int(self.state |> List.length))}\n        </Text>\n      </View>\n          } \n      }\n    </GetAllJerksQuery>\n\n      \n    </ReasonApollo.Provider>,\n};\n\nlet default = ReasonReact.wrapReasonForJs(~component, _ => make([||]));"}]}}
Read message 
{"jsonrpc":"2.0","id":411,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":53,"character":19},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.00500679016113ms
Opens folkz > 2 BsReactNative ... Twitch
Package opens Pervasives
Package opens Pervasives
FINDING /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/pervasives.cmti src /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/pervasives.mli
resolving open BsReactNative.place holder
Not local
FINDING /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/BsReactNative.cmt src 
resolving open Twitch.place holder
Not local
FINDING /Users/lanceharper/Repositories/jerk-twitch/client/lib/bs/src/components/App/Twitch.cmt src /Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/Twitch.re
Opens nows 3 file:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/pervasives.mli file:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/BsReactNative.cmt file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/Twitch.re
---------------- LOCAL VAL
 - Completing in file:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/pervasives.mli
 -- not capitalized
 - Completing in file:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/BsReactNative.cmt
 -- not capitalized
 - Completing in file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/Twitch.re
 -- not capitalized
Sending response {"id": 411, "jsonrpc": "2.0", "result": [{"label": "_children", "kind": 12, "detail": "'a", "documentation": "No docs\n\nfile:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re:35"}, {"label": "__LOC_OF__", "kind": 12, "detail": "'a => (string, 'a)", "documentation": "`__LOC_OF__ expr` returns a pair `(loc, expr)` where `loc` is the location of `expr` in the file currently being parsed by the compiler, with the standard error format of OCaml: \"File %S, line %d, characters %d-%d\".\n\nSince: 4.02.0\n\nfile:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/pervasives.mli:182"}, {"label": "__MODULE__", "kind": 12, "detail": "string", "documentation": "`__LINE__` returns the line number at which this expression appears in the file currently being parsed by the compiler.\n\nSince: 4.02.0\n\nfile:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/pervasives.mli:168"}, {"label": "__LINE__", "kind": 12, "detail": "int", "documentation": "`__FILE__` returns the name of the file currently being parsed by the compiler.\n\nSince: 4.02.0\n\nfile:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/pervasives.mli:163"}, {"label": "__LINE_OF__", "kind": 12, "detail": "'a => (int, 'a)", "documentation": "`__LOC_OF__ expr` returns a pair `(loc, expr)` where `loc` is the location of `expr` in the file currently being parsed by the compiler, with the standard error format of OCaml: \"File %S, line %d, characters %d-%d\".\n\nSince: 4.02.0\n\nfile:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/pervasives.mli:189"}, {"label": "__POS_OF__", "kind": 12, "detail": "'a => ((string, int, int, int), 'a)", "documentation": "`__LINE__ expr` returns a pair `(line, expr)`, where `line` is the line number at which the expression `expr` appears in the file currently being parsed by the compiler.\n\nSince: 4.02.0\n\nfile:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/pervasives.mli:195"}, {"label": "__LOC__", "kind": 12, "detail": "string", "documentation": "`__LOC__` returns the location at which this expression appears in the file currently being parsed by the compiler, with the standard error format of OCaml: \"File %S, line %d, characters %d-%d\".\n\nSince: 4.02.0\n\nfile:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/pervasives.mli:152"}, {"label": "__POS__", "kind": 12, "detail": "(string, int, int, int)", "documentation": "`__MODULE__` returns the module name of the file being parsed by the compiler.\n\nSince: 4.02.0\n\nfile:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/pervasives.mli:173"}, {"label": "__FILE__", "kind": 12, "detail": "string", "documentation": "`__LOC__` returns the location at which this expression appears in the file currently being parsed by the compiler, with the standard error format of OCaml: \"File %S, line %d, characters %d-%d\".\n\nSince: 4.02.0\n\nfile:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/pervasives.mli:158"}]}
Read message 
{"jsonrpc":"2.0","id":412,"method":"completionItem/resolve","params":{"label":"__FILE__","detail":"string","documentation":"`__LOC__` returns the location at which this expression appears in the file currently being parsed by the compiler, with the standard error format of OCaml: \"File %S, line %d, characters %d-%d\".\n\nSince: 4.02.0\n\nfile:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/pervasives.mli:158","insertTextFormat":1,"kind":12}}
[server] Got a method completionItem/resolve
[server] processing took 0.00786781311035ms
Sending response {"id": 412, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":413,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0190734863281ms
➡️ running bsc /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/lanceharper/Repositories/jerk-twitch/client/lib/bs/src/components/App' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src/graphql-types' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/components' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/private' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/graphql_ppx/ppx' -ppx ''\''/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/reactjs_jsx_ppx_2.exe'\''' -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/.lsp/App.ast with pwd /Users/lanceharper/Repositories/jerk-twitch/client
Ident!! ReasonApollo.CreateQuery
Ident!! GetAllJerks
<< Replacing lastDefinitions for file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re
Sending response {"id": 413, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, Pervasives, HeartContainer, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 28, "character": 4}, "end": {"line": 28, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":414,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":53,"character":19},"end":{"line":53,"character":19}},"context":{"diagnostics":[{"range":{"start":{"line":53,"character":18},"end":{"line":53,"character":19}},"message":"Error: Syntax error: '}' expected","severity":1}]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00596046447754ms
Sending response {"id": 414, "jsonrpc": "2.0", "result": null}
Running diagnostics for file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re", "diagnostics": []}}
Read message 
{"jsonrpc":"2.0","id":415,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0109672546387ms
Sending response {"id": 415, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, Pervasives, HeartContainer, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 28, "character": 4}, "end": {"line": 28, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":416,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":53,"character":19},"end":{"line":53,"character":19}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0479221343994ms
Sending response {"id": 416, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":417,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":56,"character":13},"end":{"line":56,"character":13}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0119209289551ms
Sending response {"id": 417, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":418,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":62,"character":30}}}
[server] Got a method textDocument/hover
[server] processing took 0.0112056732178ms
Getting global List
FINDING /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/list.cmti src /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/list.mli
Getting for 1008 in length
Trying for declared Value 1008 in file file:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/list.mli
Yes!! got it
Sending response {"id": 418, "jsonrpc": "2.0", "result": {"range": {"start": {"line": 62, "character": 28}, "end": {"line": 62, "character": 34}}, "contents": {"kind": "markdown", "value": "```\nlist('a) => int\n```\n\nReturn the length \\(number of elements\\) of the given list.\n\n\n\n<root>/client/node_modules/bs-platform/lib/ocaml/list.mli"}}}
Read message 
{"jsonrpc":"2.0","id":419,"method":"textDocument/formatting","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"options":{"tabSize":2,"insertSpaces":true}}}
[server] Got a method textDocument/formatting
[server] processing took 0.0109672546387ms
Sending response {"id": 419, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 79, "character": 0}}, "newText": "/* App is the actual entry point for the application. It matches on the route prop to determine which\n   sub-component to render */\nopen BsReactNative;\nopen Twitch;\n\ntype item = {clickedInWave: bool};\n\ntype state = list(item);\n\ntype clicked = bool;\n\ntype action =\n  | Click(clicked)\n  | Reset;\nlet tempCounterStyle = Style.(style([color(String(\"lightblue\"))]));\n\nlet component = ReasonReact.reducerComponent(\"App\");\n\nmodule GetAllJerks = [%graphql {|\n  {\n    getJerks\n  }\n|}];\n\nmodule GetAllJerksQuery = ReasonApollo.CreateQuery(GetAllJerks);\n\nlet styles =\n  StyleSheet.create(\n    Style.{\n      \"explodeHeart\":\n        style([left(Pt(0.)), top(Pt(0.)), position(Absolute)]),\n    },\n  );\n\nlet make = _children => {\n  ...component,\n  didMount: _ => onAuthorized(twitchAuth => Js.log(clientIdGet(twitchAuth))),\n\n  initialState: () => [],\n\n  reducer: (action, state) =>\n    switch (action) {\n    | Click(clicked) =>\n      clicked ?\n        ReasonReact.Update([{clickedInWave: true}, ...state]) :\n        ReasonReact.NoUpdate\n    | Reset => ReasonReact.Update([])\n    },\n\n  render: self =>\n    <ReasonApollo.Provider client=Client.instance>\n      <GetAllJerksQuery>\n        ...{({result, _}) =>\n          switch (result) {\n          | Loading => <View> {\"Loading\" |> ReasonReact.string} </View>\n          | Error(_e) => <View> {\"Error\" |> ReasonReact.string} </View>\n          | Data(_) =>\n            <View>\n              <HeartContainer>\n                <Heart filled=true style={styles##explodeHeart} />\n                <Heart filled=true style={styles##explodeHeart} />\n              </HeartContainer>\n              {self.state |> List.length >= 5 ?\n                 <Wave onFinish={_event => self.send(Reset)} /> :\n                 ReasonReact.null}\n              <TriggerContainer onPress={_event => self.send(Click(true))} />\n              <Text style=tempCounterStyle>\n                {ReasonReact.string(string_of_int(self.state |> List.length))}\n              </Text>\n            </View>\n          }\n        }\n      </GetAllJerksQuery>\n    </ReasonApollo.Provider>,\n};\n\nlet default = ReasonReact.wrapReasonForJs(~component, _ => make([||]));"}]}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re","version":202},"contentChanges":[{"text":"/* App is the actual entry point for the application. It matches on the route prop to determine which\n   sub-component to render */\nopen BsReactNative;\nopen Twitch;\n\ntype item = {clickedInWave: bool};\n\ntype state = list(item);\n\ntype clicked = bool;\n\ntype action =\n  | Click(clicked)\n  | Reset;\nlet tempCounterStyle = Style.(style([color(String(\"lightblue\"))]));\n\nlet component = ReasonReact.reducerComponent(\"App\");\n\nmodule GetAllJerks = [%graphql {|\n  {\n    getJerks\n  }\n|}];\n\nmodule GetAllJerksQuery = ReasonApollo.CreateQuery(GetAllJerks);\n\nlet styles =\n  StyleSheet.create(\n    Style.{\n      \"explodeHeart\":\n        style([left(Pt(0.)), top(Pt(0.)), position(Absolute)]),\n    },\n  );\n\nlet make = _children => {\n  ...component,\n  didMount: _ => onAuthorized(twitchAuth => Js.log(clientIdGet(twitchAuth))),\n\n  initialState: () => [],\n\n  reducer: (action, state) =>\n    switch (action) {\n    | Click(clicked) =>\n      clicked ?\n        ReasonReact.Update([{clickedInWave: true}, ...state]) :\n        ReasonReact.NoUpdate\n    | Reset => ReasonReact.Update([])\n    },\n\n  render: self =>\n    <ReasonApollo.Provider client=Client.instance>\n      <GetAllJerksQuery>\n        ...{({result, _}) =>\n          switch (result) {\n          | Loading => <View> {\"Loading\" |> ReasonReact.string} </View>\n          | Error(_e) => <View> {\"Error\" |> ReasonReact.string} </View>\n          | Data(_) =>\n            <View>\n              <HeartContainer>\n                <Heart filled=true style={styles##explodeHeart} />\n                <Heart filled=true style={styles##explodeHeart} />\n              </HeartContainer>\n              {self.state |> List.length >= 5 ?\n                 <Wave onFinish={_event => self.send(Reset)} /> :\n                 ReasonReact.null}\n              <TriggerContainer onPress={_event => self.send(Click(true))} />\n              <Text style=tempCounterStyle>\n                {ReasonReact.string(string_of_int(self.state |> List.length))}\n              </Text>\n            </View>\n          }\n        }\n      </GetAllJerksQuery>\n    </ReasonApollo.Provider>,\n};\n\nlet default = ReasonReact.wrapReasonForJs(~component, _ => make([||]));"}]}}
Read message 
{"jsonrpc":"2.0","id":420,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0209808349609ms
➡️ running bsc /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/lanceharper/Repositories/jerk-twitch/client/lib/bs/src/components/App' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src/graphql-types' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/components' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/private' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/graphql_ppx/ppx' -ppx ''\''/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/reactjs_jsx_ppx_2.exe'\''' -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/.lsp/App.ast with pwd /Users/lanceharper/Repositories/jerk-twitch/client
Ident!! ReasonApollo.CreateQuery
Ident!! GetAllJerks
<< Replacing lastDefinitions for file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re
Sending response {"id": 420, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, Pervasives, HeartContainer, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 28, "character": 4}, "end": {"line": 28, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":421,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":56,"character":11},"end":{"line":56,"character":11}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00810623168945ms
Sending response {"id": 421, "jsonrpc": "2.0", "result": null}
Running diagnostics for file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re", "diagnostics": []}}
Read message 
{"jsonrpc":"2.0","id":422,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.018835067749ms
Sending response {"id": 422, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, Pervasives, HeartContainer, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 28, "character": 4}, "end": {"line": 28, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":423,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":55,"character":30}}}
[server] Got a method textDocument/hover
[server] processing took 0.00810623168945ms
Getting global BsReactNative
FINDING /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/BsReactNative.cmt src 
FINDING /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/components/view-BsReactNative.cmti src /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/view.rei
Getting for 1014 in make
Trying for declared Value 1014 in file file:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/view.rei
Yes!! got it
Sending response {"id": 423, "jsonrpc": "2.0", "result": {"range": {"start": {"line": 55, "character": 26}, "end": {"line": 55, "character": 30}}, "contents": {"kind": "markdown", "value": "```\n(\n  ~?accessibilityLabel: option(string),\n  ~?accessible: option(bool),\n  ~?hitSlop: option(\n    BsReactNative.Types.insets\n  ),\n  ~?onAccessibilityTap: option(\n    unit => unit\n  ),\n  ~?onLayout: option(\n    BsReactNative.RNEvent.NativeLayoutEvent.t => unit\n  ),\n  ~?onMagicTap: option(unit => unit),\n  ~?responderHandlers: option(\n    BsReactNative.Types.touchResponderHandlers\n  ),\n  ~?pointerEvents: option(\n    [ `none | `boxOnly | `auto | `boxNone ]\n  ),\n  ~?removeClippedSubviews: option(bool),\n  ~?style: option(\n    BsReactNative.Style.t\n  ),\n  ~?testID: option(string),\n  ~?accessibilityComponentType: option(\n    [ `button | `none | `radiobutton_checked | `radiobutton_unchecked ]\n  ),\n  ~?accessibilityLiveRegion: option(\n    [ `none | `polite | `assertive ]\n  ),\n  ~?collapsable: option(bool),\n  ~?importantForAccessibility: option(\n    [ `no | `yes | `noHideDescendants | `auto ]\n  ),\n  ~?needsOffscreenAlphaCompositing: option(\n    bool\n  ),\n  ~?renderToHardwareTextureAndroid: option(\n    bool\n  ),\n  ~?accessibilityTraits: option(\n    list(\n      [ `frequentUpdates\n| `adjustable\n| `image\n| `button\n| `none\n| `header\n| `plays\n| `text\n| `startsMedia\n| `link\n| `disabled\n| `pageTurn\n| `selected\n| `summary\n| `search\n| `allowsDirectInteraction\n| `key ]\n    )\n  ),\n  ~?accessibilityViewIsModal: option(\n    bool\n  ),\n  ~?shouldRasterizeIOS: option(bool),\n  array(\n    ReasonReact.reactElement\n  )\n) => ReasonReact.component(\n  ReasonReact.stateless,\n  ReasonReact.noRetainedProps,\n  unit\n)\n```\n\n<root>/client/node_modules/bs-react-native/src/components/view.rei"}}}
Read message 
{"jsonrpc":"2.0","id":424,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":54,"character":28}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.0109672546387ms
Got a loc for pos
Sending response {"id": 424, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 57, "character": 13}, "end": {"line": 57, "character": 17}}, "kind": 2}, {"range": {"start": {"line": 55, "character": 26}, "end": {"line": 55, "character": 30}}, "kind": 2}, {"range": {"start": {"line": 54, "character": 24}, "end": {"line": 54, "character": 28}}, "kind": 2}]}
Read message 
{"jsonrpc":"2.0","id":425,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":54,"character":28},"end":{"line":54,"character":28}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0150203704834ms
Sending response {"id": 425, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":426,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":54,"character":27}}}
[server] Got a method textDocument/hover
[server] processing took 0.00905990600586ms
Getting global BsReactNative
FINDING /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/BsReactNative.cmt src 
FINDING /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/components/view-BsReactNative.cmti src /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/view.rei
Getting for 1014 in make
Trying for declared Value 1014 in file file:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/src/components/view.rei
Yes!! got it
Sending response {"id": 426, "jsonrpc": "2.0", "result": {"range": {"start": {"line": 54, "character": 24}, "end": {"line": 54, "character": 28}}, "contents": {"kind": "markdown", "value": "```\n(\n  ~?accessibilityLabel: option(string),\n  ~?accessible: option(bool),\n  ~?hitSlop: option(\n    BsReactNative.Types.insets\n  ),\n  ~?onAccessibilityTap: option(\n    unit => unit\n  ),\n  ~?onLayout: option(\n    BsReactNative.RNEvent.NativeLayoutEvent.t => unit\n  ),\n  ~?onMagicTap: option(unit => unit),\n  ~?responderHandlers: option(\n    BsReactNative.Types.touchResponderHandlers\n  ),\n  ~?pointerEvents: option(\n    [ `none | `boxOnly | `auto | `boxNone ]\n  ),\n  ~?removeClippedSubviews: option(bool),\n  ~?style: option(\n    BsReactNative.Style.t\n  ),\n  ~?testID: option(string),\n  ~?accessibilityComponentType: option(\n    [ `button | `none | `radiobutton_checked | `radiobutton_unchecked ]\n  ),\n  ~?accessibilityLiveRegion: option(\n    [ `none | `polite | `assertive ]\n  ),\n  ~?collapsable: option(bool),\n  ~?importantForAccessibility: option(\n    [ `no | `yes | `noHideDescendants | `auto ]\n  ),\n  ~?needsOffscreenAlphaCompositing: option(\n    bool\n  ),\n  ~?renderToHardwareTextureAndroid: option(\n    bool\n  ),\n  ~?accessibilityTraits: option(\n    list(\n      [ `frequentUpdates\n| `adjustable\n| `image\n| `button\n| `none\n| `header\n| `plays\n| `text\n| `startsMedia\n| `link\n| `disabled\n| `pageTurn\n| `selected\n| `summary\n| `search\n| `allowsDirectInteraction\n| `key ]\n    )\n  ),\n  ~?accessibilityViewIsModal: option(\n    bool\n  ),\n  ~?shouldRasterizeIOS: option(bool),\n  array(\n    ReasonReact.reactElement\n  )\n) => ReasonReact.component(\n  ReasonReact.stateless,\n  ReasonReact.noRetainedProps,\n  unit\n)\n```\n\n<root>/client/node_modules/bs-react-native/src/components/view.rei"}}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re","version":203},"contentChanges":[{"text":"/* App is the actual entry point for the application. It matches on the route prop to determine which\n   sub-component to render */\nopen BsReactNative;\nopen Twitch;\n\ntype item = {clickedInWave: bool};\n\ntype state = list(item);\n\ntype clicked = bool;\n\ntype action =\n  | Click(clicked)\n  | Reset;\nlet tempCounterStyle = Style.(style([color(String(\"lightblue\"))]));\n\nlet component = ReasonReact.reducerComponent(\"App\");\n\nmodule GetAllJerks = [%graphql {|\n  {\n    getJerks\n  }\n|}];\n\nmodule GetAllJerksQuery = ReasonApollo.CreateQuery(GetAllJerks);\n\nlet styles =\n  StyleSheet.create(\n    Style.{\n      \"explodeHeart\":\n        style([left(Pt(0.)), top(Pt(0.)), position(Absolute)]),\n    },\n  );\n\nlet make = _children => {\n  ...component,\n  didMount: _ => onAuthorized(twitchAuth => Js.log(clientIdGet(twitchAuth))),\n\n  initialState: () => [],\n\n  reducer: (action, state) =>\n    switch (action) {\n    | Click(clicked) =>\n      clicked ?\n        ReasonReact.Update([{clickedInWave: true}, ...state]) :\n        ReasonReact.NoUpdate\n    | Reset => ReasonReact.Update([])\n    },\n\n  render: self =>\n    <ReasonApollo.Provider client=Client.instance>\n      <GetAllJerksQuery>\n        ...{({result, _}) =>\n          switch (result) {\n          | Loading => <T> {\"Loading\" |> ReasonReact.string} </View>\n          | Error(_e) => <View> {\"Error\" |> ReasonReact.string} </View>\n          | Data(_) =>\n            <View>\n              <HeartContainer>\n                <Heart filled=true style={styles##explodeHeart} />\n                <Heart filled=true style={styles##explodeHeart} />\n              </HeartContainer>\n              {self.state |> List.length >= 5 ?\n                 <Wave onFinish={_event => self.send(Reset)} /> :\n                 ReasonReact.null}\n              <TriggerContainer onPress={_event => self.send(Click(true))} />\n              <Text style=tempCounterStyle>\n                {ReasonReact.string(string_of_int(self.state |> List.length))}\n              </Text>\n            </View>\n          }\n        }\n      </GetAllJerksQuery>\n    </ReasonApollo.Provider>,\n};\n\nlet default = ReasonReact.wrapReasonForJs(~component, _ => make([||]));"}]}}
Read message 
{"jsonrpc":"2.0","id":427,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":54,"character":25},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.0100135803223ms
Opens folkz > 2 BsReactNative ... Twitch
Package opens Pervasives
Package opens Pervasives
FINDING /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/pervasives.cmti src /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/pervasives.mli
resolving open BsReactNative.place holder
Not local
FINDING /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/BsReactNative.cmt src 
resolving open Twitch.place holder
Not local
FINDING /Users/lanceharper/Repositories/jerk-twitch/client/lib/bs/src/components/App/Twitch.cmt src /Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/Twitch.re
Opens nows 3 file:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/pervasives.mli file:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/BsReactNative.cmt file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/Twitch.re
---------------- LOCAL VAL
 - Completing in file:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/pervasives.mli
 - Completing in file:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/BsReactNative.cmt
 - Completing in file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/Twitch.re
Sending response {"id": 427, "jsonrpc": "2.0", "result": [{"label": "Text", "kind": 9, "detail": "module", "documentation": "No docs\n\nfile:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/BsReactNative.cmt:1"}, {"label": "TouchableHighlight", "kind": 9, "detail": "module", "documentation": "No docs\n\nfile:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/BsReactNative.cmt:1"}, {"label": "ToastAndroid", "kind": 9, "detail": "module", "documentation": "No docs\n\nfile:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/BsReactNative.cmt:1"}, {"label": "TextInput", "kind": 9, "detail": "module", "documentation": "No docs\n\nfile:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/BsReactNative.cmt:1"}, {"label": "TouchableWithoutFeedback", "kind": 9, "detail": "module", "documentation": "No docs\n\nfile:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/BsReactNative.cmt:1"}, {"label": "TabBarIOS", "kind": 9, "detail": "module", "documentation": "No docs\n\nfile:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/BsReactNative.cmt:1"}, {"label": "TimePickerAndroid", "kind": 9, "detail": "module", "documentation": "No docs\n\nfile:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/BsReactNative.cmt:1"}, {"label": "TouchableOpacity", "kind": 9, "detail": "module", "documentation": "No docs\n\nfile:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/BsReactNative.cmt:1"}, {"label": "TouchableNativeFeedback", "kind": 9, "detail": "module", "documentation": "No docs\n\nfile:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/BsReactNative.cmt:1"}, {"label": "Types", "kind": 9, "detail": "module", "documentation": "No docs\n\nfile:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/BsReactNative.cmt:1"}, {"label": "Twitch", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:1"}, {"label": "Trigger", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:1"}, {"label": "TriggerContainer", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:1"}]}
Read message 
{"jsonrpc":"2.0","id":428,"method":"completionItem/resolve","params":{"label":"TabBarIOS","detail":"module","documentation":"No docs\n\nfile:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/BsReactNative.cmt:1","insertTextFormat":1,"kind":9}}
[server] Got a method completionItem/resolve
[server] processing took 0.0100135803223ms
Sending response {"id": 428, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re","version":204},"contentChanges":[{"text":"/* App is the actual entry point for the application. It matches on the route prop to determine which\n   sub-component to render */\nopen BsReactNative;\nopen Twitch;\n\ntype item = {clickedInWave: bool};\n\ntype state = list(item);\n\ntype clicked = bool;\n\ntype action =\n  | Click(clicked)\n  | Reset;\nlet tempCounterStyle = Style.(style([color(String(\"lightblue\"))]));\n\nlet component = ReasonReact.reducerComponent(\"App\");\n\nmodule GetAllJerks = [%graphql {|\n  {\n    getJerks\n  }\n|}];\n\nmodule GetAllJerksQuery = ReasonApollo.CreateQuery(GetAllJerks);\n\nlet styles =\n  StyleSheet.create(\n    Style.{\n      \"explodeHeart\":\n        style([left(Pt(0.)), top(Pt(0.)), position(Absolute)]),\n    },\n  );\n\nlet make = _children => {\n  ...component,\n  didMount: _ => onAuthorized(twitchAuth => Js.log(clientIdGet(twitchAuth))),\n\n  initialState: () => [],\n\n  reducer: (action, state) =>\n    switch (action) {\n    | Click(clicked) =>\n      clicked ?\n        ReasonReact.Update([{clickedInWave: true}, ...state]) :\n        ReasonReact.NoUpdate\n    | Reset => ReasonReact.Update([])\n    },\n\n  render: self =>\n    <ReasonApollo.Provider client=Client.instance>\n      <GetAllJerksQuery>\n        ...{({result, _}) =>\n          switch (result) {\n          | Loading => <Te> {\"Loading\" |> ReasonReact.string} </View>\n          | Error(_e) => <View> {\"Error\" |> ReasonReact.string} </View>\n          | Data(_) =>\n            <View>\n              <HeartContainer>\n                <Heart filled=true style={styles##explodeHeart} />\n                <Heart filled=true style={styles##explodeHeart} />\n              </HeartContainer>\n              {self.state |> List.length >= 5 ?\n                 <Wave onFinish={_event => self.send(Reset)} /> :\n                 ReasonReact.null}\n              <TriggerContainer onPress={_event => self.send(Click(true))} />\n              <Text style=tempCounterStyle>\n                {ReasonReact.string(string_of_int(self.state |> List.length))}\n              </Text>\n            </View>\n          }\n        }\n      </GetAllJerksQuery>\n    </ReasonApollo.Provider>,\n};\n\nlet default = ReasonReact.wrapReasonForJs(~component, _ => make([||]));"}]}}
Read message 
{"jsonrpc":"2.0","id":429,"method":"completionItem/resolve","params":{"label":"Text","detail":"module","documentation":"No docs\n\nfile:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/BsReactNative.cmt:1","insertTextFormat":1,"kind":9}}
[server] Got a method completionItem/resolve
[server] processing took 0.00905990600586ms
Sending response {"id": 429, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":430,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0181198120117ms
➡️ running bsc /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/lanceharper/Repositories/jerk-twitch/client/lib/bs/src/components/App' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src/graphql-types' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/components' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/private' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/graphql_ppx/ppx' -ppx ''\''/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/reactjs_jsx_ppx_2.exe'\''' -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/.lsp/App.ast with pwd /Users/lanceharper/Repositories/jerk-twitch/client
Sending response {"id": 430, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, Pervasives, HeartContainer, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 28, "character": 4}, "end": {"line": 28, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":431,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":54,"character":26},"end":{"line":54,"character":26}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00905990600586ms
Sending response {"id": 431, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":432,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0138282775879ms
Sending response {"id": 432, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, Pervasives, HeartContainer, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 28, "character": 4}, "end": {"line": 28, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Running diagnostics for file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re", "diagnostics": [{"range": {"start": {"line": 54, "character": 23}, "end": {"line": 54, "character": 69}}, "message": "Error: Start tag <Te> does not match end tag </View>", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re","version":206},"contentChanges":[{"text":"/* App is the actual entry point for the application. It matches on the route prop to determine which\n   sub-component to render */\nopen BsReactNative;\nopen Twitch;\n\ntype item = {clickedInWave: bool};\n\ntype state = list(item);\n\ntype clicked = bool;\n\ntype action =\n  | Click(clicked)\n  | Reset;\nlet tempCounterStyle = Style.(style([color(String(\"lightblue\"))]));\n\nlet component = ReasonReact.reducerComponent(\"App\");\n\nmodule GetAllJerks = [%graphql {|\n  {\n    getJerks\n  }\n|}];\n\nmodule GetAllJerksQuery = ReasonApollo.CreateQuery(GetAllJerks);\n\nlet styles =\n  StyleSheet.create(\n    Style.{\n      \"explodeHeart\":\n        style([left(Pt(0.)), top(Pt(0.)), position(Absolute)]),\n    },\n  );\n\nlet make = _children => {\n  ...component,\n  didMount: _ => onAuthorized(twitchAuth => Js.log(clientIdGet(twitchAuth))),\n\n  initialState: () => [],\n\n  reducer: (action, state) =>\n    switch (action) {\n    | Click(clicked) =>\n      clicked ?\n        ReasonReact.Update([{clickedInWave: true}, ...state]) :\n        ReasonReact.NoUpdate\n    | Reset => ReasonReact.Update([])\n    },\n\n  render: self =>\n    <ReasonApollo.Provider client=Client.instance>\n      <GetAllJerksQuery>\n        ...{({result, _}) =>\n          switch (result) {\n          | Loading => <Text> {\"Loading\" |> ReasonReact.string} </View>\n          | Error(_e) => <View> {\"Error\" |> ReasonReact.string} </View>\n          | Data(_) =>\n            <View>\n              <HeartContainer>\n                <Heart filled=true style={styles##explodeHeart} />\n                <Heart filled=true style={styles##explodeHeart} />\n              </HeartContainer>\n              {self.state |> List.length >= 5 ?\n                 <Wave onFinish={_event => self.send(Reset)} /> :\n                 ReasonReact.null}\n              <TriggerContainer onPress={_event => self.send(Click(true))} />\n              <Text style=tempCounterStyle>\n                {ReasonReact.string(string_of_int(self.state |> List.length))}\n              </Text>\n            </View>\n          }\n        }\n      </GetAllJerksQuery>\n    </ReasonApollo.Provider>,\n};\n\nlet default = ReasonReact.wrapReasonForJs(~component, _ => make([||]));"}]}}
Read message 
{"jsonrpc":"2.0","id":433,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":55,"character":26}}}
[server] Got a method textDocument/hover
[server] processing took 0.0269412994385ms
➡️ running bsc /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/lanceharper/Repositories/jerk-twitch/client/lib/bs/src/components/App' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src/graphql-types' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/components' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/private' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/graphql_ppx/ppx' -ppx ''\''/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/reactjs_jsx_ppx_2.exe'\''' -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/.lsp/App.ast with pwd /Users/lanceharper/Repositories/jerk-twitch/client
Sending response {"id": 433, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":433}}
Read message 
{"jsonrpc":"2.0","id":434,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0169277191162ms
Sending response {"id": 434, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, Pervasives, HeartContainer, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 28, "character": 4}, "end": {"line": 28, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":435,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0128746032715ms
Sending response {"id": 435, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, Pervasives, HeartContainer, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 28, "character": 4}, "end": {"line": 28, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":436,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":54,"character":28},"end":{"line":54,"character":28}},"context":{"diagnostics":[{"range":{"start":{"line":54,"character":23},"end":{"line":54,"character":69}},"message":"Error: Start tag <Te> does not match end tag </View>","severity":1}]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0138282775879ms
Sending response {"id": 436, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":437,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":54,"character":27}}}
[server] Got a method textDocument/hover
[server] processing took 0.0138282775879ms
Sending response {"id": 437, "jsonrpc": "2.0", "result": null}
Running diagnostics for file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re", "diagnostics": [{"range": {"start": {"line": 54, "character": 23}, "end": {"line": 54, "character": 71}}, "message": "Error: Start tag <Text> does not match end tag </View>", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","id":438,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":55,"character":24},"end":{"line":55,"character":24}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0479221343994ms
Sending response {"id": 438, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":439,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":55,"character":26}}}
[server] Got a method textDocument/hover
[server] processing took 0.0169277191162ms
Sending response {"id": 439, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":440,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":54,"character":23},"end":{"line":54,"character":23}},"context":{"diagnostics":[{"range":{"start":{"line":54,"character":23},"end":{"line":54,"character":71}},"message":"Error: Start tag <Text> does not match end tag </View>","severity":1}]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0178813934326ms
Sending response {"id": 440, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":441,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":55,"character":25}}}
[server] Got a method textDocument/hover
[server] processing took 0.0159740447998ms
Sending response {"id": 441, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":442,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":55,"character":28}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.0171661376953ms
Sending response {"id": 442, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":443,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":55,"character":27}}}
[server] Got a method textDocument/hover
[server] processing took 0.0169277191162ms
Sending response {"id": 443, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":444,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":55,"character":28},"end":{"line":55,"character":28}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0181198120117ms
Sending response {"id": 444, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re","version":207},"contentChanges":[{"text":"/* App is the actual entry point for the application. It matches on the route prop to determine which\n   sub-component to render */\nopen BsReactNative;\nopen Twitch;\n\ntype item = {clickedInWave: bool};\n\ntype state = list(item);\n\ntype clicked = bool;\n\ntype action =\n  | Click(clicked)\n  | Reset;\nlet tempCounterStyle = Style.(style([color(String(\"lightblue\"))]));\n\nlet component = ReasonReact.reducerComponent(\"App\");\n\nmodule GetAllJerks = [%graphql {|\n  {\n    getJerks\n  }\n|}];\n\nmodule GetAllJerksQuery = ReasonApollo.CreateQuery(GetAllJerks);\n\nlet styles =\n  StyleSheet.create(\n    Style.{\n      \"explodeHeart\":\n        style([left(Pt(0.)), top(Pt(0.)), position(Absolute)]),\n    },\n  );\n\nlet make = _children => {\n  ...component,\n  didMount: _ => onAuthorized(twitchAuth => Js.log(clientIdGet(twitchAuth))),\n\n  initialState: () => [],\n\n  reducer: (action, state) =>\n    switch (action) {\n    | Click(clicked) =>\n      clicked ?\n        ReasonReact.Update([{clickedInWave: true}, ...state]) :\n        ReasonReact.NoUpdate\n    | Reset => ReasonReact.Update([])\n    },\n\n  render: self =>\n    <ReasonApollo.Provider client=Client.instance>\n      <GetAllJerksQuery>\n        ...{({result, _}) =>\n          switch (result) {\n          | Loading => <Text> {\"Loading\" |> ReasonReact.string} </View>\n          | Error(_e) => <ViTew> {\"Error\" |> ReasonReact.string} </View>\n          | Data(_) =>\n            <View>\n              <HeartContainer>\n                <Heart filled=true style={styles##explodeHeart} />\n                <Heart filled=true style={styles##explodeHeart} />\n              </HeartContainer>\n              {self.state |> List.length >= 5 ?\n                 <Wave onFinish={_event => self.send(Reset)} /> :\n                 ReasonReact.null}\n              <TriggerContainer onPress={_event => self.send(Click(true))} />\n              <Text style=tempCounterStyle>\n                {ReasonReact.string(string_of_int(self.state |> List.length))}\n              </Text>\n            </View>\n          }\n        }\n      </GetAllJerksQuery>\n    </ReasonApollo.Provider>,\n};\n\nlet default = ReasonReact.wrapReasonForJs(~component, _ => make([||]));"}]}}
Read message 
{"jsonrpc":"2.0","id":445,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0319480895996ms
➡️ running bsc /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/lanceharper/Repositories/jerk-twitch/client/lib/bs/src/components/App' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src/graphql-types' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/components' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/private' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/graphql_ppx/ppx' -ppx ''\''/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/reactjs_jsx_ppx_2.exe'\''' -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/.lsp/App.ast with pwd /Users/lanceharper/Repositories/jerk-twitch/client
Sending response {"id": 445, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, Pervasives, HeartContainer, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 28, "character": 4}, "end": {"line": 28, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":446,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":55,"character":29},"end":{"line":55,"character":29}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00810623168945ms
Sending response {"id": 446, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":447,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0171661376953ms
Sending response {"id": 447, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, Pervasives, HeartContainer, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 28, "character": 4}, "end": {"line": 28, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":448,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":56,"character":22},"end":{"line":56,"character":22}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.014066696167ms
Sending response {"id": 448, "jsonrpc": "2.0", "result": null}
Running diagnostics for file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re", "diagnostics": [{"range": {"start": {"line": 54, "character": 23}, "end": {"line": 54, "character": 71}}, "message": "Error: Start tag <Text> does not match end tag </View>", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re","version":208},"contentChanges":[{"text":"/* App is the actual entry point for the application. It matches on the route prop to determine which\n   sub-component to render */\nopen BsReactNative;\nopen Twitch;\n\ntype item = {clickedInWave: bool};\n\ntype state = list(item);\n\ntype clicked = bool;\n\ntype action =\n  | Click(clicked)\n  | Reset;\nlet tempCounterStyle = Style.(style([color(String(\"lightblue\"))]));\n\nlet component = ReasonReact.reducerComponent(\"App\");\n\nmodule GetAllJerks = [%graphql {|\n  {\n    getJerks\n  }\n|}];\n\nmodule GetAllJerksQuery = ReasonApollo.CreateQuery(GetAllJerks);\n\nlet styles =\n  StyleSheet.create(\n    Style.{\n      \"explodeHeart\":\n        style([left(Pt(0.)), top(Pt(0.)), position(Absolute)]),\n    },\n  );\n\nlet make = _children => {\n  ...component,\n  didMount: _ => onAuthorized(twitchAuth => Js.log(clientIdGet(twitchAuth))),\n\n  initialState: () => [],\n\n  reducer: (action, state) =>\n    switch (action) {\n    | Click(clicked) =>\n      clicked ?\n        ReasonReact.Update([{clickedInWave: true}, ...state]) :\n        ReasonReact.NoUpdate\n    | Reset => ReasonReact.Update([])\n    },\n\n  render: self =>\n    <ReasonApollo.Provider client=Client.instance>\n      <GetAllJerksQuery>\n        ...{({result, _}) =>\n          switch (result) {\n          | Loading => <Text> {\"Loading\" |> ReasonReact.string} </View>\n          | Error(_e) => <View> {\"Error\" |> ReasonReact.string} </View>\n          | Data(_) =>\n            <View>\n              <HeartContainer>\n                <Heart filled=true style={styles##explodeHeart} />\n                <Heart filled=true style={styles##explodeHeart} />\n              </HeartContainer>\n              {self.state |> List.length >= 5 ?\n                 <Wave onFinish={_event => self.send(Reset)} /> :\n                 ReasonReact.null}\n              <TriggerContainer onPress={_event => self.send(Click(true))} />\n              <Text style=tempCounterStyle>\n                {ReasonReact.string(string_of_int(self.state |> List.length))}\n              </Text>\n            </View>\n          }\n        }\n      </GetAllJerksQuery>\n    </ReasonApollo.Provider>,\n};\n\nlet default = ReasonReact.wrapReasonForJs(~component, _ => make([||]));"}]}}
Read message 
{"jsonrpc":"2.0","id":449,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0169277191162ms
➡️ running bsc /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/lanceharper/Repositories/jerk-twitch/client/lib/bs/src/components/App' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src/graphql-types' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/components' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/private' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/graphql_ppx/ppx' -ppx ''\''/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/reactjs_jsx_ppx_2.exe'\''' -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/.lsp/App.ast with pwd /Users/lanceharper/Repositories/jerk-twitch/client
Sending response {"id": 449, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, Pervasives, HeartContainer, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 28, "character": 4}, "end": {"line": 28, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":450,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":55,"character":28},"end":{"line":55,"character":28}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0240802764893ms
Sending response {"id": 450, "jsonrpc": "2.0", "result": null}
Running diagnostics for file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re", "diagnostics": [{"range": {"start": {"line": 54, "character": 23}, "end": {"line": 54, "character": 71}}, "message": "Error: Start tag <Text> does not match end tag </View>", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","id":451,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0178813934326ms
Sending response {"id": 451, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, Pervasives, HeartContainer, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 28, "character": 4}, "end": {"line": 28, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":452,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":54,"character":26}}}
[server] Got a method textDocument/hover
[server] processing took 0.0128746032715ms
Sending response {"id": 452, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":453,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":54,"character":27}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.0150203704834ms
Sending response {"id": 453, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":454,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":54,"character":24},"end":{"line":54,"character":28}},"context":{"diagnostics":[{"range":{"start":{"line":54,"character":23},"end":{"line":54,"character":71}},"message":"Error: Start tag <Text> does not match end tag </View>","severity":1}]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0319480895996ms
Sending response {"id": 454, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":455,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":54,"character":27}}}
[server] Got a method textDocument/definition
[server] processing took 0.0109672546387ms
Sending response {"id": 455, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":456,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":55,"character":65}}}
[server] Got a method textDocument/hover
[server] processing took 0.0169277191162ms
Sending response {"id": 456, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":457,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":54,"character":68}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.0119209289551ms
Sending response {"id": 457, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":458,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":54,"character":67}}}
[server] Got a method textDocument/definition
[server] processing took 0.0138282775879ms
Sending response {"id": 458, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re","version":209},"contentChanges":[{"text":"/* App is the actual entry point for the application. It matches on the route prop to determine which\n   sub-component to render */\nopen BsReactNative;\nopen Twitch;\n\ntype item = {clickedInWave: bool};\n\ntype state = list(item);\n\ntype clicked = bool;\n\ntype action =\n  | Click(clicked)\n  | Reset;\nlet tempCounterStyle = Style.(style([color(String(\"lightblue\"))]));\n\nlet component = ReasonReact.reducerComponent(\"App\");\n\nmodule GetAllJerks = [%graphql {|\n  {\n    getJerks\n  }\n|}];\n\nmodule GetAllJerksQuery = ReasonApollo.CreateQuery(GetAllJerks);\n\nlet styles =\n  StyleSheet.create(\n    Style.{\n      \"explodeHeart\":\n        style([left(Pt(0.)), top(Pt(0.)), position(Absolute)]),\n    },\n  );\n\nlet make = _children => {\n  ...component,\n  didMount: _ => onAuthorized(twitchAuth => Js.log(clientIdGet(twitchAuth))),\n\n  initialState: () => [],\n\n  reducer: (action, state) =>\n    switch (action) {\n    | Click(clicked) =>\n      clicked ?\n        ReasonReact.Update([{clickedInWave: true}, ...state]) :\n        ReasonReact.NoUpdate\n    | Reset => ReasonReact.Update([])\n    },\n\n  render: self =>\n    <ReasonApollo.Provider client=Client.instance>\n      <GetAllJerksQuery>\n        ...{({result, _}) =>\n          switch (result) {\n          | Loading => <Text> {\"Loading\" |> ReasonReact.string} </Text>\n          | Error(_e) => <View> {\"Error\" |> ReasonReact.string} </View>\n          | Data(_) =>\n            <View>\n              <HeartContainer>\n                <Heart filled=true style={styles##explodeHeart} />\n                <Heart filled=true style={styles##explodeHeart} />\n              </HeartContainer>\n              {self.state |> List.length >= 5 ?\n                 <Wave onFinish={_event => self.send(Reset)} /> :\n                 ReasonReact.null}\n              <TriggerContainer onPress={_event => self.send(Click(true))} />\n              <Text style=tempCounterStyle>\n                {ReasonReact.string(string_of_int(self.state |> List.length))}\n              </Text>\n            </View>\n          }\n        }\n      </GetAllJerksQuery>\n    </ReasonApollo.Provider>,\n};\n\nlet default = ReasonReact.wrapReasonForJs(~component, _ => make([||]));"}]}}
Read message 
{"jsonrpc":"2.0","id":459,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0169277191162ms
➡️ running bsc /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/lanceharper/Repositories/jerk-twitch/client/lib/bs/src/components/App' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src/graphql-types' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/components' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/private' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/graphql_ppx/ppx' -ppx ''\''/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/reactjs_jsx_ppx_2.exe'\''' -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/.lsp/App.ast with pwd /Users/lanceharper/Repositories/jerk-twitch/client
Ident!! ReasonApollo.CreateQuery
Ident!! GetAllJerks
<< Replacing lastDefinitions for file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re
Sending response {"id": 459, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, Pervasives, HeartContainer, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 28, "character": 4}, "end": {"line": 28, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":460,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":54,"character":70},"end":{"line":54,"character":70}},"context":{"diagnostics":[{"range":{"start":{"line":54,"character":23},"end":{"line":54,"character":71}},"message":"Error: Start tag <Text> does not match end tag </View>","severity":1}]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0109672546387ms
Sending response {"id": 460, "jsonrpc": "2.0", "result": null}
Running diagnostics for file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re", "diagnostics": []}}
Read message 
{"jsonrpc":"2.0","id":461,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0360012054443ms
Sending response {"id": 461, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, Pervasives, HeartContainer, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 28, "character": 4}, "end": {"line": 28, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":462,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":55,"character":29}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00905990600586ms
Got a loc for pos
Sending response {"id": 462, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 57, "character": 13}, "end": {"line": 57, "character": 17}}, "kind": 2}, {"range": {"start": {"line": 55, "character": 26}, "end": {"line": 55, "character": 30}}, "kind": 2}]}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re","version":210},"contentChanges":[{"text":"/* App is the actual entry point for the application. It matches on the route prop to determine which\n   sub-component to render */\nopen BsReactNative;\nopen Twitch;\n\ntype item = {clickedInWave: bool};\n\ntype state = list(item);\n\ntype clicked = bool;\n\ntype action =\n  | Click(clicked)\n  | Reset;\nlet tempCounterStyle = Style.(style([color(String(\"lightblue\"))]));\n\nlet component = ReasonReact.reducerComponent(\"App\");\n\nmodule GetAllJerks = [%graphql {|\n  {\n    getJerks\n  }\n|}];\n\nmodule GetAllJerksQuery = ReasonApollo.CreateQuery(GetAllJerks);\n\nlet styles =\n  StyleSheet.create(\n    Style.{\n      \"explodeHeart\":\n        style([left(Pt(0.)), top(Pt(0.)), position(Absolute)]),\n    },\n  );\n\nlet make = _children => {\n  ...component,\n  didMount: _ => onAuthorized(twitchAuth => Js.log(clientIdGet(twitchAuth))),\n\n  initialState: () => [],\n\n  reducer: (action, state) =>\n    switch (action) {\n    | Click(clicked) =>\n      clicked ?\n        ReasonReact.Update([{clickedInWave: true}, ...state]) :\n        ReasonReact.NoUpdate\n    | Reset => ReasonReact.Update([])\n    },\n\n  render: self =>\n    <ReasonApollo.Provider client=Client.instance>\n      <GetAllJerksQuery>\n        ...{({result, _}) =>\n          switch (result) {\n          | Loading => <Text> {\"Loading\" |> ReasonReact.string} </Text>\n          | Error(_e) => <Text> {\"Error\" |> ReasonReact.string} </View>\n          | Data(_) =>\n            <View>\n              <HeartContainer>\n                <Heart filled=true style={styles##explodeHeart} />\n                <Heart filled=true style={styles##explodeHeart} />\n              </HeartContainer>\n              {self.state |> List.length >= 5 ?\n                 <Wave onFinish={_event => self.send(Reset)} /> :\n                 ReasonReact.null}\n              <TriggerContainer onPress={_event => self.send(Click(true))} />\n              <Text style=tempCounterStyle>\n                {ReasonReact.string(string_of_int(self.state |> List.length))}\n              </Text>\n            </View>\n          }\n        }\n      </GetAllJerksQuery>\n    </ReasonApollo.Provider>,\n};\n\nlet default = ReasonReact.wrapReasonForJs(~component, _ => make([||]));"}]}}
Read message 
{"jsonrpc":"2.0","id":463,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0109672546387ms
➡️ running bsc /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/lanceharper/Repositories/jerk-twitch/client/lib/bs/src/components/App' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src/graphql-types' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/components' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/private' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/graphql_ppx/ppx' -ppx ''\''/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/reactjs_jsx_ppx_2.exe'\''' -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/.lsp/App.ast with pwd /Users/lanceharper/Repositories/jerk-twitch/client
Sending response {"id": 463, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, Pervasives, HeartContainer, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 28, "character": 4}, "end": {"line": 28, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":464,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":55,"character":30},"end":{"line":55,"character":30}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00500679016113ms
Sending response {"id": 464, "jsonrpc": "2.0", "result": null}
Running diagnostics for file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re", "diagnostics": [{"range": {"start": {"line": 55, "character": 25}, "end": {"line": 55, "character": 71}}, "message": "Error: Start tag <Text> does not match end tag </View>", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","id":465,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.00882148742676ms
Sending response {"id": 465, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, Pervasives, HeartContainer, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 28, "character": 4}, "end": {"line": 28, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":466,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":55,"character":30},"end":{"line":55,"character":30}},"context":{"diagnostics":[{"range":{"start":{"line":55,"character":25},"end":{"line":55,"character":71}},"message":"Error: Start tag <Text> does not match end tag </View>","severity":1}]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0100135803223ms
Sending response {"id": 466, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":467,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":55,"character":69}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00596046447754ms
Sending response {"id": 467, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re","version":211},"contentChanges":[{"text":"/* App is the actual entry point for the application. It matches on the route prop to determine which\n   sub-component to render */\nopen BsReactNative;\nopen Twitch;\n\ntype item = {clickedInWave: bool};\n\ntype state = list(item);\n\ntype clicked = bool;\n\ntype action =\n  | Click(clicked)\n  | Reset;\nlet tempCounterStyle = Style.(style([color(String(\"lightblue\"))]));\n\nlet component = ReasonReact.reducerComponent(\"App\");\n\nmodule GetAllJerks = [%graphql {|\n  {\n    getJerks\n  }\n|}];\n\nmodule GetAllJerksQuery = ReasonApollo.CreateQuery(GetAllJerks);\n\nlet styles =\n  StyleSheet.create(\n    Style.{\n      \"explodeHeart\":\n        style([left(Pt(0.)), top(Pt(0.)), position(Absolute)]),\n    },\n  );\n\nlet make = _children => {\n  ...component,\n  didMount: _ => onAuthorized(twitchAuth => Js.log(clientIdGet(twitchAuth))),\n\n  initialState: () => [],\n\n  reducer: (action, state) =>\n    switch (action) {\n    | Click(clicked) =>\n      clicked ?\n        ReasonReact.Update([{clickedInWave: true}, ...state]) :\n        ReasonReact.NoUpdate\n    | Reset => ReasonReact.Update([])\n    },\n\n  render: self =>\n    <ReasonApollo.Provider client=Client.instance>\n      <GetAllJerksQuery>\n        ...{({result, _}) =>\n          switch (result) {\n          | Loading => <Text> {\"Loading\" |> ReasonReact.string} </Text>\n          | Error(_e) => <Text> {\"Error\" |> ReasonReact.string} </Text>\n          | Data(_) =>\n            <View>\n              <HeartContainer>\n                <Heart filled=true style={styles##explodeHeart} />\n                <Heart filled=true style={styles##explodeHeart} />\n              </HeartContainer>\n              {self.state |> List.length >= 5 ?\n                 <Wave onFinish={_event => self.send(Reset)} /> :\n                 ReasonReact.null}\n              <TriggerContainer onPress={_event => self.send(Click(true))} />\n              <Text style=tempCounterStyle>\n                {ReasonReact.string(string_of_int(self.state |> List.length))}\n              </Text>\n            </View>\n          }\n        }\n      </GetAllJerksQuery>\n    </ReasonApollo.Provider>,\n};\n\nlet default = ReasonReact.wrapReasonForJs(~component, _ => make([||]));"}]}}
Read message 
{"jsonrpc":"2.0","id":468,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0100135803223ms
➡️ running bsc /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/lanceharper/Repositories/jerk-twitch/client/lib/bs/src/components/App' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src/graphql-types' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/components' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/private' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/graphql_ppx/ppx' -ppx ''\''/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/reactjs_jsx_ppx_2.exe'\''' -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/.lsp/App.ast with pwd /Users/lanceharper/Repositories/jerk-twitch/client
Ident!! ReasonApollo.CreateQuery
Ident!! GetAllJerks
<< Replacing lastDefinitions for file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re
Sending response {"id": 468, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, Pervasives, HeartContainer, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 28, "character": 4}, "end": {"line": 28, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":469,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":55,"character":70},"end":{"line":55,"character":70}},"context":{"diagnostics":[{"range":{"start":{"line":55,"character":25},"end":{"line":55,"character":71}},"message":"Error: Start tag <Text> does not match end tag </View>","severity":1}]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00476837158203ms
Sending response {"id": 469, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":470,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0138282775879ms
Sending response {"id": 470, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, Pervasives, HeartContainer, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 28, "character": 4}, "end": {"line": 28, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":471,"method":"textDocument/formatting","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"options":{"tabSize":2,"insertSpaces":true}}}
[server] Got a method textDocument/formatting
[server] processing took 0.00691413879395ms
Sending response {"id": 471, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re","version":211},"contentChanges":[{"text":"/* App is the actual entry point for the application. It matches on the route prop to determine which\n   sub-component to render */\nopen BsReactNative;\nopen Twitch;\n\ntype item = {clickedInWave: bool};\n\ntype state = list(item);\n\ntype clicked = bool;\n\ntype action =\n  | Click(clicked)\n  | Reset;\nlet tempCounterStyle = Style.(style([color(String(\"lightblue\"))]));\n\nlet component = ReasonReact.reducerComponent(\"App\");\n\nmodule GetAllJerks = [%graphql {|\n  {\n    getJerks\n  }\n|}];\n\nmodule GetAllJerksQuery = ReasonApollo.CreateQuery(GetAllJerks);\n\nlet styles =\n  StyleSheet.create(\n    Style.{\n      \"explodeHeart\":\n        style([left(Pt(0.)), top(Pt(0.)), position(Absolute)]),\n    },\n  );\n\nlet make = _children => {\n  ...component,\n  didMount: _ => onAuthorized(twitchAuth => Js.log(clientIdGet(twitchAuth))),\n\n  initialState: () => [],\n\n  reducer: (action, state) =>\n    switch (action) {\n    | Click(clicked) =>\n      clicked ?\n        ReasonReact.Update([{clickedInWave: true}, ...state]) :\n        ReasonReact.NoUpdate\n    | Reset => ReasonReact.Update([])\n    },\n\n  render: self =>\n    <ReasonApollo.Provider client=Client.instance>\n      <GetAllJerksQuery>\n        ...{({result, _}) =>\n          switch (result) {\n          | Loading => <Text> {\"Loading\" |> ReasonReact.string} </Text>\n          | Error(_e) => <Text> {\"Error\" |> ReasonReact.string} </Text>\n          | Data(_) =>\n            <View>\n              <HeartContainer>\n                <Heart filled=true style={styles##explodeHeart} />\n                <Heart filled=true style={styles##explodeHeart} />\n              </HeartContainer>\n              {self.state |> List.length >= 5 ?\n                 <Wave onFinish={_event => self.send(Reset)} /> :\n                 ReasonReact.null}\n              <TriggerContainer onPress={_event => self.send(Click(true))} />\n              <Text style=tempCounterStyle>\n                {ReasonReact.string(string_of_int(self.state |> List.length))}\n              </Text>\n            </View>\n          }\n        }\n      </GetAllJerksQuery>\n    </ReasonApollo.Provider>,\n};\n\nlet default = ReasonReact.wrapReasonForJs(~component, _ => make([||]));"}]}}
Running diagnostics for file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re
➡️ running bsc /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/lanceharper/Repositories/jerk-twitch/client/lib/bs/src/components/App' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src/graphql-types' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/components' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/private' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/graphql_ppx/ppx' -ppx ''\''/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/reactjs_jsx_ppx_2.exe'\''' -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/.lsp/App.ast with pwd /Users/lanceharper/Repositories/jerk-twitch/client
Ident!! ReasonApollo.CreateQuery
Ident!! GetAllJerks
<< Replacing lastDefinitions for file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re", "diagnostics": []}}
Read message 
{"jsonrpc":"2.0","id":472,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":55,"character":70},"end":{"line":55,"character":70}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00691413879395ms
Sending response {"id": 472, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":473,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":55,"character":14}}}
[server] Got a method textDocument/hover
[server] processing took 0.0181198120117ms
FINDING /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/lib/bs/src/ReasonReact.cmti src /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/src/ReasonReact.rei
Sending response {"id": 473, "jsonrpc": "2.0", "result": {"range": {"start": {"line": 55, "character": 11}, "end": {"line": 55, "character": 22}}, "contents": {"kind": "markdown", "value": "```\nmodule ReasonReact = {\n  type reactClass\n  type reactElement\n  type reactRef\n  let null: reactElement;\n  let string: string => reactElement;\n  let array: array(reactElement) => reactElement;\n  let refToJsObj: reactRef => Js.t(< .. >);\n  let createElement: (\n  reactClass,\n  ~?props: option(Js.t(< .. >)),\n  array(reactElement)\n) => reactElement;\n  let cloneElement: (\n  reactElement,\n  ~?props: option(Js.t(< .. >)),\n  array(reactElement)\n) => reactElement;\n  type renderNotImplemented = | RenderNotImplemented\n\n  type stateless = unit\n  type noRetainedProps\n  type actionless = unit\n  type update('state, 'retainedProps, 'action) = \n  | NoUpdate\n  | Update('state)\n  | SideEffects(\n    self('state, 'retainedProps, 'action) => unit\n  )\n  | UpdateWithSideEffects(\n    'state,\n    self('state, 'retainedProps, 'action) => unit\n  )\n\n  type self('state, 'retainedProps, 'action) = {\n  handle: 'payload.\n  ('payload -> ('state, 'retainedProps, 'action) self -> unit) ->\n  'payload -> unit,\n  state: 'state,\n  retainedProps: 'retainedProps,\n  send: 'action => unit,\n  onUnmount: unit => unit => unit\n}\n  type reactClassInternal\n  type jsElementWrapped\n  type oldNewSelf('state, 'retainedProps, 'action) = {\n  oldSelf: self('state, 'retainedProps, 'action),\n  newSelf: self('state, 'retainedProps, 'action)\n}\n  type componentSpec(\n  'state,\n  'initialState,\n  'retainedProps,\n  'initialRetainedProps,\n  'action\n) = {\n  debugName: string,\n  reactClassInternal: reactClassInternal,\n  mut handedOffState: Pervasives.ref(option('state)),\n  willReceiveProps: self(\n    'state,\n    'retainedProps,\n    'action\n  ) => 'state,\n  didMount: self('state, 'retainedProps, 'action) => unit,\n  didUpdate: oldNewSelf(\n    'state,\n    'retainedProps,\n    'action\n  ) => unit,\n  willUnmount: self(\n    'state,\n    'retainedProps,\n    'action\n  ) => unit,\n  willUpdate: oldNewSelf(\n    'state,\n    'retainedProps,\n    'action\n  ) => unit,\n  shouldUpdate: oldNewSelf(\n    'state,\n    'retainedProps,\n    'action\n  ) => bool,\n  render: self(\n    'state,\n    'retainedProps,\n    'action\n  ) => reactElement,\n  initialState: unit => 'initialState,\n  retainedProps: 'initialRetainedProps,\n  reducer: ('action, 'state) => update(\n    'state,\n    'retainedProps,\n    'action\n  ),\n  jsElementWrapped: jsElementWrapped\n}\n  type component(\n  'state,\n  'retainedProps,\n  'action\n) = componentSpec(\n  'state,\n  'state,\n  'retainedProps,\n  'retainedProps,\n  'action\n)\n  let statelessComponent: string => componentSpec(\n  stateless,\n  stateless,\n  noRetainedProps,\n  noRetainedProps,\n  actionless\n);\n  let statelessComponentWithRetainedProps: string => componentSpec(\n  stateless,\n  stateless,\n  'retainedProps,\n  noRetainedProps,\n  actionless\n);\n  let reducerComponent: string => componentSpec(\n  'state,\n  stateless,\n  noRetainedProps,\n  noRetainedProps,\n  'action\n);\n  let reducerComponentWithRetainedProps: string => componentSpec(\n  'state,\n  stateless,\n  'retainedProps,\n  noRetainedProps,\n  'action\n);\n  let element: (\n  ~?key: option(string),\n  ~?ref: option(\n    Js.nullable(reactRef) => unit\n  ),\n  component(\n    'state,\n    'retainedProps,\n    'action\n  )\n) => reactElement;\n  type jsPropsToReason(\n  'jsProps,\n  'state,\n  'retainedProps,\n  'action\n) = 'jsProps => component('state, 'retainedProps, 'action)\n  let wrapReasonForJs: (\n  ~component: componentSpec(\n    'state,\n    'initialState,\n    'retainedProps,\n    'initialRetainedProps,\n    'action\n  ),\n  jsPropsToReason(\n    'a,\n    'b,\n    'c,\n    'd\n  )\n) => reactClass;\n  let createDomElement: (\n  string,\n  ~props: Js.t(< .. >),\n  array(reactElement)\n) => reactElement;\n  let wrapJsForReason: (\n  ~reactClass: reactClass,\n  ~props: 'a,\n  'b\n) => component(\n  stateless,\n  noRetainedProps,\n  actionless\n);\n  module Router;\n  let fragment: 'a;\n}\n```"}}}
Read message 
{"jsonrpc":"2.0","id":474,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":53,"character":27},"end":{"line":53,"character":27}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0181198120117ms
Sending response {"id": 474, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":475,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0338554382324ms
Sending response {"id": 475, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":476,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0169277191162ms
Sending response {"id": 476, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, Pervasives, HeartContainer, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 28, "character": 4}, "end": {"line": 28, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":477,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":53,"character":27},"end":{"line":53,"character":27}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0131130218506ms
Sending response {"id": 477, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":478,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0119209289551ms
Sending response {"id": 478, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, Pervasives, HeartContainer, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 28, "character": 4}, "end": {"line": 28, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":479,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":34,"character":16}}}
[server] Got a method textDocument/hover
[server] processing took 0.0228881835938ms
Trying for declared Value 1077 in file file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re
Sending response {"id": 479, "jsonrpc": "2.0", "result": {"range": {"start": {"line": 34, "character": 11}, "end": {"line": 34, "character": 20}}, "contents": {"kind": "markdown", "value": "```\n'a\n```\n\n<root>/client/src/components/App/App.re"}}}
Read message 
{"jsonrpc":"2.0","id":480,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":34,"character":17}}}
[server] Got a method textDocument/definition
[server] processing took 0.0131130218506ms
Got a loc for pos
Trying to find a defintion for a definition
Declared
Sending response {"id": 480, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":481,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0298023223877ms
Sending response {"id": 481, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":482,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0162124633789ms
Sending response {"id": 482, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, Pervasives, HeartContainer, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 28, "character": 4}, "end": {"line": 28, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":483,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0131130218506ms
Sending response {"id": 483, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, Pervasives, HeartContainer, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 28, "character": 4}, "end": {"line": 28, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":484,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":53,"character":27},"end":{"line":53,"character":27}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0131130218506ms
Sending response {"id": 484, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":485,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":20,"character":2}}}
[server] Got a method textDocument/hover
[server] processing took 0.0171661376953ms
Sending response {"id": 485, "jsonrpc": "2.0", "result": {"range": {"start": {"line": 19, "character": 2}, "end": {"line": 21, "character": 3}}, "contents": {"kind": "markdown", "value": "string"}}}
Read message 
{"jsonrpc":"2.0","id":486,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":20,"character":5}}}
[server] Got a method textDocument/hover
[server] processing took 0.0169277191162ms
Sending response {"id": 486, "jsonrpc": "2.0", "result": {"range": {"start": {"line": 19, "character": 2}, "end": {"line": 21, "character": 3}}, "contents": {"kind": "markdown", "value": "string"}}}
Read message 
{"jsonrpc":"2.0","id":487,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":19,"character":2},"end":{"line":20,"character":6}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0181198120117ms
Sending response {"id": 487, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":488,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":20,"character":6}}}
[server] Got a method textDocument/definition
[server] processing took 0.0119209289551ms
Got a loc for pos
Sending response {"id": 488, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":489,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":24,"character":16}}}
[server] Got a method textDocument/definition
[server] processing took 0.0100135803223ms
Got a loc for pos
Sending response {"id": 489, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":490,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":24,"character":18}}}
[server] Got a method textDocument/hover
[server] processing took 0.0159740447998ms
Sending response {"id": 490, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":491,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0259876251221ms
Sending response {"id": 491, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":492,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0159740447998ms
Sending response {"id": 492, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, Pervasives, HeartContainer, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 28, "character": 4}, "end": {"line": 28, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":493,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":19,"character":2},"end":{"line":20,"character":6}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0169277191162ms
Sending response {"id": 493, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":494,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0121593475342ms
Sending response {"id": 494, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, Pervasives, HeartContainer, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 28, "character": 4}, "end": {"line": 28, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":495,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":18,"character":26}}}
[server] Got a method textDocument/hover
[server] processing took 0.0340938568115ms
Sending response {"id": 495, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":496,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":21,"character":3},"end":{"line":21,"character":3}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0159740447998ms
Sending response {"id": 496, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":497,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":20,"character":0}}}
[server] Got a method textDocument/hover
[server] processing took 0.0109672546387ms
Sending response {"id": 497, "jsonrpc": "2.0", "result": {"range": {"start": {"line": 19, "character": 2}, "end": {"line": 21, "character": 3}}, "contents": {"kind": "markdown", "value": "string"}}}
Read message 
{"jsonrpc":"2.0","id":498,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":19,"character":1}}}
[server] Got a method textDocument/hover
[server] processing took 0.0150203704834ms
Sending response {"id": 498, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":499,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":19,"character":2},"end":{"line":22,"character":4}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0159740447998ms
Sending response {"id": 499, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":500,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":19,"character":2},"end":{"line":21,"character":3}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0171661376953ms
Sending response {"id": 500, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re","version":212},"contentChanges":[{"text":"/* App is the actual entry point for the application. It matches on the route prop to determine which\n   sub-component to render */\nopen BsReactNative;\nopen Twitch;\n\ntype item = {clickedInWave: bool};\n\ntype state = list(item);\n\ntype clicked = bool;\n\ntype action =\n  | Click(clicked)\n  | Reset;\nlet tempCounterStyle = Style.(style([color(String(\"lightblue\"))]));\n\nlet component = ReasonReact.reducerComponent(\"App\");\n\nmodule GetAllJerks = [%graphql {|\n  query getPokemon($name: String!){\n      pokemon(name: $name) {\n          name\n      }\n  }\n|}];\n\nmodule GetAllJerksQuery = ReasonApollo.CreateQuery(GetAllJerks);\n\nlet styles =\n  StyleSheet.create(\n    Style.{\n      \"explodeHeart\":\n        style([left(Pt(0.)), top(Pt(0.)), position(Absolute)]),\n    },\n  );\n\nlet make = _children => {\n  ...component,\n  didMount: _ => onAuthorized(twitchAuth => Js.log(clientIdGet(twitchAuth))),\n\n  initialState: () => [],\n\n  reducer: (action, state) =>\n    switch (action) {\n    | Click(clicked) =>\n      clicked ?\n        ReasonReact.Update([{clickedInWave: true}, ...state]) :\n        ReasonReact.NoUpdate\n    | Reset => ReasonReact.Update([])\n    },\n\n  render: self =>\n    <ReasonApollo.Provider client=Client.instance>\n      <GetAllJerksQuery>\n        ...{({result, _}) =>\n          switch (result) {\n          | Loading => <Text> {\"Loading\" |> ReasonReact.string} </Text>\n          | Error(_e) => <Text> {\"Error\" |> ReasonReact.string} </Text>\n          | Data(_) =>\n            <View>\n              <HeartContainer>\n                <Heart filled=true style={styles##explodeHeart} />\n                <Heart filled=true style={styles##explodeHeart} />\n              </HeartContainer>\n              {self.state |> List.length >= 5 ?\n                 <Wave onFinish={_event => self.send(Reset)} /> :\n                 ReasonReact.null}\n              <TriggerContainer onPress={_event => self.send(Click(true))} />\n              <Text style=tempCounterStyle>\n                {ReasonReact.string(string_of_int(self.state |> List.length))}\n              </Text>\n            </View>\n          }\n        }\n      </GetAllJerksQuery>\n    </ReasonApollo.Provider>,\n};\n\nlet default = ReasonReact.wrapReasonForJs(~component, _ => make([||]));"}]}}
Read message 
{"jsonrpc":"2.0","id":501,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0121593475342ms
➡️ running bsc /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/lanceharper/Repositories/jerk-twitch/client/lib/bs/src/components/App' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src/graphql-types' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/components' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/private' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/graphql_ppx/ppx' -ppx ''\''/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/reactjs_jsx_ppx_2.exe'\''' -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/.lsp/App.ast with pwd /Users/lanceharper/Repositories/jerk-twitch/client
Sending response {"id": 501, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, Pervasives, HeartContainer, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 28, "character": 4}, "end": {"line": 28, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":502,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":23,"character":3},"end":{"line":23,"character":3}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0159740447998ms
Sending response {"id": 502, "jsonrpc": "2.0", "result": null}
Running diagnostics for file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re
type error here [dirty_checker][update ok]
[1mFile "[1m", line 21, characters 6-7[0m[0m:
[1;31mError[0m: Unknown field on type Query
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re", "diagnostics": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "message": "[dirty_checker][update ok]", "severity": 1}, {"range": {"start": {"line": 20, "character": 6}, "end": {"line": 20, "character": 7}}, "message": "Error: Unknown field on type Query", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","id":503,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0269412994385ms
Sending response {"id": 503, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, Pervasives, HeartContainer, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 28, "character": 4}, "end": {"line": 28, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":504,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":23,"character":3},"end":{"line":23,"character":3}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0138282775879ms
Sending response {"id": 504, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":505,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":20,"character":28}}}
[server] Got a method textDocument/hover
[server] processing took 0.0209808349609ms
FINDING /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/js_dict.cmti src /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/js_dict.mli
Trying for declared Value 1021 in file file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re
Sending response {"id": 505, "jsonrpc": "2.0", "result": {"range": {"start": {"line": 19, "character": 2}, "end": {"line": 23, "character": 3}}, "contents": {"kind": "markdown", "value": "```\nJs_dict.t(Js.Json.t)\n```\n\n```\ntype t('a)\n```\n\n<root>/client/src/components/App/App.re"}}}
Read message 
{"jsonrpc":"2.0","id":506,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":19,"character":11}}}
[server] Got a method textDocument/hover
[server] processing took 0.0300407409668ms
FINDING /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/js_dict.cmti src /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/js_dict.mli
Trying for declared Value 1021 in file file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re
Sending response {"id": 506, "jsonrpc": "2.0", "result": {"range": {"start": {"line": 19, "character": 2}, "end": {"line": 23, "character": 3}}, "contents": {"kind": "markdown", "value": "```\nJs_dict.t(Js.Json.t)\n```\n\n```\ntype t('a)\n```\n\n<root>/client/src/components/App/App.re"}}}
Read message 
{"jsonrpc":"2.0","id":507,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":19,"character":11}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.0319480895996ms
Got a loc for pos
Sending response {"id": 507, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 19, "character": 2}, "end": {"line": 23, "character": 3}}, "kind": 2}, {"range": {"start": {"line": 23, "character": -2}, "end": {"line": 23, "character": 3}}, "kind": 2}]}
Read message 
{"jsonrpc":"2.0","id":508,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":19,"character":11},"end":{"line":19,"character":20}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0169277191162ms
Sending response {"id": 508, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":509,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":19,"character":18}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.0178813934326ms
Got a loc for pos
Sending response {"id": 509, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 19, "character": 2}, "end": {"line": 23, "character": 3}}, "kind": 2}, {"range": {"start": {"line": 23, "character": -2}, "end": {"line": 23, "character": 3}}, "kind": 2}]}
Read message 
{"jsonrpc":"2.0","id":510,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":19,"character":11},"end":{"line":19,"character":18}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0169277191162ms
Sending response {"id": 510, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re","version":212},"contentChanges":[{"text":"/* App is the actual entry point for the application. It matches on the route prop to determine which\n   sub-component to render */\nopen BsReactNative;\nopen Twitch;\n\ntype item = {clickedInWave: bool};\n\ntype state = list(item);\n\ntype clicked = bool;\n\ntype action =\n  | Click(clicked)\n  | Reset;\nlet tempCounterStyle = Style.(style([color(String(\"lightblue\"))]));\n\nlet component = ReasonReact.reducerComponent(\"App\");\n\nmodule GetAllJerks = [%graphql {|\n  query getPokemon($name: String!){\n      pokemon(name: $name) {\n          name\n      }\n  }\n|}];\n\nmodule GetAllJerksQuery = ReasonApollo.CreateQuery(GetAllJerks);\n\nlet styles =\n  StyleSheet.create(\n    Style.{\n      \"explodeHeart\":\n        style([left(Pt(0.)), top(Pt(0.)), position(Absolute)]),\n    },\n  );\n\nlet make = _children => {\n  ...component,\n  didMount: _ => onAuthorized(twitchAuth => Js.log(clientIdGet(twitchAuth))),\n\n  initialState: () => [],\n\n  reducer: (action, state) =>\n    switch (action) {\n    | Click(clicked) =>\n      clicked ?\n        ReasonReact.Update([{clickedInWave: true}, ...state]) :\n        ReasonReact.NoUpdate\n    | Reset => ReasonReact.Update([])\n    },\n\n  render: self =>\n    <ReasonApollo.Provider client=Client.instance>\n      <GetAllJerksQuery>\n        ...{({result, _}) =>\n          switch (result) {\n          | Loading => <Text> {\"Loading\" |> ReasonReact.string} </Text>\n          | Error(_e) => <Text> {\"Error\" |> ReasonReact.string} </Text>\n          | Data(_) =>\n            <View>\n              <HeartContainer>\n                <Heart filled=true style={styles##explodeHeart} />\n                <Heart filled=true style={styles##explodeHeart} />\n              </HeartContainer>\n              {self.state |> List.length >= 5 ?\n                 <Wave onFinish={_event => self.send(Reset)} /> :\n                 ReasonReact.null}\n              <TriggerContainer onPress={_event => self.send(Click(true))} />\n              <Text style=tempCounterStyle>\n                {ReasonReact.string(string_of_int(self.state |> List.length))}\n              </Text>\n            </View>\n          }\n        }\n      </GetAllJerksQuery>\n    </ReasonApollo.Provider>,\n};\n\nlet default = ReasonReact.wrapReasonForJs(~component, _ => make([||]));"}]}}
Read message 
{"jsonrpc":"2.0","id":511,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"message":"[dirty_checker][update ok]","severity":1}]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0150203704834ms
➡️ running bsc /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/lanceharper/Repositories/jerk-twitch/client/lib/bs/src/components/App' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src/graphql-types' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/components' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/private' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/graphql_ppx/ppx' -ppx ''\''/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/reactjs_jsx_ppx_2.exe'\''' -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/.lsp/App.ast with pwd /Users/lanceharper/Repositories/jerk-twitch/client
Sending response {"id": 511, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":512,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0200271606445ms
Sending response {"id": 512, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, Pervasives, HeartContainer, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 28, "character": 4}, "end": {"line": 28, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":513,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":19,"character":11},"end":{"line":19,"character":18}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0109672546387ms
Sending response {"id": 513, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":514,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0109672546387ms
Sending response {"id": 514, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, Pervasives, HeartContainer, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 28, "character": 4}, "end": {"line": 28, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Running diagnostics for file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re
type error here [1mFile "[1m", line 21, characters 6-7[0m[0m:
[1;31mError[0m: Unknown field on type Query
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re", "diagnostics": [{"range": {"start": {"line": 20, "character": 6}, "end": {"line": 20, "character": 7}}, "message": "Error: Unknown field on type Query", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","id":515,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":19,"character":11},"end":{"line":19,"character":18}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00810623168945ms
Sending response {"id": 515, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re","version":212},"contentChanges":[{"text":"/* App is the actual entry point for the application. It matches on the route prop to determine which\n   sub-component to render */\nopen BsReactNative;\nopen Twitch;\n\ntype item = {clickedInWave: bool};\n\ntype state = list(item);\n\ntype clicked = bool;\n\ntype action =\n  | Click(clicked)\n  | Reset;\nlet tempCounterStyle = Style.(style([color(String(\"lightblue\"))]));\n\nlet component = ReasonReact.reducerComponent(\"App\");\n\nmodule GetAllJerks = [%graphql {|\n  query getPokemon($name: String!){\n      pokemon(name: $name) {\n          name\n      }\n  }\n|}];\n\nmodule GetAllJerksQuery = ReasonApollo.CreateQuery(GetAllJerks);\n\nlet styles =\n  StyleSheet.create(\n    Style.{\n      \"explodeHeart\":\n        style([left(Pt(0.)), top(Pt(0.)), position(Absolute)]),\n    },\n  );\n\nlet make = _children => {\n  ...component,\n  didMount: _ => onAuthorized(twitchAuth => Js.log(clientIdGet(twitchAuth))),\n\n  initialState: () => [],\n\n  reducer: (action, state) =>\n    switch (action) {\n    | Click(clicked) =>\n      clicked ?\n        ReasonReact.Update([{clickedInWave: true}, ...state]) :\n        ReasonReact.NoUpdate\n    | Reset => ReasonReact.Update([])\n    },\n\n  render: self =>\n    <ReasonApollo.Provider client=Client.instance>\n      <GetAllJerksQuery>\n        ...{({result, _}) =>\n          switch (result) {\n          | Loading => <Text> {\"Loading\" |> ReasonReact.string} </Text>\n          | Error(_e) => <Text> {\"Error\" |> ReasonReact.string} </Text>\n          | Data(_) =>\n            <View>\n              <HeartContainer>\n                <Heart filled=true style={styles##explodeHeart} />\n                <Heart filled=true style={styles##explodeHeart} />\n              </HeartContainer>\n              {self.state |> List.length >= 5 ?\n                 <Wave onFinish={_event => self.send(Reset)} /> :\n                 ReasonReact.null}\n              <TriggerContainer onPress={_event => self.send(Click(true))} />\n              <Text style=tempCounterStyle>\n                {ReasonReact.string(string_of_int(self.state |> List.length))}\n              </Text>\n            </View>\n          }\n        }\n      </GetAllJerksQuery>\n    </ReasonApollo.Provider>,\n};\n\nlet default = ReasonReact.wrapReasonForJs(~component, _ => make([||]));"}]}}
Read message 
{"jsonrpc":"2.0","id":516,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00476837158203ms
➡️ running bsc /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/lanceharper/Repositories/jerk-twitch/client/lib/bs/src/components/App' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src/graphql-types' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/components' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/private' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/graphql_ppx/ppx' -ppx ''\''/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/reactjs_jsx_ppx_2.exe'\''' -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/.lsp/App.ast with pwd /Users/lanceharper/Repositories/jerk-twitch/client
Sending response {"id": 516, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":517,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0190734863281ms
Sending response {"id": 517, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, Pervasives, HeartContainer, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 28, "character": 4}, "end": {"line": 28, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":518,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":19,"character":11},"end":{"line":19,"character":18}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0119209289551ms
Sending response {"id": 518, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":519,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0128746032715ms
Sending response {"id": 519, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, Pervasives, HeartContainer, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 28, "character": 4}, "end": {"line": 28, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Running diagnostics for file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re
type error here [1mFile "[1m", line 21, characters 6-7[0m[0m:
[1;31mError[0m: Unknown field on type Query
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re", "diagnostics": [{"range": {"start": {"line": 20, "character": 6}, "end": {"line": 20, "character": 7}}, "message": "Error: Unknown field on type Query", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","id":520,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":19,"character":12}}}
[server] Got a method textDocument/hover
[server] processing took 0.0190734863281ms
FINDING /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/js_dict.cmti src /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/js_dict.mli
Trying for declared Value 1021 in file file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re
Sending response {"id": 520, "jsonrpc": "2.0", "result": {"range": {"start": {"line": 19, "character": 2}, "end": {"line": 23, "character": 3}}, "contents": {"kind": "markdown", "value": "```\nJs_dict.t(Js.Json.t)\n```\n\n```\ntype t('a)\n```\n\n<root>/client/src/components/App/App.re"}}}
Read message 
{"jsonrpc":"2.0","id":521,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":19,"character":18}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.0169277191162ms
Got a loc for pos
Sending response {"id": 521, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 19, "character": 2}, "end": {"line": 23, "character": 3}}, "kind": 2}, {"range": {"start": {"line": 23, "character": -2}, "end": {"line": 23, "character": 3}}, "kind": 2}]}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re","version":213},"contentChanges":[{"text":"/* App is the actual entry point for the application. It matches on the route prop to determine which\n   sub-component to render */\nopen BsReactNative;\nopen Twitch;\n\ntype item = {clickedInWave: bool};\n\ntype state = list(item);\n\ntype clicked = bool;\n\ntype action =\n  | Click(clicked)\n  | Reset;\nlet tempCounterStyle = Style.(style([color(String(\"lightblue\"))]));\n\nlet component = ReasonReact.reducerComponent(\"App\");\n\nmodule GetAllJerks = [%graphql {|\n  query getJerks($name: String!){\n      pokemon(name: $name) {\n          name\n      }\n  }\n|}];\n\nmodule GetAllJerksQuery = ReasonApollo.CreateQuery(GetAllJerks);\n\nlet styles =\n  StyleSheet.create(\n    Style.{\n      \"explodeHeart\":\n        style([left(Pt(0.)), top(Pt(0.)), position(Absolute)]),\n    },\n  );\n\nlet make = _children => {\n  ...component,\n  didMount: _ => onAuthorized(twitchAuth => Js.log(clientIdGet(twitchAuth))),\n\n  initialState: () => [],\n\n  reducer: (action, state) =>\n    switch (action) {\n    | Click(clicked) =>\n      clicked ?\n        ReasonReact.Update([{clickedInWave: true}, ...state]) :\n        ReasonReact.NoUpdate\n    | Reset => ReasonReact.Update([])\n    },\n\n  render: self =>\n    <ReasonApollo.Provider client=Client.instance>\n      <GetAllJerksQuery>\n        ...{({result, _}) =>\n          switch (result) {\n          | Loading => <Text> {\"Loading\" |> ReasonReact.string} </Text>\n          | Error(_e) => <Text> {\"Error\" |> ReasonReact.string} </Text>\n          | Data(_) =>\n            <View>\n              <HeartContainer>\n                <Heart filled=true style={styles##explodeHeart} />\n                <Heart filled=true style={styles##explodeHeart} />\n              </HeartContainer>\n              {self.state |> List.length >= 5 ?\n                 <Wave onFinish={_event => self.send(Reset)} /> :\n                 ReasonReact.null}\n              <TriggerContainer onPress={_event => self.send(Click(true))} />\n              <Text style=tempCounterStyle>\n                {ReasonReact.string(string_of_int(self.state |> List.length))}\n              </Text>\n            </View>\n          }\n        }\n      </GetAllJerksQuery>\n    </ReasonApollo.Provider>,\n};\n\nlet default = ReasonReact.wrapReasonForJs(~component, _ => make([||]));"}]}}
Read message 
{"jsonrpc":"2.0","id":522,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.00786781311035ms
➡️ running bsc /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/lanceharper/Repositories/jerk-twitch/client/lib/bs/src/components/App' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src/graphql-types' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/components' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/private' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/graphql_ppx/ppx' -ppx ''\''/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/reactjs_jsx_ppx_2.exe'\''' -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/.lsp/App.ast with pwd /Users/lanceharper/Repositories/jerk-twitch/client
Sending response {"id": 522, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, Pervasives, HeartContainer, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 28, "character": 4}, "end": {"line": 28, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":523,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":19,"character":16},"end":{"line":19,"character":16}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00596046447754ms
Sending response {"id": 523, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":524,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0119209289551ms
Sending response {"id": 524, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, Pervasives, HeartContainer, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 28, "character": 4}, "end": {"line": 28, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":525,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":19,"character":20}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.0100135803223ms
Got a loc for pos
Sending response {"id": 525, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 19, "character": 2}, "end": {"line": 23, "character": 3}}, "kind": 2}, {"range": {"start": {"line": 23, "character": -2}, "end": {"line": 23, "character": 3}}, "kind": 2}]}
Running diagnostics for file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re
type error here [1mFile "[1m", line 21, characters 6-7[0m[0m:
[1;31mError[0m: Unknown field on type Query
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re", "diagnostics": [{"range": {"start": {"line": 20, "character": 6}, "end": {"line": 20, "character": 7}}, "message": "Error: Unknown field on type Query", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","id":526,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":19,"character":18},"end":{"line":19,"character":22}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0109672546387ms
Sending response {"id": 526, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re","version":214},"contentChanges":[{"text":"/* App is the actual entry point for the application. It matches on the route prop to determine which\n   sub-component to render */\nopen BsReactNative;\nopen Twitch;\n\ntype item = {clickedInWave: bool};\n\ntype state = list(item);\n\ntype clicked = bool;\n\ntype action =\n  | Click(clicked)\n  | Reset;\nlet tempCounterStyle = Style.(style([color(String(\"lightblue\"))]));\n\nlet component = ReasonReact.reducerComponent(\"App\");\n\nmodule GetAllJerks = [%graphql {|\n  query getJerks($f: String!){\n      pokemon(name: $name) {\n          name\n      }\n  }\n|}];\n\nmodule GetAllJerksQuery = ReasonApollo.CreateQuery(GetAllJerks);\n\nlet styles =\n  StyleSheet.create(\n    Style.{\n      \"explodeHeart\":\n        style([left(Pt(0.)), top(Pt(0.)), position(Absolute)]),\n    },\n  );\n\nlet make = _children => {\n  ...component,\n  didMount: _ => onAuthorized(twitchAuth => Js.log(clientIdGet(twitchAuth))),\n\n  initialState: () => [],\n\n  reducer: (action, state) =>\n    switch (action) {\n    | Click(clicked) =>\n      clicked ?\n        ReasonReact.Update([{clickedInWave: true}, ...state]) :\n        ReasonReact.NoUpdate\n    | Reset => ReasonReact.Update([])\n    },\n\n  render: self =>\n    <ReasonApollo.Provider client=Client.instance>\n      <GetAllJerksQuery>\n        ...{({result, _}) =>\n          switch (result) {\n          | Loading => <Text> {\"Loading\" |> ReasonReact.string} </Text>\n          | Error(_e) => <Text> {\"Error\" |> ReasonReact.string} </Text>\n          | Data(_) =>\n            <View>\n              <HeartContainer>\n                <Heart filled=true style={styles##explodeHeart} />\n                <Heart filled=true style={styles##explodeHeart} />\n              </HeartContainer>\n              {self.state |> List.length >= 5 ?\n                 <Wave onFinish={_event => self.send(Reset)} /> :\n                 ReasonReact.null}\n              <TriggerContainer onPress={_event => self.send(Click(true))} />\n              <Text style=tempCounterStyle>\n                {ReasonReact.string(string_of_int(self.state |> List.length))}\n              </Text>\n            </View>\n          }\n        }\n      </GetAllJerksQuery>\n    </ReasonApollo.Provider>,\n};\n\nlet default = ReasonReact.wrapReasonForJs(~component, _ => make([||]));"}]}}
Read message 
{"jsonrpc":"2.0","id":527,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":19,"character":19},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.0109672546387ms
Opens folkz > 2 BsReactNative ... Twitch
Package opens Pervasives
Package opens Pervasives
FINDING /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/pervasives.cmti src /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/pervasives.mli
resolving open BsReactNative.place holder
Not local
FINDING /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/BsReactNative.cmt src 
resolving open Twitch.place holder
Not local
FINDING /Users/lanceharper/Repositories/jerk-twitch/client/lib/bs/src/components/App/Twitch.cmt src /Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/Twitch.re
Opens nows 3 file:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/pervasives.mli file:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/BsReactNative.cmt file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/Twitch.re
---------------- LOCAL VAL
 - Completing in file:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/pervasives.mli
 -- not capitalized
 - Completing in file:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/BsReactNative.cmt
 -- not capitalized
 - Completing in file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/Twitch.re
 -- not capitalized
Sending response {"id": 527, "jsonrpc": "2.0", "result": [{"label": "format_of_string", "kind": 12, "detail": "format6(\n  'a,\n  'b,\n  'c,\n  'd,\n  'e,\n  'f\n) => format6('a, 'b, 'c, 'd, 'e, 'f)", "documentation": "`format_of_string s` returns a format string read from the string literal `s`. Note: `format_of_string` can not convert a string argument that is not a literal. If you need this functionality, use the more general format_from_string function.\n\n\n\nfile:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/pervasives.mli:1169"}, {"label": "failwith", "kind": 12, "detail": "string => 'a", "documentation": "Raise exception `Failure` with the given string.\n\n\n\nfile:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/pervasives.mli:39"}, {"label": "float", "kind": 12, "detail": "int => float", "documentation": "Same as float_of_int.\n\n\n\nfile:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/pervasives.mli:538"}, {"label": "fst", "kind": 12, "detail": "(('a, 'b)) => 'a", "documentation": "Return the first component of a pair.\n\n\n\nfile:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/pervasives.mli:684"}, {"label": "float_of_int", "kind": 12, "detail": "int => float", "documentation": "Convert an integer to floating-point.\n\n\n\nfile:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/pervasives.mli:541"}, {"label": "flush", "kind": 12, "detail": "out_channel => unit", "documentation": "Flush the buffer associated with the given output channel, performing all pending writes on that channel. Interactive programs must be careful about flushing standard output and standard error at the right time.\n\n\n\nfile:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/pervasives.mli:839"}, {"label": "flush_all", "kind": 12, "detail": "unit => unit", "documentation": "Flush all open output channels; ignore errors.\n\n\n\nfile:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/pervasives.mli:845"}, {"label": "frexp", "kind": 12, "detail": "float => (float, int)", "documentation": "`frexp f` returns the pair of the significant and the exponent of `f`. When `f` is zero, the significant `x` and the exponent `n` of `f` are equal to zero. When `f` is non-zero, they are defined by `f = x *. 2 ** n` and `0.5 <= x < 1.0`.\n\n\n\nfile:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/pervasives.mli:524"}, {"label": "float_of_string", "kind": 12, "detail": "string => float", "documentation": "Convert the given string to a float. Raise `Failure \"float_of_string\"` if the given string is not a valid representation of a float.\n\n\n\nfile:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/pervasives.mli:677"}, {"label": "floor", "kind": 12, "detail": "float => float", "documentation": "Round below to an integer value. `floor f` returns the greatest integer value less than or equal to `f`. The result is returned as a float.\n\n\n\nfile:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/pervasives.mli:418"}, {"label": "format4", "kind": 22, "detail": "type format4('a, 'b, 'c, 'd) = format6(\n  'a,\n  'b,\n  'c,\n  'c,\n  'c,\n  'd\n)", "documentation": "No docs\n\nfile:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/pervasives.mli:1162"}, {"label": "format", "kind": 22, "detail": "type format('a, 'b, 'c) = format4('a, 'b, 'c, 'c)", "documentation": "No docs\n\nfile:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/pervasives.mli:1164"}, {"label": "format6", "kind": 22, "detail": "type format6(\n  'a,\n  'b,\n  'c,\n  'd,\n  'e,\n  'f\n) = CamlinternalFormatBasics.format6('a, 'b, 'c, 'd, 'e, 'f)", "documentation": "No docs\n\nfile:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/pervasives.mli:1159"}, {"label": "fpclass", "kind": 22, "detail": "type fpclass = \n  | FP_normal\n  | FP_subnormal\n  | FP_zero\n  | FP_infinite\n  | FP_nan\n", "documentation": "The five classes of floating-point numbers, as determined by the classify_float function.\n\n\n\nfile:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/pervasives.mli:592"}]}
Read message 
{"jsonrpc":"2.0","id":528,"method":"completionItem/resolve","params":{"label":"failwith","detail":"string => 'a","documentation":"Raise exception `Failure` with the given string.\n\n\n\nfile:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/pervasives.mli:39","insertTextFormat":1,"kind":12}}
[server] Got a method completionItem/resolve
[server] processing took 0.0190734863281ms
Sending response {"id": 528, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re","version":215},"contentChanges":[{"text":"/* App is the actual entry point for the application. It matches on the route prop to determine which\n   sub-component to render */\nopen BsReactNative;\nopen Twitch;\n\ntype item = {clickedInWave: bool};\n\ntype state = list(item);\n\ntype clicked = bool;\n\ntype action =\n  | Click(clicked)\n  | Reset;\nlet tempCounterStyle = Style.(style([color(String(\"lightblue\"))]));\n\nlet component = ReasonReact.reducerComponent(\"App\");\n\nmodule GetAllJerks = [%graphql {|\n  query getJerks($fo: String!){\n      pokemon(name: $name) {\n          name\n      }\n  }\n|}];\n\nmodule GetAllJerksQuery = ReasonApollo.CreateQuery(GetAllJerks);\n\nlet styles =\n  StyleSheet.create(\n    Style.{\n      \"explodeHeart\":\n        style([left(Pt(0.)), top(Pt(0.)), position(Absolute)]),\n    },\n  );\n\nlet make = _children => {\n  ...component,\n  didMount: _ => onAuthorized(twitchAuth => Js.log(clientIdGet(twitchAuth))),\n\n  initialState: () => [],\n\n  reducer: (action, state) =>\n    switch (action) {\n    | Click(clicked) =>\n      clicked ?\n        ReasonReact.Update([{clickedInWave: true}, ...state]) :\n        ReasonReact.NoUpdate\n    | Reset => ReasonReact.Update([])\n    },\n\n  render: self =>\n    <ReasonApollo.Provider client=Client.instance>\n      <GetAllJerksQuery>\n        ...{({result, _}) =>\n          switch (result) {\n          | Loading => <Text> {\"Loading\" |> ReasonReact.string} </Text>\n          | Error(_e) => <Text> {\"Error\" |> ReasonReact.string} </Text>\n          | Data(_) =>\n            <View>\n              <HeartContainer>\n                <Heart filled=true style={styles##explodeHeart} />\n                <Heart filled=true style={styles##explodeHeart} />\n              </HeartContainer>\n              {self.state |> List.length >= 5 ?\n                 <Wave onFinish={_event => self.send(Reset)} /> :\n                 ReasonReact.null}\n              <TriggerContainer onPress={_event => self.send(Click(true))} />\n              <Text style=tempCounterStyle>\n                {ReasonReact.string(string_of_int(self.state |> List.length))}\n              </Text>\n            </View>\n          }\n        }\n      </GetAllJerksQuery>\n    </ReasonApollo.Provider>,\n};\n\nlet default = ReasonReact.wrapReasonForJs(~component, _ => make([||]));"}]}}
Read message 
{"jsonrpc":"2.0","id":529,"method":"completionItem/resolve","params":{"label":"format","detail":"type format('a, 'b, 'c) = format4('a, 'b, 'c, 'c)","documentation":"No docs\n\nfile:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/pervasives.mli:1164","insertTextFormat":1,"kind":22}}
[server] Got a method completionItem/resolve
[server] processing took 0.00905990600586ms
Sending response {"id": 529, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re","version":216},"contentChanges":[{"text":"/* App is the actual entry point for the application. It matches on the route prop to determine which\n   sub-component to render */\nopen BsReactNative;\nopen Twitch;\n\ntype item = {clickedInWave: bool};\n\ntype state = list(item);\n\ntype clicked = bool;\n\ntype action =\n  | Click(clicked)\n  | Reset;\nlet tempCounterStyle = Style.(style([color(String(\"lightblue\"))]));\n\nlet component = ReasonReact.reducerComponent(\"App\");\n\nmodule GetAllJerks = [%graphql {|\n  query getJerks($foo: String!){\n      pokemon(name: $name) {\n          name\n      }\n  }\n|}];\n\nmodule GetAllJerksQuery = ReasonApollo.CreateQuery(GetAllJerks);\n\nlet styles =\n  StyleSheet.create(\n    Style.{\n      \"explodeHeart\":\n        style([left(Pt(0.)), top(Pt(0.)), position(Absolute)]),\n    },\n  );\n\nlet make = _children => {\n  ...component,\n  didMount: _ => onAuthorized(twitchAuth => Js.log(clientIdGet(twitchAuth))),\n\n  initialState: () => [],\n\n  reducer: (action, state) =>\n    switch (action) {\n    | Click(clicked) =>\n      clicked ?\n        ReasonReact.Update([{clickedInWave: true}, ...state]) :\n        ReasonReact.NoUpdate\n    | Reset => ReasonReact.Update([])\n    },\n\n  render: self =>\n    <ReasonApollo.Provider client=Client.instance>\n      <GetAllJerksQuery>\n        ...{({result, _}) =>\n          switch (result) {\n          | Loading => <Text> {\"Loading\" |> ReasonReact.string} </Text>\n          | Error(_e) => <Text> {\"Error\" |> ReasonReact.string} </Text>\n          | Data(_) =>\n            <View>\n              <HeartContainer>\n                <Heart filled=true style={styles##explodeHeart} />\n                <Heart filled=true style={styles##explodeHeart} />\n              </HeartContainer>\n              {self.state |> List.length >= 5 ?\n                 <Wave onFinish={_event => self.send(Reset)} /> :\n                 ReasonReact.null}\n              <TriggerContainer onPress={_event => self.send(Click(true))} />\n              <Text style=tempCounterStyle>\n                {ReasonReact.string(string_of_int(self.state |> List.length))}\n              </Text>\n            </View>\n          }\n        }\n      </GetAllJerksQuery>\n    </ReasonApollo.Provider>,\n};\n\nlet default = ReasonReact.wrapReasonForJs(~component, _ => make([||]));"}]}}
Read message 
{"jsonrpc":"2.0","id":530,"method":"completionItem/resolve","params":{"label":"format_of_string","detail":"format6(\n  'a,\n  'b,\n  'c,\n  'd,\n  'e,\n  'f\n) => format6('a, 'b, 'c, 'd, 'e, 'f)","documentation":"`format_of_string s` returns a format string read from the string literal `s`. Note: `format_of_string` can not convert a string argument that is not a literal. If you need this functionality, use the more general format_from_string function.\n\n\n\nfile:///Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/pervasives.mli:1169","insertTextFormat":1,"kind":12}}
[server] Got a method completionItem/resolve
[server] processing took 0.014066696167ms
Sending response {"id": 530, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":531,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0119209289551ms
➡️ running bsc /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/lanceharper/Repositories/jerk-twitch/client/lib/bs/src/components/App' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src/graphql-types' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/components' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/private' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/graphql_ppx/ppx' -ppx ''\''/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/reactjs_jsx_ppx_2.exe'\''' -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/.lsp/App.ast with pwd /Users/lanceharper/Repositories/jerk-twitch/client
Sending response {"id": 531, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, Pervasives, HeartContainer, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 28, "character": 4}, "end": {"line": 28, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":532,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":19,"character":21},"end":{"line":19,"character":21}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00596046447754ms
Sending response {"id": 532, "jsonrpc": "2.0", "result": null}
Running diagnostics for file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re
type error here [1mFile "[1m", line 20, characters 17-21[0m[0m:
[1;31mError[0m: Variable "$foo" is never used in operation "getJerks"
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re", "diagnostics": [{"range": {"start": {"line": 19, "character": 17}, "end": {"line": 19, "character": 21}}, "message": "Error: Variable \"$foo\" is never used in operation \"getJerks\"", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","id":533,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0638961791992ms
Sending response {"id": 533, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, Pervasives, HeartContainer, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 28, "character": 4}, "end": {"line": 28, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re","version":216},"contentChanges":[{"text":"/* App is the actual entry point for the application. It matches on the route prop to determine which\n   sub-component to render */\nopen BsReactNative;\nopen Twitch;\n\ntype item = {clickedInWave: bool};\n\ntype state = list(item);\n\ntype clicked = bool;\n\ntype action =\n  | Click(clicked)\n  | Reset;\nlet tempCounterStyle = Style.(style([color(String(\"lightblue\"))]));\n\nlet component = ReasonReact.reducerComponent(\"App\");\n\nmodule GetAllJerks = [%graphql {|\n  query getJerks($foo: String!){\n      pokemon(name: $name) {\n          name\n      }\n  }\n|}];\n\nmodule GetAllJerksQuery = ReasonApollo.CreateQuery(GetAllJerks);\n\nlet styles =\n  StyleSheet.create(\n    Style.{\n      \"explodeHeart\":\n        style([left(Pt(0.)), top(Pt(0.)), position(Absolute)]),\n    },\n  );\n\nlet make = _children => {\n  ...component,\n  didMount: _ => onAuthorized(twitchAuth => Js.log(clientIdGet(twitchAuth))),\n\n  initialState: () => [],\n\n  reducer: (action, state) =>\n    switch (action) {\n    | Click(clicked) =>\n      clicked ?\n        ReasonReact.Update([{clickedInWave: true}, ...state]) :\n        ReasonReact.NoUpdate\n    | Reset => ReasonReact.Update([])\n    },\n\n  render: self =>\n    <ReasonApollo.Provider client=Client.instance>\n      <GetAllJerksQuery>\n        ...{({result, _}) =>\n          switch (result) {\n          | Loading => <Text> {\"Loading\" |> ReasonReact.string} </Text>\n          | Error(_e) => <Text> {\"Error\" |> ReasonReact.string} </Text>\n          | Data(_) =>\n            <View>\n              <HeartContainer>\n                <Heart filled=true style={styles##explodeHeart} />\n                <Heart filled=true style={styles##explodeHeart} />\n              </HeartContainer>\n              {self.state |> List.length >= 5 ?\n                 <Wave onFinish={_event => self.send(Reset)} /> :\n                 ReasonReact.null}\n              <TriggerContainer onPress={_event => self.send(Click(true))} />\n              <Text style=tempCounterStyle>\n                {ReasonReact.string(string_of_int(self.state |> List.length))}\n              </Text>\n            </View>\n          }\n        }\n      </GetAllJerksQuery>\n    </ReasonApollo.Provider>,\n};\n\nlet default = ReasonReact.wrapReasonForJs(~component, _ => make([||]));"}]}}
Read message 
{"jsonrpc":"2.0","id":534,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00786781311035ms
➡️ running bsc /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/lanceharper/Repositories/jerk-twitch/client/lib/bs/src/components/App' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src/graphql-types' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/components' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/private' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/graphql_ppx/ppx' -ppx ''\''/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/reactjs_jsx_ppx_2.exe'\''' -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/.lsp/App.ast with pwd /Users/lanceharper/Repositories/jerk-twitch/client
Sending response {"id": 534, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":535,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.00596046447754ms
Sending response {"id": 535, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, Pervasives, HeartContainer, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 28, "character": 4}, "end": {"line": 28, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Running diagnostics for file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re
type error here [1mFile "[1m", line 20, characters 17-21[0m[0m:
[1;31mError[0m: Variable "$foo" is never used in operation "getJerks"
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re", "diagnostics": [{"range": {"start": {"line": 19, "character": 17}, "end": {"line": 19, "character": 21}}, "message": "Error: Variable \"$foo\" is never used in operation \"getJerks\"", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":534}}
Read message 
{"jsonrpc":"2.0","id":536,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.014066696167ms
Sending response {"id": 536, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, Pervasives, HeartContainer, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 28, "character": 4}, "end": {"line": 28, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re","version":216},"contentChanges":[{"text":"/* App is the actual entry point for the application. It matches on the route prop to determine which\n   sub-component to render */\nopen BsReactNative;\nopen Twitch;\n\ntype item = {clickedInWave: bool};\n\ntype state = list(item);\n\ntype clicked = bool;\n\ntype action =\n  | Click(clicked)\n  | Reset;\nlet tempCounterStyle = Style.(style([color(String(\"lightblue\"))]));\n\nlet component = ReasonReact.reducerComponent(\"App\");\n\nmodule GetAllJerks = [%graphql {|\n  query getJerks($foo: String!){\n      pokemon(name: $name) {\n          name\n      }\n  }\n|}];\n\nmodule GetAllJerksQuery = ReasonApollo.CreateQuery(GetAllJerks);\n\nlet styles =\n  StyleSheet.create(\n    Style.{\n      \"explodeHeart\":\n        style([left(Pt(0.)), top(Pt(0.)), position(Absolute)]),\n    },\n  );\n\nlet make = _children => {\n  ...component,\n  didMount: _ => onAuthorized(twitchAuth => Js.log(clientIdGet(twitchAuth))),\n\n  initialState: () => [],\n\n  reducer: (action, state) =>\n    switch (action) {\n    | Click(clicked) =>\n      clicked ?\n        ReasonReact.Update([{clickedInWave: true}, ...state]) :\n        ReasonReact.NoUpdate\n    | Reset => ReasonReact.Update([])\n    },\n\n  render: self =>\n    <ReasonApollo.Provider client=Client.instance>\n      <GetAllJerksQuery>\n        ...{({result, _}) =>\n          switch (result) {\n          | Loading => <Text> {\"Loading\" |> ReasonReact.string} </Text>\n          | Error(_e) => <Text> {\"Error\" |> ReasonReact.string} </Text>\n          | Data(_) =>\n            <View>\n              <HeartContainer>\n                <Heart filled=true style={styles##explodeHeart} />\n                <Heart filled=true style={styles##explodeHeart} />\n              </HeartContainer>\n              {self.state |> List.length >= 5 ?\n                 <Wave onFinish={_event => self.send(Reset)} /> :\n                 ReasonReact.null}\n              <TriggerContainer onPress={_event => self.send(Click(true))} />\n              <Text style=tempCounterStyle>\n                {ReasonReact.string(string_of_int(self.state |> List.length))}\n              </Text>\n            </View>\n          }\n        }\n      </GetAllJerksQuery>\n    </ReasonApollo.Provider>,\n};\n\nlet default = ReasonReact.wrapReasonForJs(~component, _ => make([||]));"}]}}
Read message 
{"jsonrpc":"2.0","id":537,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.014066696167ms
➡️ running bsc /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/lanceharper/Repositories/jerk-twitch/client/lib/bs/src/components/App' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src/graphql-types' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/components' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/private' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/graphql_ppx/ppx' -ppx ''\''/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/reactjs_jsx_ppx_2.exe'\''' -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/.lsp/App.ast with pwd /Users/lanceharper/Repositories/jerk-twitch/client
Sending response {"id": 537, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":538,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.00786781311035ms
Sending response {"id": 538, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, Pervasives, HeartContainer, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 28, "character": 4}, "end": {"line": 28, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Running diagnostics for file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re
type error here [1mFile "[1m", line 20, characters 17-21[0m[0m:
[1;31mError[0m: Variable "$foo" is never used in operation "getJerks"
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re", "diagnostics": [{"range": {"start": {"line": 19, "character": 17}, "end": {"line": 19, "character": 21}}, "message": "Error: Variable \"$foo\" is never used in operation \"getJerks\"", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","id":539,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0150203704834ms
Sending response {"id": 539, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, Pervasives, HeartContainer, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 28, "character": 4}, "end": {"line": 28, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":537}}
Read message 
{"jsonrpc":"2.0","id":540,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":20,"character":18}}}
[server] Got a method textDocument/hover
[server] processing took 0.0119209289551ms
Sending response {"id": 540, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re","version":219},"contentChanges":[{"text":"/* App is the actual entry point for the application. It matches on the route prop to determine which\n   sub-component to render */\nopen BsReactNative;\nopen Twitch;\n\ntype item = {clickedInWave: bool};\n\ntype state = list(item);\n\ntype clicked = bool;\n\ntype action =\n  | Click(clicked)\n  | Reset;\nlet tempCounterStyle = Style.(style([color(String(\"lightblue\"))]));\n\nlet component = ReasonReact.reducerComponent(\"App\");\n\nmodule GetAllJerks = [%graphql {|\n  query getJerks($name: String!){\n      pokemon(name: $name) {\n          name\n      }\n  }\n|}];\n\nmodule GetAllJerksQuery = ReasonApollo.CreateQuery(GetAllJerks);\n\nlet styles =\n  StyleSheet.create(\n    Style.{\n      \"explodeHeart\":\n        style([left(Pt(0.)), top(Pt(0.)), position(Absolute)]),\n    },\n  );\n\nlet make = _children => {\n  ...component,\n  didMount: _ => onAuthorized(twitchAuth => Js.log(clientIdGet(twitchAuth))),\n\n  initialState: () => [],\n\n  reducer: (action, state) =>\n    switch (action) {\n    | Click(clicked) =>\n      clicked ?\n        ReasonReact.Update([{clickedInWave: true}, ...state]) :\n        ReasonReact.NoUpdate\n    | Reset => ReasonReact.Update([])\n    },\n\n  render: self =>\n    <ReasonApollo.Provider client=Client.instance>\n      <GetAllJerksQuery>\n        ...{({result, _}) =>\n          switch (result) {\n          | Loading => <Text> {\"Loading\" |> ReasonReact.string} </Text>\n          | Error(_e) => <Text> {\"Error\" |> ReasonReact.string} </Text>\n          | Data(_) =>\n            <View>\n              <HeartContainer>\n                <Heart filled=true style={styles##explodeHeart} />\n                <Heart filled=true style={styles##explodeHeart} />\n              </HeartContainer>\n              {self.state |> List.length >= 5 ?\n                 <Wave onFinish={_event => self.send(Reset)} /> :\n                 ReasonReact.null}\n              <TriggerContainer onPress={_event => self.send(Click(true))} />\n              <Text style=tempCounterStyle>\n                {ReasonReact.string(string_of_int(self.state |> List.length))}\n              </Text>\n            </View>\n          }\n        }\n      </GetAllJerksQuery>\n    </ReasonApollo.Provider>,\n};\n\nlet default = ReasonReact.wrapReasonForJs(~component, _ => make([||]));"}]}}
Read message 
{"jsonrpc":"2.0","id":541,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0169277191162ms
➡️ running bsc /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/lanceharper/Repositories/jerk-twitch/client/lib/bs/src/components/App' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src/graphql-types' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/components' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/private' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/graphql_ppx/ppx' -ppx ''\''/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/reactjs_jsx_ppx_2.exe'\''' -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/.lsp/App.ast with pwd /Users/lanceharper/Repositories/jerk-twitch/client
Sending response {"id": 541, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, Pervasives, HeartContainer, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 28, "character": 4}, "end": {"line": 28, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":542,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":19,"character":18},"end":{"line":19,"character":22}},"context":{"diagnostics":[{"range":{"start":{"line":19,"character":17},"end":{"line":19,"character":21}},"message":"Error: Variable \"$foo\" is never used in operation \"getJerks\"","severity":1}]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00810623168945ms
Sending response {"id": 542, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":543,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0100135803223ms
Sending response {"id": 543, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, Pervasives, HeartContainer, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 28, "character": 4}, "end": {"line": 28, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re","version":220},"contentChanges":[{"text":"/* App is the actual entry point for the application. It matches on the route prop to determine which\n   sub-component to render */\nopen BsReactNative;\nopen Twitch;\n\ntype item = {clickedInWave: bool};\n\ntype state = list(item);\n\ntype clicked = bool;\n\ntype action =\n  | Click(clicked)\n  | Reset;\nlet tempCounterStyle = Style.(style([color(String(\"lightblue\"))]));\n\nlet component = ReasonReact.reducerComponent(\"App\");\n\nmodule GetAllJerks = [%graphql {|\n  query getPokemon($name: String!){\n      pokemon(name: $name) {\n          name\n      }\n  }\n|}];\n\nmodule GetAllJerksQuery = ReasonApollo.CreateQuery(GetAllJerks);\n\nlet styles =\n  StyleSheet.create(\n    Style.{\n      \"explodeHeart\":\n        style([left(Pt(0.)), top(Pt(0.)), position(Absolute)]),\n    },\n  );\n\nlet make = _children => {\n  ...component,\n  didMount: _ => onAuthorized(twitchAuth => Js.log(clientIdGet(twitchAuth))),\n\n  initialState: () => [],\n\n  reducer: (action, state) =>\n    switch (action) {\n    | Click(clicked) =>\n      clicked ?\n        ReasonReact.Update([{clickedInWave: true}, ...state]) :\n        ReasonReact.NoUpdate\n    | Reset => ReasonReact.Update([])\n    },\n\n  render: self =>\n    <ReasonApollo.Provider client=Client.instance>\n      <GetAllJerksQuery>\n        ...{({result, _}) =>\n          switch (result) {\n          | Loading => <Text> {\"Loading\" |> ReasonReact.string} </Text>\n          | Error(_e) => <Text> {\"Error\" |> ReasonReact.string} </Text>\n          | Data(_) =>\n            <View>\n              <HeartContainer>\n                <Heart filled=true style={styles##explodeHeart} />\n                <Heart filled=true style={styles##explodeHeart} />\n              </HeartContainer>\n              {self.state |> List.length >= 5 ?\n                 <Wave onFinish={_event => self.send(Reset)} /> :\n                 ReasonReact.null}\n              <TriggerContainer onPress={_event => self.send(Click(true))} />\n              <Text style=tempCounterStyle>\n                {ReasonReact.string(string_of_int(self.state |> List.length))}\n              </Text>\n            </View>\n          }\n        }\n      </GetAllJerksQuery>\n    </ReasonApollo.Provider>,\n};\n\nlet default = ReasonReact.wrapReasonForJs(~component, _ => make([||]));"}]}}
Read message 
{"jsonrpc":"2.0","id":544,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0109672546387ms
➡️ running bsc /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/lanceharper/Repositories/jerk-twitch/client/lib/bs/src/components/App' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src/graphql-types' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/components' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/private' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/graphql_ppx/ppx' -ppx ''\''/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/reactjs_jsx_ppx_2.exe'\''' -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/.lsp/App.ast with pwd /Users/lanceharper/Repositories/jerk-twitch/client
Sending response {"id": 544, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, Pervasives, HeartContainer, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 28, "character": 4}, "end": {"line": 28, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":545,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":19,"character":8},"end":{"line":19,"character":18}},"context":{"diagnostics":[{"range":{"start":{"line":19,"character":17},"end":{"line":19,"character":21}},"message":"Error: Variable \"$foo\" is never used in operation \"getJerks\"","severity":1}]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00715255737305ms
Sending response {"id": 545, "jsonrpc": "2.0", "result": null}
Running diagnostics for file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re
type error here [1mFile "[1m", line 21, characters 6-7[0m[0m:
[1;31mError[0m: Unknown field on type Query
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re", "diagnostics": [{"range": {"start": {"line": 20, "character": 6}, "end": {"line": 20, "character": 7}}, "message": "Error: Unknown field on type Query", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","id":546,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0150203704834ms
Sending response {"id": 546, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, Pervasives, HeartContainer, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 28, "character": 4}, "end": {"line": 28, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":547,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":19,"character":8},"end":{"line":19,"character":18}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0100135803223ms
Sending response {"id": 547, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re","version":221},"contentChanges":[{"text":"/* App is the actual entry point for the application. It matches on the route prop to determine which\n   sub-component to render */\nopen BsReactNative;\nopen Twitch;\n\ntype item = {clickedInWave: bool};\n\ntype state = list(item);\n\ntype clicked = bool;\n\ntype action =\n  | Click(clicked)\n  | Reset;\nlet tempCounterStyle = Style.(style([color(String(\"lightblue\"))]));\n\nlet component = ReasonReact.reducerComponent(\"App\");\n\nmodule GetAllJerks = [%graphql {|\n  {\n    getJerks\n  }\n|}];\n\nmodule GetAllJerksQuery = ReasonApollo.CreateQuery(GetAllJerks);\n\nlet styles =\n  StyleSheet.create(\n    Style.{\n      \"explodeHeart\":\n        style([left(Pt(0.)), top(Pt(0.)), position(Absolute)]),\n    },\n  );\n\nlet make = _children => {\n  ...component,\n  didMount: _ => onAuthorized(twitchAuth => Js.log(clientIdGet(twitchAuth))),\n\n  initialState: () => [],\n\n  reducer: (action, state) =>\n    switch (action) {\n    | Click(clicked) =>\n      clicked ?\n        ReasonReact.Update([{clickedInWave: true}, ...state]) :\n        ReasonReact.NoUpdate\n    | Reset => ReasonReact.Update([])\n    },\n\n  render: self =>\n    <ReasonApollo.Provider client=Client.instance>\n      <GetAllJerksQuery>\n        ...{({result, _}) =>\n          switch (result) {\n          | Loading => <Text> {\"Loading\" |> ReasonReact.string} </Text>\n          | Error(_e) => <Text> {\"Error\" |> ReasonReact.string} </Text>\n          | Data(_) =>\n            <View>\n              <HeartContainer>\n                <Heart filled=true style={styles##explodeHeart} />\n                <Heart filled=true style={styles##explodeHeart} />\n              </HeartContainer>\n              {self.state |> List.length >= 5 ?\n                 <Wave onFinish={_event => self.send(Reset)} /> :\n                 ReasonReact.null}\n              <TriggerContainer onPress={_event => self.send(Click(true))} />\n              <Text style=tempCounterStyle>\n                {ReasonReact.string(string_of_int(self.state |> List.length))}\n              </Text>\n            </View>\n          }\n        }\n      </GetAllJerksQuery>\n    </ReasonApollo.Provider>,\n};\n\nlet default = ReasonReact.wrapReasonForJs(~component, _ => make([||]));"}]}}
Read message 
{"jsonrpc":"2.0","id":548,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.00905990600586ms
➡️ running bsc /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/lanceharper/Repositories/jerk-twitch/client/lib/bs/src/components/App' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src/graphql-types' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/components' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/private' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/graphql_ppx/ppx' -ppx ''\''/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/reactjs_jsx_ppx_2.exe'\''' -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/.lsp/App.ast with pwd /Users/lanceharper/Repositories/jerk-twitch/client
Sending response {"id": 548, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, Pervasives, HeartContainer, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 28, "character": 4}, "end": {"line": 28, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":549,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":19,"character":2},"end":{"line":21,"character":3}},"context":{"diagnostics":[{"range":{"start":{"line":20,"character":6},"end":{"line":20,"character":7}},"message":"Error: Unknown field on type Query","severity":1}]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00596046447754ms
Sending response {"id": 549, "jsonrpc": "2.0", "result": null}
Running diagnostics for file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re
type error here [1mFile "[1m", line 21, characters 4-12[0m[0m:
[1;31mError[0m: Must select subfields on objects
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re", "diagnostics": [{"range": {"start": {"line": 20, "character": 4}, "end": {"line": 20, "character": 12}}, "message": "Error: Must select subfields on objects", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","id":550,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.00810623168945ms
Sending response {"id": 550, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, Pervasives, HeartContainer, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 28, "character": 4}, "end": {"line": 28, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":551,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":19,"character":2},"end":{"line":21,"character":3}},"context":{"diagnostics":[{"range":{"start":{"line":20,"character":4},"end":{"line":20,"character":12}},"message":"Error: Must select subfields on objects","severity":1}]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00596046447754ms
Sending response {"id": 551, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re","version":222},"contentChanges":[{"text":"/* App is the actual entry point for the application. It matches on the route prop to determine which\n   sub-component to render */\nopen BsReactNative;\nopen Twitch;\n\ntype item = {clickedInWave: bool};\n\ntype state = list(item);\n\ntype clicked = bool;\n\ntype action =\n  | Click(clicked)\n  | Reset;\nlet tempCounterStyle = Style.(style([color(String(\"lightblue\"))]));\n\nlet component = ReasonReact.reducerComponent(\"App\");\n\nmodule GetAllJerks = [%graphql {|\n  {\n    getJerks\n  }\n|}];\n\nmodule GetAllJerksQuery = ReasonApollo.CreateQuery(GetAllJerks);\n\nlet styles =\n  StyleSheet.create(\n    Style.{\n      \"explodeHeart\":\n        style([left(Pt(0.)), top(Pt(0.)), position(Absolute)]),\n    },\n  );\n\nlet make = _children => {\n  ...component,\n  didMount: _ => onAuthorized(twitchAuth => Js.log(clientIdGet(twitchAuth))),\n\n  initialState: () => [],\n\n  reducer: (action, state) =>\n    switch (action) {\n    | Click(clicked) =>\n      clicked ?\n        ReasonReact.Update([{clickedInWave: true}, ...state]) :\n        ReasonReact.NoUpdate\n    | Reset => ReasonReact.Update([])\n    },\n\n  render: self =>\n    <ReasonApollo.Provider client=Client.instance>\n      <GetAllJerksQuery>\n        ...{({result, _}) =>\n          switch (result) {\n          | Loading => <Text> {\"Loading\" |> ReasonReact.string} </Text>\n          | Error(_e) => <Text> {\"Error\" |> ReasonReact.string} </View>\n          | Data(_) =>\n            <View>\n              <HeartContainer>\n                <Heart filled=true style={styles##explodeHeart} />\n                <Heart filled=true style={styles##explodeHeart} />\n              </HeartContainer>\n              {self.state |> List.length >= 5 ?\n                 <Wave onFinish={_event => self.send(Reset)} /> :\n                 ReasonReact.null}\n              <TriggerContainer onPress={_event => self.send(Click(true))} />\n              <Text style=tempCounterStyle>\n                {ReasonReact.string(string_of_int(self.state |> List.length))}\n              </Text>\n            </View>\n          }\n        }\n      </GetAllJerksQuery>\n    </ReasonApollo.Provider>,\n};\n\nlet default = ReasonReact.wrapReasonForJs(~component, _ => make([||]));"}]}}
Read message 
{"jsonrpc":"2.0","id":552,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0131130218506ms
➡️ running bsc /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/lanceharper/Repositories/jerk-twitch/client/lib/bs/src/components/App' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src/graphql-types' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/components' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/private' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/graphql_ppx/ppx' -ppx ''\''/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/reactjs_jsx_ppx_2.exe'\''' -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/.lsp/App.ast with pwd /Users/lanceharper/Repositories/jerk-twitch/client
Sending response {"id": 552, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, Pervasives, HeartContainer, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 28, "character": 4}, "end": {"line": 28, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":553,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":55,"character":66},"end":{"line":55,"character":70}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00596046447754ms
Sending response {"id": 553, "jsonrpc": "2.0", "result": null}
Running diagnostics for file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re", "diagnostics": [{"range": {"start": {"line": 55, "character": 25}, "end": {"line": 55, "character": 71}}, "message": "Error: Start tag <Text> does not match end tag </View>", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","id":554,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.00691413879395ms
Sending response {"id": 554, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, Pervasives, HeartContainer, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 28, "character": 4}, "end": {"line": 28, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re","version":223},"contentChanges":[{"text":"/* App is the actual entry point for the application. It matches on the route prop to determine which\n   sub-component to render */\nopen BsReactNative;\nopen Twitch;\n\ntype item = {clickedInWave: bool};\n\ntype state = list(item);\n\ntype clicked = bool;\n\ntype action =\n  | Click(clicked)\n  | Reset;\nlet tempCounterStyle = Style.(style([color(String(\"lightblue\"))]));\n\nlet component = ReasonReact.reducerComponent(\"App\");\n\nmodule GetAllJerks = [%graphql {|\n  {\n    getJerks\n  }\n|}];\n\nmodule GetAllJerksQuery = ReasonApollo.CreateQuery(GetAllJerks);\n\nlet styles =\n  StyleSheet.create(\n    Style.{\n      \"explodeHeart\":\n        style([left(Pt(0.)), top(Pt(0.)), position(Absolute)]),\n    },\n  );\n\nlet make = _children => {\n  ...component,\n  didMount: _ => onAuthorized(twitchAuth => Js.log(clientIdGet(twitchAuth))),\n\n  initialState: () => [],\n\n  reducer: (action, state) =>\n    switch (action) {\n    | Click(clicked) =>\n      clicked ?\n        ReasonReact.Update([{clickedInWave: true}, ...state]) :\n        ReasonReact.NoUpdate\n    | Reset => ReasonReact.Update([])\n    },\n\n  render: self =>\n    <ReasonApollo.Provider client=Client.instance>\n      <GetAllJerksQuery>\n        ...{({result, _}) =>\n          switch (result) {\n          | Loading => <Text> {\"Loading\" |> ReasonReact.string} </Text>\n          | Error(_e) => <Text> {\"Error\" |> ReasonReact.string} </Text>\n          | Data(_) =>\n            <View>\n              <HeartContainer>\n                <Heart filled=true style={styles##explodeHeart} />\n                <Heart filled=true style={styles##explodeHeart} />\n              </HeartContainer>\n              {self.state |> List.length >= 5 ?\n                 <Wave onFinish={_event => self.send(Reset)} /> :\n                 ReasonReact.null}\n              <TriggerContainer onPress={_event => self.send(Click(true))} />\n              <Text style=tempCounterStyle>\n                {ReasonReact.string(string_of_int(self.state |> List.length))}\n              </Text>\n            </View>\n          }\n        }\n      </GetAllJerksQuery>\n    </ReasonApollo.Provider>,\n};\n\nlet default = ReasonReact.wrapReasonForJs(~component, _ => make([||]));"}]}}
Read message 
{"jsonrpc":"2.0","id":555,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.00691413879395ms
➡️ running bsc /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/lanceharper/Repositories/jerk-twitch/client/lib/bs/src/components/App' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src/graphql-types' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/components' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/private' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/graphql_ppx/ppx' -ppx ''\''/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/reactjs_jsx_ppx_2.exe'\''' -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/.lsp/App.ast with pwd /Users/lanceharper/Repositories/jerk-twitch/client
Sending response {"id": 555, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, Pervasives, HeartContainer, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 28, "character": 4}, "end": {"line": 28, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":556,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.00691413879395ms
Sending response {"id": 556, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, Pervasives, HeartContainer, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 28, "character": 4}, "end": {"line": 28, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":557,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":55,"character":70},"end":{"line":55,"character":70}},"context":{"diagnostics":[{"range":{"start":{"line":55,"character":25},"end":{"line":55,"character":71}},"message":"Error: Start tag <Text> does not match end tag </View>","severity":1}]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00715255737305ms
Sending response {"id": 557, "jsonrpc": "2.0", "result": null}
Running diagnostics for file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re
type error here [1mFile "[1m", line 21, characters 4-12[0m[0m:
[1;31mError[0m: Must select subfields on objects
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re", "diagnostics": [{"range": {"start": {"line": 20, "character": 4}, "end": {"line": 20, "character": 12}}, "message": "Error: Must select subfields on objects", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","id":558,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":55,"character":70},"end":{"line":55,"character":70}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0109672546387ms
Sending response {"id": 558, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re","version":224},"contentChanges":[{"text":"/* App is the actual entry point for the application. It matches on the route prop to determine which\n   sub-component to render */\nopen BsReactNative;\nopen Twitch;\n\ntype item = {clickedInWave: bool};\n\ntype state = list(item);\n\ntype clicked = bool;\n\ntype action =\n  | Click(clicked)\n  | Reset;\nlet tempCounterStyle = Style.(style([color(String(\"lightblue\"))]));\n\nlet component = ReasonReact.reducerComponent(\"App\");\n\nmodule GetAllJerks = [%graphql {|\n  query getPokemon($name: String!){\n      pokemon(name: $name) {\n          name\n      }\n  }\n|}];\n\nmodule GetAllJerksQuery = ReasonApollo.CreateQuery(GetAllJerks);\n\nlet styles =\n  StyleSheet.create(\n    Style.{\n      \"explodeHeart\":\n        style([left(Pt(0.)), top(Pt(0.)), position(Absolute)]),\n    },\n  );\n\nlet make = _children => {\n  ...component,\n  didMount: _ => onAuthorized(twitchAuth => Js.log(clientIdGet(twitchAuth))),\n\n  initialState: () => [],\n\n  reducer: (action, state) =>\n    switch (action) {\n    | Click(clicked) =>\n      clicked ?\n        ReasonReact.Update([{clickedInWave: true}, ...state]) :\n        ReasonReact.NoUpdate\n    | Reset => ReasonReact.Update([])\n    },\n\n  render: self =>\n    <ReasonApollo.Provider client=Client.instance>\n      <GetAllJerksQuery>\n        ...{({result, _}) =>\n          switch (result) {\n          | Loading => <Text> {\"Loading\" |> ReasonReact.string} </Text>\n          | Error(_e) => <Text> {\"Error\" |> ReasonReact.string} </Text>\n          | Data(_) =>\n            <View>\n              <HeartContainer>\n                <Heart filled=true style={styles##explodeHeart} />\n                <Heart filled=true style={styles##explodeHeart} />\n              </HeartContainer>\n              {self.state |> List.length >= 5 ?\n                 <Wave onFinish={_event => self.send(Reset)} /> :\n                 ReasonReact.null}\n              <TriggerContainer onPress={_event => self.send(Click(true))} />\n              <Text style=tempCounterStyle>\n                {ReasonReact.string(string_of_int(self.state |> List.length))}\n              </Text>\n            </View>\n          }\n        }\n      </GetAllJerksQuery>\n    </ReasonApollo.Provider>,\n};\n\nlet default = ReasonReact.wrapReasonForJs(~component, _ => make([||]));"}]}}
Read message 
{"jsonrpc":"2.0","id":559,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.018835067749ms
➡️ running bsc /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/lanceharper/Repositories/jerk-twitch/client/lib/bs/src/components/App' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src/graphql-types' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/components' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/private' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/graphql_ppx/ppx' -ppx ''\''/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/reactjs_jsx_ppx_2.exe'\''' -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/.lsp/App.ast with pwd /Users/lanceharper/Repositories/jerk-twitch/client
Sending response {"id": 559, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, Pervasives, HeartContainer, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 28, "character": 4}, "end": {"line": 28, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":560,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":23,"character":3},"end":{"line":23,"character":3}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00500679016113ms
Sending response {"id": 560, "jsonrpc": "2.0", "result": null}
Running diagnostics for file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re
type error here [1mFile "[1m", line 21, characters 6-7[0m[0m:
[1;31mError[0m: Unknown field on type Query
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re", "diagnostics": [{"range": {"start": {"line": 20, "character": 6}, "end": {"line": 20, "character": 7}}, "message": "Error: Unknown field on type Query", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","id":561,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0121593475342ms
Sending response {"id": 561, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, Pervasives, HeartContainer, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 28, "character": 4}, "end": {"line": 28, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":562,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":23,"character":3},"end":{"line":23,"character":3}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00715255737305ms
Sending response {"id": 562, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":563,"method":"textDocument/formatting","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"options":{"tabSize":2,"insertSpaces":true}}}
[server] Got a method textDocument/formatting
[server] processing took 0.0131130218506ms
Sending response {"id": 563, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 80, "character": 0}}, "newText": "/* App is the actual entry point for the application. It matches on the route prop to determine which\n   sub-component to render */\nopen BsReactNative;\nopen Twitch;\n\ntype item = {clickedInWave: bool};\n\ntype state = list(item);\n\ntype clicked = bool;\n\ntype action =\n  | Click(clicked)\n  | Reset;\nlet tempCounterStyle = Style.(style([color(String(\"lightblue\"))]));\n\nlet component = ReasonReact.reducerComponent(\"App\");\n\nmodule GetAllJerks = [%graphql\n  {|\n  query getPokemon($name: String!){\n      pokemon(name: $name) {\n          name\n      }\n  }\n|}\n];\n\nmodule GetAllJerksQuery = ReasonApollo.CreateQuery(GetAllJerks);\n\nlet styles =\n  StyleSheet.create(\n    Style.{\n      \"explodeHeart\":\n        style([left(Pt(0.)), top(Pt(0.)), position(Absolute)]),\n    },\n  );\n\nlet make = _children => {\n  ...component,\n  didMount: _ => onAuthorized(twitchAuth => Js.log(clientIdGet(twitchAuth))),\n\n  initialState: () => [],\n\n  reducer: (action, state) =>\n    switch (action) {\n    | Click(clicked) =>\n      clicked ?\n        ReasonReact.Update([{clickedInWave: true}, ...state]) :\n        ReasonReact.NoUpdate\n    | Reset => ReasonReact.Update([])\n    },\n\n  render: self =>\n    <ReasonApollo.Provider client=Client.instance>\n      <GetAllJerksQuery>\n        ...{({result, _}) =>\n          switch (result) {\n          | Loading => <Text> {\"Loading\" |> ReasonReact.string} </Text>\n          | Error(_e) => <Text> {\"Error\" |> ReasonReact.string} </Text>\n          | Data(_) =>\n            <View>\n              <HeartContainer>\n                <Heart filled=true style={styles##explodeHeart} />\n                <Heart filled=true style={styles##explodeHeart} />\n              </HeartContainer>\n              {self.state |> List.length >= 5 ?\n                 <Wave onFinish={_event => self.send(Reset)} /> :\n                 ReasonReact.null}\n              <TriggerContainer onPress={_event => self.send(Click(true))} />\n              <Text style=tempCounterStyle>\n                {ReasonReact.string(string_of_int(self.state |> List.length))}\n              </Text>\n            </View>\n          }\n        }\n      </GetAllJerksQuery>\n    </ReasonApollo.Provider>,\n};\n\nlet default = ReasonReact.wrapReasonForJs(~component, _ => make([||]));"}]}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re","version":225},"contentChanges":[{"text":"/* App is the actual entry point for the application. It matches on the route prop to determine which\n   sub-component to render */\nopen BsReactNative;\nopen Twitch;\n\ntype item = {clickedInWave: bool};\n\ntype state = list(item);\n\ntype clicked = bool;\n\ntype action =\n  | Click(clicked)\n  | Reset;\nlet tempCounterStyle = Style.(style([color(String(\"lightblue\"))]));\n\nlet component = ReasonReact.reducerComponent(\"App\");\n\nmodule GetAllJerks = [%graphql\n  {|\n  query getPokemon($name: String!){\n      pokemon(name: $name) {\n          name\n      }\n  }\n|}\n];\n\nmodule GetAllJerksQuery = ReasonApollo.CreateQuery(GetAllJerks);\n\nlet styles =\n  StyleSheet.create(\n    Style.{\n      \"explodeHeart\":\n        style([left(Pt(0.)), top(Pt(0.)), position(Absolute)]),\n    },\n  );\n\nlet make = _children => {\n  ...component,\n  didMount: _ => onAuthorized(twitchAuth => Js.log(clientIdGet(twitchAuth))),\n\n  initialState: () => [],\n\n  reducer: (action, state) =>\n    switch (action) {\n    | Click(clicked) =>\n      clicked ?\n        ReasonReact.Update([{clickedInWave: true}, ...state]) :\n        ReasonReact.NoUpdate\n    | Reset => ReasonReact.Update([])\n    },\n\n  render: self =>\n    <ReasonApollo.Provider client=Client.instance>\n      <GetAllJerksQuery>\n        ...{({result, _}) =>\n          switch (result) {\n          | Loading => <Text> {\"Loading\" |> ReasonReact.string} </Text>\n          | Error(_e) => <Text> {\"Error\" |> ReasonReact.string} </Text>\n          | Data(_) =>\n            <View>\n              <HeartContainer>\n                <Heart filled=true style={styles##explodeHeart} />\n                <Heart filled=true style={styles##explodeHeart} />\n              </HeartContainer>\n              {self.state |> List.length >= 5 ?\n                 <Wave onFinish={_event => self.send(Reset)} /> :\n                 ReasonReact.null}\n              <TriggerContainer onPress={_event => self.send(Click(true))} />\n              <Text style=tempCounterStyle>\n                {ReasonReact.string(string_of_int(self.state |> List.length))}\n              </Text>\n            </View>\n          }\n        }\n      </GetAllJerksQuery>\n    </ReasonApollo.Provider>,\n};\n\nlet default = ReasonReact.wrapReasonForJs(~component, _ => make([||]));"}]}}
Read message 
{"jsonrpc":"2.0","id":564,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.00905990600586ms
➡️ running bsc /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/lanceharper/Repositories/jerk-twitch/client/lib/bs/src/components/App' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src/graphql-types' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/components' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/private' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/graphql_ppx/ppx' -ppx ''\''/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/reactjs_jsx_ppx_2.exe'\''' -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/.lsp/App.ast with pwd /Users/lanceharper/Repositories/jerk-twitch/client
Sending response {"id": 564, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, Pervasives, HeartContainer, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 28, "character": 4}, "end": {"line": 28, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":565,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":24,"character":3},"end":{"line":24,"character":3}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00596046447754ms
Sending response {"id": 565, "jsonrpc": "2.0", "result": null}
Running diagnostics for file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re
type error here [1mFile "[1m", line 22, characters 6-7[0m[0m:
[1;31mError[0m: Unknown field on type Query
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re", "diagnostics": [{"range": {"start": {"line": 21, "character": 6}, "end": {"line": 21, "character": 7}}, "message": "Error: Unknown field on type Query", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","id":566,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0119209289551ms
Sending response {"id": 566, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, Pervasives, HeartContainer, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 28, "character": 4}, "end": {"line": 28, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":567,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":24,"character":3},"end":{"line":24,"character":3}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00691413879395ms
Sending response {"id": 567, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re","version":226},"contentChanges":[{"text":"/* App is the actual entry point for the application. It matches on the route prop to determine which\n   sub-component to render */\nopen BsReactNative;\nopen Twitch;\n\ntype item = {clickedInWave: bool};\n\ntype state = list(item);\n\ntype clicked = bool;\n\ntype action =\n  | Click(clicked)\n  | Reset;\nlet tempCounterStyle = Style.(style([color(String(\"lightblue\"))]));\n\nlet component = ReasonReact.reducerComponent(\"App\");\n\nmodule GetAllJerks = [%graphql {|\n  query getPokemon($name: String!){\n      pokemon(name: $name) {\n          name\n      }\n  }\n|}];\n\nmodule GetAllJerksQuery = ReasonApollo.CreateQuery(GetAllJerks);\n\nlet styles =\n  StyleSheet.create(\n    Style.{\n      \"explodeHeart\":\n        style([left(Pt(0.)), top(Pt(0.)), position(Absolute)]),\n    },\n  );\n\nlet make = _children => {\n  ...component,\n  didMount: _ => onAuthorized(twitchAuth => Js.log(clientIdGet(twitchAuth))),\n\n  initialState: () => [],\n\n  reducer: (action, state) =>\n    switch (action) {\n    | Click(clicked) =>\n      clicked ?\n        ReasonReact.Update([{clickedInWave: true}, ...state]) :\n        ReasonReact.NoUpdate\n    | Reset => ReasonReact.Update([])\n    },\n\n  render: self =>\n    <ReasonApollo.Provider client=Client.instance>\n      <GetAllJerksQuery>\n        ...{({result, _}) =>\n          switch (result) {\n          | Loading => <Text> {\"Loading\" |> ReasonReact.string} </Text>\n          | Error(_e) => <Text> {\"Error\" |> ReasonReact.string} </Text>\n          | Data(_) =>\n            <View>\n              <HeartContainer>\n                <Heart filled=true style={styles##explodeHeart} />\n                <Heart filled=true style={styles##explodeHeart} />\n              </HeartContainer>\n              {self.state |> List.length >= 5 ?\n                 <Wave onFinish={_event => self.send(Reset)} /> :\n                 ReasonReact.null}\n              <TriggerContainer onPress={_event => self.send(Click(true))} />\n              <Text style=tempCounterStyle>\n                {ReasonReact.string(string_of_int(self.state |> List.length))}\n              </Text>\n            </View>\n          }\n        }\n      </GetAllJerksQuery>\n    </ReasonApollo.Provider>,\n};\n\nlet default = ReasonReact.wrapReasonForJs(~component, _ => make([||]));"}]}}
Read message 
{"jsonrpc":"2.0","id":568,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.00810623168945ms
➡️ running bsc /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/lanceharper/Repositories/jerk-twitch/client/lib/bs/src/components/App' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src/graphql-types' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/components' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/private' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/graphql_ppx/ppx' -ppx ''\''/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/reactjs_jsx_ppx_2.exe'\''' -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/.lsp/App.ast with pwd /Users/lanceharper/Repositories/jerk-twitch/client
Sending response {"id": 568, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, Pervasives, HeartContainer, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 28, "character": 4}, "end": {"line": 28, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":569,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":23,"character":3},"end":{"line":23,"character":3}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00500679016113ms
Sending response {"id": 569, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":570,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0131130218506ms
Sending response {"id": 570, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, Pervasives, HeartContainer, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 28, "character": 4}, "end": {"line": 28, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re","version":227},"contentChanges":[{"text":"/* App is the actual entry point for the application. It matches on the route prop to determine which\n   sub-component to render */\nopen BsReactNative;\nopen Twitch;\n\ntype item = {clickedInWave: bool};\n\ntype state = list(item);\n\ntype clicked = bool;\n\ntype action =\n  | Click(clicked)\n  | Reset;\nlet tempCounterStyle = Style.(style([color(String(\"lightblue\"))]));\n\nlet component = ReasonReact.reducerComponent(\"App\");\n\nmodule GetAllJerks = [%graphql {|\n  {\n    getJerks\n  }\n|}];\n\nmodule GetAllJerksQuery = ReasonApollo.CreateQuery(GetAllJerks);\n\nlet styles =\n  StyleSheet.create(\n    Style.{\n      \"explodeHeart\":\n        style([left(Pt(0.)), top(Pt(0.)), position(Absolute)]),\n    },\n  );\n\nlet make = _children => {\n  ...component,\n  didMount: _ => onAuthorized(twitchAuth => Js.log(clientIdGet(twitchAuth))),\n\n  initialState: () => [],\n\n  reducer: (action, state) =>\n    switch (action) {\n    | Click(clicked) =>\n      clicked ?\n        ReasonReact.Update([{clickedInWave: true}, ...state]) :\n        ReasonReact.NoUpdate\n    | Reset => ReasonReact.Update([])\n    },\n\n  render: self =>\n    <ReasonApollo.Provider client=Client.instance>\n      <GetAllJerksQuery>\n        ...{({result, _}) =>\n          switch (result) {\n          | Loading => <Text> {\"Loading\" |> ReasonReact.string} </Text>\n          | Error(_e) => <Text> {\"Error\" |> ReasonReact.string} </Text>\n          | Data(_) =>\n            <View>\n              <HeartContainer>\n                <Heart filled=true style={styles##explodeHeart} />\n                <Heart filled=true style={styles##explodeHeart} />\n              </HeartContainer>\n              {self.state |> List.length >= 5 ?\n                 <Wave onFinish={_event => self.send(Reset)} /> :\n                 ReasonReact.null}\n              <TriggerContainer onPress={_event => self.send(Click(true))} />\n              <Text style=tempCounterStyle>\n                {ReasonReact.string(string_of_int(self.state |> List.length))}\n              </Text>\n            </View>\n          }\n        }\n      </GetAllJerksQuery>\n    </ReasonApollo.Provider>,\n};\n\nlet default = ReasonReact.wrapReasonForJs(~component, _ => make([||]));"}]}}
Read message 
{"jsonrpc":"2.0","id":571,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0112056732178ms
➡️ running bsc /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/lanceharper/Repositories/jerk-twitch/client/lib/bs/src/components/App' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src/graphql-types' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/components' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/private' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/graphql_ppx/ppx' -ppx ''\''/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/reactjs_jsx_ppx_2.exe'\''' -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/.lsp/App.ast with pwd /Users/lanceharper/Repositories/jerk-twitch/client
Sending response {"id": 571, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, Pervasives, HeartContainer, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 28, "character": 4}, "end": {"line": 28, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":572,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":19,"character":2},"end":{"line":21,"character":3}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00596046447754ms
Sending response {"id": 572, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":573,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.00691413879395ms
Sending response {"id": 573, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: ReasonReact, ReasonApollo, Wave, TriggerContainer, Js, Client, Twitch, Heart, BsReactNative, Pervasives, HeartContainer, List", "command": ""}}, {"range": {"start": {"line": 14, "character": 23}, "end": {"line": 14, "character": 28}}, "command": {"title": "3 uses. values: {color, style} types: {string_interpolated [String]}", "command": ""}}, {"range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 18}}, "command": {"title": "3 uses. modules: {StyleSheet, Text, View}", "command": ""}}, {"range": {"start": {"line": 3, "character": 5}, "end": {"line": 3, "character": 11}}, "command": {"title": "2 uses. values: {clientIdGet, onAuthorized}", "command": ""}}, {"range": {"start": {"line": 28, "character": 4}, "end": {"line": 28, "character": 9}}, "command": {"title": "6 uses. values: {left, position, style, top} types: {position [Absolute], pt_pct_animated [Pt]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":574,"method":"textDocument/formatting","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"options":{"tabSize":2,"insertSpaces":true}}}
[server] Got a method textDocument/formatting
[server] processing took 0.0181198120117ms
Sending response {"id": 574, "jsonrpc": "2.0", "result": null}
Running diagnostics for file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re
type error here [1mFile "[1m", line 21, characters 4-12[0m[0m:
[1;31mError[0m: Must select subfields on objects
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re", "diagnostics": [{"range": {"start": {"line": 20, "character": 4}, "end": {"line": 20, "character": 12}}, "message": "Error: Must select subfields on objects", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re","version":227},"contentChanges":[{"text":"/* App is the actual entry point for the application. It matches on the route prop to determine which\n   sub-component to render */\nopen BsReactNative;\nopen Twitch;\n\ntype item = {clickedInWave: bool};\n\ntype state = list(item);\n\ntype clicked = bool;\n\ntype action =\n  | Click(clicked)\n  | Reset;\nlet tempCounterStyle = Style.(style([color(String(\"lightblue\"))]));\n\nlet component = ReasonReact.reducerComponent(\"App\");\n\nmodule GetAllJerks = [%graphql {|\n  {\n    getJerks\n  }\n|}];\n\nmodule GetAllJerksQuery = ReasonApollo.CreateQuery(GetAllJerks);\n\nlet styles =\n  StyleSheet.create(\n    Style.{\n      \"explodeHeart\":\n        style([left(Pt(0.)), top(Pt(0.)), position(Absolute)]),\n    },\n  );\n\nlet make = _children => {\n  ...component,\n  didMount: _ => onAuthorized(twitchAuth => Js.log(clientIdGet(twitchAuth))),\n\n  initialState: () => [],\n\n  reducer: (action, state) =>\n    switch (action) {\n    | Click(clicked) =>\n      clicked ?\n        ReasonReact.Update([{clickedInWave: true}, ...state]) :\n        ReasonReact.NoUpdate\n    | Reset => ReasonReact.Update([])\n    },\n\n  render: self =>\n    <ReasonApollo.Provider client=Client.instance>\n      <GetAllJerksQuery>\n        ...{({result, _}) =>\n          switch (result) {\n          | Loading => <Text> {\"Loading\" |> ReasonReact.string} </Text>\n          | Error(_e) => <Text> {\"Error\" |> ReasonReact.string} </Text>\n          | Data(_) =>\n            <View>\n              <HeartContainer>\n                <Heart filled=true style={styles##explodeHeart} />\n                <Heart filled=true style={styles##explodeHeart} />\n              </HeartContainer>\n              {self.state |> List.length >= 5 ?\n                 <Wave onFinish={_event => self.send(Reset)} /> :\n                 ReasonReact.null}\n              <TriggerContainer onPress={_event => self.send(Click(true))} />\n              <Text style=tempCounterStyle>\n                {ReasonReact.string(string_of_int(self.state |> List.length))}\n              </Text>\n            </View>\n          }\n        }\n      </GetAllJerksQuery>\n    </ReasonApollo.Provider>,\n};\n\nlet default = ReasonReact.wrapReasonForJs(~component, _ => make([||]));"}]}}
Read message 
{"jsonrpc":"2.0","id":575,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":19,"character":2},"end":{"line":21,"character":3}},"context":{"diagnostics":[{"range":{"start":{"line":20,"character":4},"end":{"line":20,"character":12}},"message":"Error: Must select subfields on objects","severity":1}]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0121593475342ms
➡️ running bsc /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/lanceharper/Repositories/jerk-twitch/client/lib/bs/src/components/App' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-apollo/lib/bs/src/graphql-types' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/reason-react/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/components' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-react-native/lib/bs/src/private' -I '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/graphql_ppx/ppx' -ppx ''\''/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/reactjs_jsx_ppx_2.exe'\''' -ppx '/Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/.lsp/App.ast with pwd /Users/lanceharper/Repositories/jerk-twitch/client
Sending response {"id": 575, "jsonrpc": "2.0", "result": null}
Running diagnostics for file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re
type error here [1mFile "[1m", line 21, characters 4-12[0m[0m:
[1;31mError[0m: Must select subfields on objects
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re", "diagnostics": [{"range": {"start": {"line": 20, "character": 4}, "end": {"line": 20, "character": 12}}, "message": "Error: Must select subfields on objects", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","id":576,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":20,"character":9}}}
[server] Got a method textDocument/hover
[server] processing took 0.0109672546387ms
FINDING /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/js_dict.cmti src /Users/lanceharper/Repositories/jerk-twitch/client/node_modules/bs-platform/lib/ocaml/js_dict.mli
Trying for declared Value 1021 in file file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re
Sending response {"id": 576, "jsonrpc": "2.0", "result": {"range": {"start": {"line": 19, "character": 2}, "end": {"line": 21, "character": 3}}, "contents": {"kind": "markdown", "value": "```\nJs_dict.t(Js.Json.t)\n```\n\n```\ntype t('a)\n```\n\n<root>/client/src/components/App/App.re"}}}
Read message 
{"jsonrpc":"2.0","id":577,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"position":{"line":24,"character":18}}}
[server] Got a method textDocument/hover
[server] processing took 0.0109672546387ms
Sending response {"id": 577, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":578,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lanceharper/Repositories/jerk-twitch/client/src/components/App/App.re"},"range":{"start":{"line":21,"character":3},"end":{"line":21,"character":3}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00715255737305ms
Sending response {"id": 578, "jsonrpc": "2.0", "result": null}
